"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AbstractAsyncHooksContextManager.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AbstractAsyncHooksContextManager.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractAsyncHooksContextManager = void 0;\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst ADD_LISTENER_METHODS = [\n    'addListener',\n    'on',\n    'once',\n    'prependListener',\n    'prependOnceListener',\n];\nclass AbstractAsyncHooksContextManager {\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    bind(context, target) {\n        if (target instanceof events_1.EventEmitter) {\n            return this._bindEventEmitter(context, target);\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    }\n    _bindFunction(context, target) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        /**\n         * It isn't possible to tell Typescript that contextWrapper is the same as T\n         * so we forced to cast as any here.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return contextWrapper;\n    }\n    /**\n     * By default, EventEmitter call their callback with their context, which we do\n     * not want, instead we will bind a specific context to all callbacks that\n     * go through it.\n     * @param context the context we want to bind\n     * @param ee EventEmitter an instance of EventEmitter to patch\n     */\n    _bindEventEmitter(context, ee) {\n        const map = this._getPatchMap(ee);\n        if (map !== undefined)\n            return ee;\n        this._createPatchMap(ee);\n        // patch methods that add a listener to propagate context\n        ADD_LISTENER_METHODS.forEach(methodName => {\n            if (ee[methodName] === undefined)\n                return;\n            ee[methodName] = this._patchAddListener(ee, ee[methodName], context);\n        });\n        // patch methods that remove a listener\n        if (typeof ee.removeListener === 'function') {\n            ee.removeListener = this._patchRemoveListener(ee, ee.removeListener);\n        }\n        if (typeof ee.off === 'function') {\n            ee.off = this._patchRemoveListener(ee, ee.off);\n        }\n        // patch method that remove all listeners\n        if (typeof ee.removeAllListeners === 'function') {\n            ee.removeAllListeners = this._patchRemoveAllListeners(ee, ee.removeAllListeners);\n        }\n        return ee;\n    }\n    /**\n     * Patch methods that remove a given listener so that we match the \"patched\"\n     * version of that listener (the one that propagate context).\n     * @param ee EventEmitter instance\n     * @param original reference to the patched method\n     */\n    _patchRemoveListener(ee, original) {\n        const contextManager = this;\n        return function (event, listener) {\n            const events = contextManager._getPatchMap(ee)?.[event];\n            if (events === undefined) {\n                return original.call(this, event, listener);\n            }\n            const patchedListener = events.get(listener);\n            return original.call(this, event, patchedListener || listener);\n        };\n    }\n    /**\n     * Patch methods that remove all listeners so we remove our\n     * internal references for a given event.\n     * @param ee EventEmitter instance\n     * @param original reference to the patched method\n     */\n    _patchRemoveAllListeners(ee, original) {\n        const contextManager = this;\n        return function (event) {\n            const map = contextManager._getPatchMap(ee);\n            if (map !== undefined) {\n                if (arguments.length === 0) {\n                    contextManager._createPatchMap(ee);\n                }\n                else if (map[event] !== undefined) {\n                    delete map[event];\n                }\n            }\n            return original.apply(this, arguments);\n        };\n    }\n    /**\n     * Patch methods on an event emitter instance that can add listeners so we\n     * can force them to propagate a given context.\n     * @param ee EventEmitter instance\n     * @param original reference to the patched method\n     * @param [context] context to propagate when calling listeners\n     */\n    _patchAddListener(ee, original, context) {\n        const contextManager = this;\n        return function (event, listener) {\n            /**\n             * This check is required to prevent double-wrapping the listener.\n             * The implementation for ee.once wraps the listener and calls ee.on.\n             * Without this check, we would wrap that wrapped listener.\n             * This causes an issue because ee.removeListener depends on the onceWrapper\n             * to properly remove the listener. If we wrap their wrapper, we break\n             * that detection.\n             */\n            if (contextManager._wrapped) {\n                return original.call(this, event, listener);\n            }\n            let map = contextManager._getPatchMap(ee);\n            if (map === undefined) {\n                map = contextManager._createPatchMap(ee);\n            }\n            let listeners = map[event];\n            if (listeners === undefined) {\n                listeners = new WeakMap();\n                map[event] = listeners;\n            }\n            const patchedListener = contextManager.bind(context, listener);\n            // store a weak reference of the user listener to ours\n            listeners.set(listener, patchedListener);\n            /**\n             * See comment at the start of this function for the explanation of this property.\n             */\n            contextManager._wrapped = true;\n            try {\n                return original.call(this, event, patchedListener);\n            }\n            finally {\n                contextManager._wrapped = false;\n            }\n        };\n    }\n    _createPatchMap(ee) {\n        const map = Object.create(null);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ee[this._kOtListeners] = map;\n        return map;\n    }\n    _getPatchMap(ee) {\n        return ee[this._kOtListeners];\n    }\n    _kOtListeners = Symbol('OtListeners');\n    _wrapped = false;\n}\nexports.AbstractAsyncHooksContextManager = AbstractAsyncHooksContextManager;\n//# sourceMappingURL=AbstractAsyncHooksContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AbstractAsyncHooksContextManager.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncHooksContextManager.js":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncHooksContextManager.js ***!
  \****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncHooksContextManager = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst asyncHooks = __webpack_require__(/*! async_hooks */ \"async_hooks\");\nconst AbstractAsyncHooksContextManager_1 = __webpack_require__(/*! ./AbstractAsyncHooksContextManager */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AbstractAsyncHooksContextManager.js\");\nclass AsyncHooksContextManager extends AbstractAsyncHooksContextManager_1.AbstractAsyncHooksContextManager {\n    _asyncHook;\n    _contexts = new Map();\n    _stack = [];\n    constructor() {\n        super();\n        this._asyncHook = asyncHooks.createHook({\n            init: this._init.bind(this),\n            before: this._before.bind(this),\n            after: this._after.bind(this),\n            destroy: this._destroy.bind(this),\n            promiseResolve: this._destroy.bind(this),\n        });\n    }\n    active() {\n        return this._stack[this._stack.length - 1] ?? api_1.ROOT_CONTEXT;\n    }\n    with(context, fn, thisArg, ...args) {\n        this._enterContext(context);\n        try {\n            return fn.call(thisArg, ...args);\n        }\n        finally {\n            this._exitContext();\n        }\n    }\n    enable() {\n        this._asyncHook.enable();\n        return this;\n    }\n    disable() {\n        this._asyncHook.disable();\n        this._contexts.clear();\n        this._stack = [];\n        return this;\n    }\n    /**\n     * Init hook will be called when userland create a async context, setting the\n     * context as the current one if it exist.\n     * @param uid id of the async context\n     * @param type the resource type\n     */\n    _init(uid, type) {\n        // ignore TIMERWRAP as they combine timers with same timeout which can lead to\n        // false context propagation. TIMERWRAP has been removed in node 11\n        // every timer has it's own `Timeout` resource anyway which is used to propagate\n        // context.\n        if (type === 'TIMERWRAP')\n            return;\n        const context = this._stack[this._stack.length - 1];\n        if (context !== undefined) {\n            this._contexts.set(uid, context);\n        }\n    }\n    /**\n     * Destroy hook will be called when a given context is no longer used so we can\n     * remove its attached context.\n     * @param uid uid of the async context\n     */\n    _destroy(uid) {\n        this._contexts.delete(uid);\n    }\n    /**\n     * Before hook is called just before executing a async context.\n     * @param uid uid of the async context\n     */\n    _before(uid) {\n        const context = this._contexts.get(uid);\n        if (context !== undefined) {\n            this._enterContext(context);\n        }\n    }\n    /**\n     * After hook is called just after completing the execution of a async context.\n     */\n    _after() {\n        this._exitContext();\n    }\n    /**\n     * Set the given context as active\n     */\n    _enterContext(context) {\n        this._stack.push(context);\n    }\n    /**\n     * Remove the context at the root of the stack\n     */\n    _exitContext() {\n        this._stack.pop();\n    }\n}\nexports.AsyncHooksContextManager = AsyncHooksContextManager;\n//# sourceMappingURL=AsyncHooksContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStjb250ZXh0LWFzeW5jLWhvb2tzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1hc3luYy1ob29rcy9idWlsZC9zcmMvQXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyxjQUFjLG1CQUFPLENBQUMsNklBQW9CO0FBQzFDLG1CQUFtQixtQkFBTyxDQUFDLGdDQUFhO0FBQ3hDLDJDQUEyQyxtQkFBTyxDQUFDLGlQQUFvQztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStjb250ZXh0LWFzeW5jLWhvb2tzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1hc3luYy1ob29rcy9idWlsZC9zcmMvQXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyLmpzPzk1MGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Bc3luY0hvb2tzQ29udGV4dE1hbmFnZXIgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBhc3luY0hvb2tzID0gcmVxdWlyZShcImFzeW5jX2hvb2tzXCIpO1xuY29uc3QgQWJzdHJhY3RBc3luY0hvb2tzQ29udGV4dE1hbmFnZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0QXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyXCIpO1xuY2xhc3MgQXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyIGV4dGVuZHMgQWJzdHJhY3RBc3luY0hvb2tzQ29udGV4dE1hbmFnZXJfMS5BYnN0cmFjdEFzeW5jSG9va3NDb250ZXh0TWFuYWdlciB7XG4gICAgX2FzeW5jSG9vaztcbiAgICBfY29udGV4dHMgPSBuZXcgTWFwKCk7XG4gICAgX3N0YWNrID0gW107XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuX2FzeW5jSG9vayA9IGFzeW5jSG9va3MuY3JlYXRlSG9vayh7XG4gICAgICAgICAgICBpbml0OiB0aGlzLl9pbml0LmJpbmQodGhpcyksXG4gICAgICAgICAgICBiZWZvcmU6IHRoaXMuX2JlZm9yZS5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgYWZ0ZXI6IHRoaXMuX2FmdGVyLmJpbmQodGhpcyksXG4gICAgICAgICAgICBkZXN0cm95OiB0aGlzLl9kZXN0cm95LmJpbmQodGhpcyksXG4gICAgICAgICAgICBwcm9taXNlUmVzb2x2ZTogdGhpcy5fZGVzdHJveS5iaW5kKHRoaXMpLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgYWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RhY2tbdGhpcy5fc3RhY2subGVuZ3RoIC0gMV0gPz8gYXBpXzEuUk9PVF9DT05URVhUO1xuICAgIH1cbiAgICB3aXRoKGNvbnRleHQsIGZuLCB0aGlzQXJnLCAuLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuX2VudGVyQ29udGV4dChjb250ZXh0KTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbi5jYWxsKHRoaXNBcmcsIC4uLmFyZ3MpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5fZXhpdENvbnRleHQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbmFibGUoKSB7XG4gICAgICAgIHRoaXMuX2FzeW5jSG9vay5lbmFibGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRoaXMuX2FzeW5jSG9vay5kaXNhYmxlKCk7XG4gICAgICAgIHRoaXMuX2NvbnRleHRzLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuX3N0YWNrID0gW107XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbml0IGhvb2sgd2lsbCBiZSBjYWxsZWQgd2hlbiB1c2VybGFuZCBjcmVhdGUgYSBhc3luYyBjb250ZXh0LCBzZXR0aW5nIHRoZVxuICAgICAqIGNvbnRleHQgYXMgdGhlIGN1cnJlbnQgb25lIGlmIGl0IGV4aXN0LlxuICAgICAqIEBwYXJhbSB1aWQgaWQgb2YgdGhlIGFzeW5jIGNvbnRleHRcbiAgICAgKiBAcGFyYW0gdHlwZSB0aGUgcmVzb3VyY2UgdHlwZVxuICAgICAqL1xuICAgIF9pbml0KHVpZCwgdHlwZSkge1xuICAgICAgICAvLyBpZ25vcmUgVElNRVJXUkFQIGFzIHRoZXkgY29tYmluZSB0aW1lcnMgd2l0aCBzYW1lIHRpbWVvdXQgd2hpY2ggY2FuIGxlYWQgdG9cbiAgICAgICAgLy8gZmFsc2UgY29udGV4dCBwcm9wYWdhdGlvbi4gVElNRVJXUkFQIGhhcyBiZWVuIHJlbW92ZWQgaW4gbm9kZSAxMVxuICAgICAgICAvLyBldmVyeSB0aW1lciBoYXMgaXQncyBvd24gYFRpbWVvdXRgIHJlc291cmNlIGFueXdheSB3aGljaCBpcyB1c2VkIHRvIHByb3BhZ2F0ZVxuICAgICAgICAvLyBjb250ZXh0LlxuICAgICAgICBpZiAodHlwZSA9PT0gJ1RJTUVSV1JBUCcpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLl9zdGFja1t0aGlzLl9zdGFjay5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKGNvbnRleHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5fY29udGV4dHMuc2V0KHVpZCwgY29udGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVzdHJveSBob29rIHdpbGwgYmUgY2FsbGVkIHdoZW4gYSBnaXZlbiBjb250ZXh0IGlzIG5vIGxvbmdlciB1c2VkIHNvIHdlIGNhblxuICAgICAqIHJlbW92ZSBpdHMgYXR0YWNoZWQgY29udGV4dC5cbiAgICAgKiBAcGFyYW0gdWlkIHVpZCBvZiB0aGUgYXN5bmMgY29udGV4dFxuICAgICAqL1xuICAgIF9kZXN0cm95KHVpZCkge1xuICAgICAgICB0aGlzLl9jb250ZXh0cy5kZWxldGUodWlkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQmVmb3JlIGhvb2sgaXMgY2FsbGVkIGp1c3QgYmVmb3JlIGV4ZWN1dGluZyBhIGFzeW5jIGNvbnRleHQuXG4gICAgICogQHBhcmFtIHVpZCB1aWQgb2YgdGhlIGFzeW5jIGNvbnRleHRcbiAgICAgKi9cbiAgICBfYmVmb3JlKHVpZCkge1xuICAgICAgICBjb25zdCBjb250ZXh0ID0gdGhpcy5fY29udGV4dHMuZ2V0KHVpZCk7XG4gICAgICAgIGlmIChjb250ZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2VudGVyQ29udGV4dChjb250ZXh0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZnRlciBob29rIGlzIGNhbGxlZCBqdXN0IGFmdGVyIGNvbXBsZXRpbmcgdGhlIGV4ZWN1dGlvbiBvZiBhIGFzeW5jIGNvbnRleHQuXG4gICAgICovXG4gICAgX2FmdGVyKCkge1xuICAgICAgICB0aGlzLl9leGl0Q29udGV4dCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGdpdmVuIGNvbnRleHQgYXMgYWN0aXZlXG4gICAgICovXG4gICAgX2VudGVyQ29udGV4dChjb250ZXh0KSB7XG4gICAgICAgIHRoaXMuX3N0YWNrLnB1c2goY29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgY29udGV4dCBhdCB0aGUgcm9vdCBvZiB0aGUgc3RhY2tcbiAgICAgKi9cbiAgICBfZXhpdENvbnRleHQoKSB7XG4gICAgICAgIHRoaXMuX3N0YWNrLnBvcCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyID0gQXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncHooksContextManager.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncLocalStorageContextManager.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncLocalStorageContextManager.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncLocalStorageContextManager = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst async_hooks_1 = __webpack_require__(/*! async_hooks */ \"async_hooks\");\nconst AbstractAsyncHooksContextManager_1 = __webpack_require__(/*! ./AbstractAsyncHooksContextManager */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AbstractAsyncHooksContextManager.js\");\nclass AsyncLocalStorageContextManager extends AbstractAsyncHooksContextManager_1.AbstractAsyncHooksContextManager {\n    _asyncLocalStorage;\n    constructor() {\n        super();\n        this._asyncLocalStorage = new async_hooks_1.AsyncLocalStorage();\n    }\n    active() {\n        return this._asyncLocalStorage.getStore() ?? api_1.ROOT_CONTEXT;\n    }\n    with(context, fn, thisArg, ...args) {\n        const cb = thisArg == null ? fn : fn.bind(thisArg);\n        return this._asyncLocalStorage.run(context, cb, ...args);\n    }\n    enable() {\n        return this;\n    }\n    disable() {\n        this._asyncLocalStorage.disable();\n        return this;\n    }\n}\nexports.AsyncLocalStorageContextManager = AsyncLocalStorageContextManager;\n//# sourceMappingURL=AsyncLocalStorageContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStjb250ZXh0LWFzeW5jLWhvb2tzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1hc3luYy1ob29rcy9idWlsZC9zcmMvQXN5bmNMb2NhbFN0b3JhZ2VDb250ZXh0TWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUM7QUFDdkMsY0FBYyxtQkFBTyxDQUFDLDZJQUFvQjtBQUMxQyxzQkFBc0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUMzQywyQ0FBMkMsbUJBQU8sQ0FBQyxpUEFBb0M7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStjb250ZXh0LWFzeW5jLWhvb2tzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1hc3luYy1ob29rcy9idWlsZC9zcmMvQXN5bmNMb2NhbFN0b3JhZ2VDb250ZXh0TWFuYWdlci5qcz8xODFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXN5bmNMb2NhbFN0b3JhZ2VDb250ZXh0TWFuYWdlciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGFzeW5jX2hvb2tzXzEgPSByZXF1aXJlKFwiYXN5bmNfaG9va3NcIik7XG5jb25zdCBBYnN0cmFjdEFzeW5jSG9va3NDb250ZXh0TWFuYWdlcl8xID0gcmVxdWlyZShcIi4vQWJzdHJhY3RBc3luY0hvb2tzQ29udGV4dE1hbmFnZXJcIik7XG5jbGFzcyBBc3luY0xvY2FsU3RvcmFnZUNvbnRleHRNYW5hZ2VyIGV4dGVuZHMgQWJzdHJhY3RBc3luY0hvb2tzQ29udGV4dE1hbmFnZXJfMS5BYnN0cmFjdEFzeW5jSG9va3NDb250ZXh0TWFuYWdlciB7XG4gICAgX2FzeW5jTG9jYWxTdG9yYWdlO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9hc3luY0xvY2FsU3RvcmFnZSA9IG5ldyBhc3luY19ob29rc18xLkFzeW5jTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIGFjdGl2ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FzeW5jTG9jYWxTdG9yYWdlLmdldFN0b3JlKCkgPz8gYXBpXzEuUk9PVF9DT05URVhUO1xuICAgIH1cbiAgICB3aXRoKGNvbnRleHQsIGZuLCB0aGlzQXJnLCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IGNiID0gdGhpc0FyZyA9PSBudWxsID8gZm4gOiBmbi5iaW5kKHRoaXNBcmcpO1xuICAgICAgICByZXR1cm4gdGhpcy5fYXN5bmNMb2NhbFN0b3JhZ2UucnVuKGNvbnRleHQsIGNiLCAuLi5hcmdzKTtcbiAgICB9XG4gICAgZW5hYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhpcy5fYXN5bmNMb2NhbFN0b3JhZ2UuZGlzYWJsZSgpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLkFzeW5jTG9jYWxTdG9yYWdlQ29udGV4dE1hbmFnZXIgPSBBc3luY0xvY2FsU3RvcmFnZUNvbnRleHRNYW5hZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXN5bmNMb2NhbFN0b3JhZ2VDb250ZXh0TWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncLocalStorageContextManager.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/index.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/index.js ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncLocalStorageContextManager = exports.AsyncHooksContextManager = void 0;\nvar AsyncHooksContextManager_1 = __webpack_require__(/*! ./AsyncHooksContextManager */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncHooksContextManager.js\");\nObject.defineProperty(exports, \"AsyncHooksContextManager\", ({ enumerable: true, get: function () { return AsyncHooksContextManager_1.AsyncHooksContextManager; } }));\nvar AsyncLocalStorageContextManager_1 = __webpack_require__(/*! ./AsyncLocalStorageContextManager */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/AsyncLocalStorageContextManager.js\");\nObject.defineProperty(exports, \"AsyncLocalStorageContextManager\", ({ enumerable: true, get: function () { return AsyncLocalStorageContextManager_1.AsyncLocalStorageContextManager; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStjb250ZXh0LWFzeW5jLWhvb2tzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1hc3luYy1ob29rcy9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDLEdBQUcsZ0NBQWdDO0FBQzFFLGlDQUFpQyxtQkFBTyxDQUFDLGlPQUE0QjtBQUNyRSw0REFBMkQsRUFBRSxxQ0FBcUMsK0RBQStELEVBQUM7QUFDbEssd0NBQXdDLG1CQUFPLENBQUMsK09BQW1DO0FBQ25GLG1FQUFrRSxFQUFFLHFDQUFxQyw2RUFBNkUsRUFBQztBQUN2TCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrY29udGV4dC1hc3luYy1ob29rc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvbnRleHQtYXN5bmMtaG9va3MvYnVpbGQvc3JjL2luZGV4LmpzPzY2NzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Bc3luY0xvY2FsU3RvcmFnZUNvbnRleHRNYW5hZ2VyID0gZXhwb3J0cy5Bc3luY0hvb2tzQ29udGV4dE1hbmFnZXIgPSB2b2lkIDA7XG52YXIgQXN5bmNIb29rc0NvbnRleHRNYW5hZ2VyXzEgPSByZXF1aXJlKFwiLi9Bc3luY0hvb2tzQ29udGV4dE1hbmFnZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBc3luY0hvb2tzQ29udGV4dE1hbmFnZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEFzeW5jSG9va3NDb250ZXh0TWFuYWdlcl8xLkFzeW5jSG9va3NDb250ZXh0TWFuYWdlcjsgfSB9KTtcbnZhciBBc3luY0xvY2FsU3RvcmFnZUNvbnRleHRNYW5hZ2VyXzEgPSByZXF1aXJlKFwiLi9Bc3luY0xvY2FsU3RvcmFnZUNvbnRleHRNYW5hZ2VyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXN5bmNMb2NhbFN0b3JhZ2VDb250ZXh0TWFuYWdlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQXN5bmNMb2NhbFN0b3JhZ2VDb250ZXh0TWFuYWdlcl8xLkFzeW5jTG9jYWxTdG9yYWdlQ29udGV4dE1hbmFnZXI7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+context-async-hooks@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/context-async-hooks/build/src/index.js\n");

/***/ })

};
;