"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js ***!
  \*****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpanNames = exports.TokenKind = exports.AllowedOperationTypes = void 0;\nvar AllowedOperationTypes;\n(function (AllowedOperationTypes) {\n    AllowedOperationTypes[\"QUERY\"] = \"query\";\n    AllowedOperationTypes[\"MUTATION\"] = \"mutation\";\n    AllowedOperationTypes[\"SUBSCRIPTION\"] = \"subscription\";\n})(AllowedOperationTypes = exports.AllowedOperationTypes || (exports.AllowedOperationTypes = {}));\nvar TokenKind;\n(function (TokenKind) {\n    TokenKind[\"SOF\"] = \"<SOF>\";\n    TokenKind[\"EOF\"] = \"<EOF>\";\n    TokenKind[\"BANG\"] = \"!\";\n    TokenKind[\"DOLLAR\"] = \"$\";\n    TokenKind[\"AMP\"] = \"&\";\n    TokenKind[\"PAREN_L\"] = \"(\";\n    TokenKind[\"PAREN_R\"] = \")\";\n    TokenKind[\"SPREAD\"] = \"...\";\n    TokenKind[\"COLON\"] = \":\";\n    TokenKind[\"EQUALS\"] = \"=\";\n    TokenKind[\"AT\"] = \"@\";\n    TokenKind[\"BRACKET_L\"] = \"[\";\n    TokenKind[\"BRACKET_R\"] = \"]\";\n    TokenKind[\"BRACE_L\"] = \"{\";\n    TokenKind[\"PIPE\"] = \"|\";\n    TokenKind[\"BRACE_R\"] = \"}\";\n    TokenKind[\"NAME\"] = \"Name\";\n    TokenKind[\"INT\"] = \"Int\";\n    TokenKind[\"FLOAT\"] = \"Float\";\n    TokenKind[\"STRING\"] = \"String\";\n    TokenKind[\"BLOCK_STRING\"] = \"BlockString\";\n    TokenKind[\"COMMENT\"] = \"Comment\";\n})(TokenKind = exports.TokenKind || (exports.TokenKind = {}));\nvar SpanNames;\n(function (SpanNames) {\n    SpanNames[\"EXECUTE\"] = \"graphql.execute\";\n    SpanNames[\"PARSE\"] = \"graphql.parse\";\n    SpanNames[\"RESOLVE\"] = \"graphql.resolve\";\n    SpanNames[\"VALIDATE\"] = \"graphql.validate\";\n    SpanNames[\"SCHEMA_VALIDATE\"] = \"graphql.validateSchema\";\n    SpanNames[\"SCHEMA_PARSE\"] = \"graphql.parseSchema\";\n})(SpanNames = exports.SpanNames || (exports.SpanNames = {}));\n//# sourceMappingURL=enum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvZW51bS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxpQkFBaUIsR0FBRyw2QkFBNkI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNERBQTRELDZCQUE2QixLQUFLO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQyxpQkFBaUIsS0FBSztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQ0FBb0MsaUJBQWlCLEtBQUs7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1ncmFwaHFsQDAuNTIuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1ncmFwaHFsL2J1aWxkL3NyYy9lbnVtLmpzPzUxNDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGFuTmFtZXMgPSBleHBvcnRzLlRva2VuS2luZCA9IGV4cG9ydHMuQWxsb3dlZE9wZXJhdGlvblR5cGVzID0gdm9pZCAwO1xudmFyIEFsbG93ZWRPcGVyYXRpb25UeXBlcztcbihmdW5jdGlvbiAoQWxsb3dlZE9wZXJhdGlvblR5cGVzKSB7XG4gICAgQWxsb3dlZE9wZXJhdGlvblR5cGVzW1wiUVVFUllcIl0gPSBcInF1ZXJ5XCI7XG4gICAgQWxsb3dlZE9wZXJhdGlvblR5cGVzW1wiTVVUQVRJT05cIl0gPSBcIm11dGF0aW9uXCI7XG4gICAgQWxsb3dlZE9wZXJhdGlvblR5cGVzW1wiU1VCU0NSSVBUSU9OXCJdID0gXCJzdWJzY3JpcHRpb25cIjtcbn0pKEFsbG93ZWRPcGVyYXRpb25UeXBlcyA9IGV4cG9ydHMuQWxsb3dlZE9wZXJhdGlvblR5cGVzIHx8IChleHBvcnRzLkFsbG93ZWRPcGVyYXRpb25UeXBlcyA9IHt9KSk7XG52YXIgVG9rZW5LaW5kO1xuKGZ1bmN0aW9uIChUb2tlbktpbmQpIHtcbiAgICBUb2tlbktpbmRbXCJTT0ZcIl0gPSBcIjxTT0Y+XCI7XG4gICAgVG9rZW5LaW5kW1wiRU9GXCJdID0gXCI8RU9GPlwiO1xuICAgIFRva2VuS2luZFtcIkJBTkdcIl0gPSBcIiFcIjtcbiAgICBUb2tlbktpbmRbXCJET0xMQVJcIl0gPSBcIiRcIjtcbiAgICBUb2tlbktpbmRbXCJBTVBcIl0gPSBcIiZcIjtcbiAgICBUb2tlbktpbmRbXCJQQVJFTl9MXCJdID0gXCIoXCI7XG4gICAgVG9rZW5LaW5kW1wiUEFSRU5fUlwiXSA9IFwiKVwiO1xuICAgIFRva2VuS2luZFtcIlNQUkVBRFwiXSA9IFwiLi4uXCI7XG4gICAgVG9rZW5LaW5kW1wiQ09MT05cIl0gPSBcIjpcIjtcbiAgICBUb2tlbktpbmRbXCJFUVVBTFNcIl0gPSBcIj1cIjtcbiAgICBUb2tlbktpbmRbXCJBVFwiXSA9IFwiQFwiO1xuICAgIFRva2VuS2luZFtcIkJSQUNLRVRfTFwiXSA9IFwiW1wiO1xuICAgIFRva2VuS2luZFtcIkJSQUNLRVRfUlwiXSA9IFwiXVwiO1xuICAgIFRva2VuS2luZFtcIkJSQUNFX0xcIl0gPSBcIntcIjtcbiAgICBUb2tlbktpbmRbXCJQSVBFXCJdID0gXCJ8XCI7XG4gICAgVG9rZW5LaW5kW1wiQlJBQ0VfUlwiXSA9IFwifVwiO1xuICAgIFRva2VuS2luZFtcIk5BTUVcIl0gPSBcIk5hbWVcIjtcbiAgICBUb2tlbktpbmRbXCJJTlRcIl0gPSBcIkludFwiO1xuICAgIFRva2VuS2luZFtcIkZMT0FUXCJdID0gXCJGbG9hdFwiO1xuICAgIFRva2VuS2luZFtcIlNUUklOR1wiXSA9IFwiU3RyaW5nXCI7XG4gICAgVG9rZW5LaW5kW1wiQkxPQ0tfU1RSSU5HXCJdID0gXCJCbG9ja1N0cmluZ1wiO1xuICAgIFRva2VuS2luZFtcIkNPTU1FTlRcIl0gPSBcIkNvbW1lbnRcIjtcbn0pKFRva2VuS2luZCA9IGV4cG9ydHMuVG9rZW5LaW5kIHx8IChleHBvcnRzLlRva2VuS2luZCA9IHt9KSk7XG52YXIgU3Bhbk5hbWVzO1xuKGZ1bmN0aW9uIChTcGFuTmFtZXMpIHtcbiAgICBTcGFuTmFtZXNbXCJFWEVDVVRFXCJdID0gXCJncmFwaHFsLmV4ZWN1dGVcIjtcbiAgICBTcGFuTmFtZXNbXCJQQVJTRVwiXSA9IFwiZ3JhcGhxbC5wYXJzZVwiO1xuICAgIFNwYW5OYW1lc1tcIlJFU09MVkVcIl0gPSBcImdyYXBocWwucmVzb2x2ZVwiO1xuICAgIFNwYW5OYW1lc1tcIlZBTElEQVRFXCJdID0gXCJncmFwaHFsLnZhbGlkYXRlXCI7XG4gICAgU3Bhbk5hbWVzW1wiU0NIRU1BX1ZBTElEQVRFXCJdID0gXCJncmFwaHFsLnZhbGlkYXRlU2NoZW1hXCI7XG4gICAgU3Bhbk5hbWVzW1wiU0NIRU1BX1BBUlNFXCJdID0gXCJncmFwaHFsLnBhcnNlU2NoZW1hXCI7XG59KShTcGFuTmFtZXMgPSBleHBvcnRzLlNwYW5OYW1lcyB8fCAoZXhwb3J0cy5TcGFuTmFtZXMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW51bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AttributeNames = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"SOURCE\"] = \"graphql.source\";\n    AttributeNames[\"FIELD_NAME\"] = \"graphql.field.name\";\n    AttributeNames[\"FIELD_PATH\"] = \"graphql.field.path\";\n    AttributeNames[\"FIELD_TYPE\"] = \"graphql.field.type\";\n    AttributeNames[\"OPERATION_TYPE\"] = \"graphql.operation.type\";\n    AttributeNames[\"OPERATION_NAME\"] = \"graphql.operation.name\";\n    AttributeNames[\"VARIABLES\"] = \"graphql.variables.\";\n    AttributeNames[\"ERROR_VALIDATION_NAME\"] = \"graphql.validation.error\";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvZW51bXMvQXR0cmlidXRlTmFtZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4Q0FBOEMsc0JBQXNCLEtBQUs7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1ncmFwaHFsQDAuNTIuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1ncmFwaHFsL2J1aWxkL3NyYy9lbnVtcy9BdHRyaWJ1dGVOYW1lcy5qcz9iNzhkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgQXR0cmlidXRlTmFtZXM7XG4oZnVuY3Rpb24gKEF0dHJpYnV0ZU5hbWVzKSB7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJTT1VSQ0VcIl0gPSBcImdyYXBocWwuc291cmNlXCI7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJGSUVMRF9OQU1FXCJdID0gXCJncmFwaHFsLmZpZWxkLm5hbWVcIjtcbiAgICBBdHRyaWJ1dGVOYW1lc1tcIkZJRUxEX1BBVEhcIl0gPSBcImdyYXBocWwuZmllbGQucGF0aFwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiRklFTERfVFlQRVwiXSA9IFwiZ3JhcGhxbC5maWVsZC50eXBlXCI7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJPUEVSQVRJT05fVFlQRVwiXSA9IFwiZ3JhcGhxbC5vcGVyYXRpb24udHlwZVwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiT1BFUkFUSU9OX05BTUVcIl0gPSBcImdyYXBocWwub3BlcmF0aW9uLm5hbWVcIjtcbiAgICBBdHRyaWJ1dGVOYW1lc1tcIlZBUklBQkxFU1wiXSA9IFwiZ3JhcGhxbC52YXJpYWJsZXMuXCI7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJFUlJPUl9WQUxJREFUSU9OX05BTUVcIl0gPSBcImdyYXBocWwudmFsaWRhdGlvbi5lcnJvclwiO1xufSkoQXR0cmlidXRlTmFtZXMgPSBleHBvcnRzLkF0dHJpYnV0ZU5hbWVzIHx8IChleHBvcnRzLkF0dHJpYnV0ZU5hbWVzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF0dHJpYnV0ZU5hbWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/index.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/index.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GraphQLInstrumentation = void 0;\nvar instrumentation_1 = __webpack_require__(/*! ./instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js\");\nObject.defineProperty(exports, \"GraphQLInstrumentation\", ({ enumerable: true, get: function () { return instrumentation_1.GraphQLInstrumentation; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLHdCQUF3QixtQkFBTyxDQUFDLHdOQUFtQjtBQUNuRCwwREFBeUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDckoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1ncmFwaHFsQDAuNTIuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1ncmFwaHFsL2J1aWxkL3NyYy9pbmRleC5qcz9lNzAwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR3JhcGhRTEluc3RydW1lbnRhdGlvbiA9IHZvaWQgMDtcbnZhciBpbnN0cnVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkdyYXBoUUxJbnN0cnVtZW50YXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluc3RydW1lbnRhdGlvbl8xLkdyYXBoUUxJbnN0cnVtZW50YXRpb247IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OPERATION_NOT_SUPPORTED = void 0;\nconst symbols_1 = __webpack_require__(/*! ./symbols */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\");\nexports.OPERATION_NOT_SUPPORTED = 'Operation$operationName$not' + ' supported';\n//# sourceMappingURL=internal-types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvaW50ZXJuYWwtdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLGtCQUFrQixtQkFBTyxDQUFDLHdNQUFXO0FBQ3JDLCtCQUErQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWdyYXBocWxAMC41Mi4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL2ludGVybmFsLXR5cGVzLmpzPzhlZmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PUEVSQVRJT05fTk9UX1NVUFBPUlRFRCA9IHZvaWQgMDtcbmNvbnN0IHN5bWJvbHNfMSA9IHJlcXVpcmUoXCIuL3N5bWJvbHNcIik7XG5leHBvcnRzLk9QRVJBVElPTl9OT1RfU1VQUE9SVEVEID0gJ09wZXJhdGlvbiRvcGVyYXRpb25OYW1lJG5vdCcgKyAnIHN1cHBvcnRlZCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbC10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OTEL_GRAPHQL_DATA_SYMBOL = exports.OTEL_PATCHED_SYMBOL = void 0;\nexports.OTEL_PATCHED_SYMBOL = Symbol.for('opentelemetry.patched');\nexports.OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for('opentelemetry.graphql_data');\n//# sourceMappingURL=symbols.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvc3ltYm9scy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0MsR0FBRywyQkFBMkI7QUFDOUQsMkJBQTJCO0FBQzNCLGdDQUFnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWdyYXBocWxAMC41Mi4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL3N5bWJvbHMuanM/ZTAwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9URUxfR1JBUEhRTF9EQVRBX1NZTUJPTCA9IGV4cG9ydHMuT1RFTF9QQVRDSEVEX1NZTUJPTCA9IHZvaWQgMDtcbmV4cG9ydHMuT1RFTF9QQVRDSEVEX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ29wZW50ZWxlbWV0cnkucGF0Y2hlZCcpO1xuZXhwb3J0cy5PVEVMX0dSQVBIUUxfREFUQV9TWU1CT0wgPSBTeW1ib2wuZm9yKCdvcGVudGVsZW1ldHJ5LmdyYXBocWxfZGF0YScpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3ltYm9scy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wrapFieldResolver = exports.wrapFields = exports.getSourceFromLocation = exports.getOperation = exports.endSpan = exports.addSpanSource = exports.addInputVariableAttributes = exports.isPromise = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst enum_1 = __webpack_require__(/*! ./enum */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js\");\nconst symbols_1 = __webpack_require__(/*! ./symbols */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\");\nconst OPERATION_VALUES = Object.values(enum_1.AllowedOperationTypes);\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isPromise.ts\nconst isPromise = (value) => {\n    return typeof value?.then === 'function';\n};\nexports.isPromise = isPromise;\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isObjectLike.ts\nconst isObjectLike = (value) => {\n    return typeof value == 'object' && value !== null;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span, key, variable) {\n    if (Array.isArray(variable)) {\n        variable.forEach((value, idx) => {\n            addInputVariableAttribute(span, `${key}.${idx}`, value);\n        });\n    }\n    else if (variable instanceof Object) {\n        Object.entries(variable).forEach(([nestedKey, value]) => {\n            addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n        });\n    }\n    else {\n        span.setAttribute(`${AttributeNames_1.AttributeNames.VARIABLES}${String(key)}`, variable);\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttributes(span, variableValues) {\n    Object.entries(variableValues).forEach(([key, value]) => {\n        addInputVariableAttribute(span, key, value);\n    });\n}\nexports.addInputVariableAttributes = addInputVariableAttributes;\nfunction addSpanSource(span, loc, allowValues, start, end) {\n    const source = getSourceFromLocation(loc, allowValues, start, end);\n    span.setAttribute(AttributeNames_1.AttributeNames.SOURCE, source);\n}\nexports.addSpanSource = addSpanSource;\nfunction createFieldIfNotExists(tracer, getConfig, contextValue, info, path) {\n    let field = getField(contextValue, path);\n    let spanAdded = false;\n    if (!field) {\n        spanAdded = true;\n        const parent = getParentField(contextValue, path);\n        field = {\n            parent,\n            span: createResolverSpan(tracer, getConfig, contextValue, info, path, parent.span),\n            error: null,\n        };\n        addField(contextValue, path, field);\n    }\n    return { spanAdded, field };\n}\nfunction createResolverSpan(tracer, getConfig, contextValue, info, path, parentSpan) {\n    const attributes = {\n        [AttributeNames_1.AttributeNames.FIELD_NAME]: info.fieldName,\n        [AttributeNames_1.AttributeNames.FIELD_PATH]: path.join('.'),\n        [AttributeNames_1.AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n    };\n    const span = tracer.startSpan(`${enum_1.SpanNames.RESOLVE} ${attributes[AttributeNames_1.AttributeNames.FIELD_PATH]}`, {\n        attributes,\n    }, parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined);\n    const document = contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].source;\n    const fieldNode = info.fieldNodes.find(fieldNode => fieldNode.kind === 'Field');\n    if (fieldNode) {\n        addSpanSource(span, document.loc, getConfig().allowValues, fieldNode.loc?.start, fieldNode.loc?.end);\n    }\n    return span;\n}\nfunction endSpan(span, error) {\n    if (error) {\n        span.recordException(error);\n    }\n    span.end();\n}\nexports.endSpan = endSpan;\nfunction getOperation(document, operationName) {\n    if (!document || !Array.isArray(document.definitions)) {\n        return undefined;\n    }\n    if (operationName) {\n        return document.definitions\n            .filter(definition => OPERATION_VALUES.indexOf(definition?.operation) !== -1)\n            .find(definition => operationName === definition?.name?.value);\n    }\n    else {\n        return document.definitions.find(definition => OPERATION_VALUES.indexOf(definition?.operation) !== -1);\n    }\n}\nexports.getOperation = getOperation;\nfunction addField(contextValue, path, field) {\n    return (contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] =\n        field);\n}\nfunction getField(contextValue, path) {\n    return contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\nfunction getParentField(contextValue, path) {\n    for (let i = path.length - 1; i > 0; i--) {\n        const field = getField(contextValue, path.slice(0, i));\n        if (field) {\n            return field;\n        }\n    }\n    return {\n        span: contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].span,\n    };\n}\nfunction pathToArray(mergeItems, path) {\n    const flattened = [];\n    let curr = path;\n    while (curr) {\n        let key = curr.key;\n        if (mergeItems && typeof key === 'number') {\n            key = '*';\n        }\n        flattened.push(String(key));\n        curr = curr.prev;\n    }\n    return flattened.reverse();\n}\nfunction repeatBreak(i) {\n    return repeatChar('\\n', i);\n}\nfunction repeatSpace(i) {\n    return repeatChar(' ', i);\n}\nfunction repeatChar(char, to) {\n    let text = '';\n    for (let i = 0; i < to; i++) {\n        text += char;\n    }\n    return text;\n}\nconst KindsToBeRemoved = [\n    enum_1.TokenKind.FLOAT,\n    enum_1.TokenKind.STRING,\n    enum_1.TokenKind.INT,\n    enum_1.TokenKind.BLOCK_STRING,\n];\nfunction getSourceFromLocation(loc, allowValues = false, inputStart, inputEnd) {\n    let source = '';\n    if (loc?.startToken) {\n        const start = typeof inputStart === 'number' ? inputStart : loc.start;\n        const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n        let next = loc.startToken.next;\n        let previousLine = 1;\n        while (next) {\n            if (next.start < start) {\n                next = next.next;\n                previousLine = next?.line;\n                continue;\n            }\n            if (next.end > end) {\n                next = next.next;\n                previousLine = next?.line;\n                continue;\n            }\n            let value = next.value || next.kind;\n            let space = '';\n            if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n                // value = repeatChar('*', value.length);\n                value = '*';\n            }\n            if (next.kind === enum_1.TokenKind.STRING) {\n                value = `\"${value}\"`;\n            }\n            if (next.kind === enum_1.TokenKind.EOF) {\n                value = '';\n            }\n            if (next.line > previousLine) {\n                source += repeatBreak(next.line - previousLine);\n                previousLine = next.line;\n                space = repeatSpace(next.column - 1);\n            }\n            else {\n                if (next.line === next.prev?.line) {\n                    space = repeatSpace(next.start - (next.prev?.end || 0));\n                }\n            }\n            source += space + value;\n            if (next) {\n                next = next.next;\n            }\n        }\n    }\n    return source;\n}\nexports.getSourceFromLocation = getSourceFromLocation;\nfunction wrapFields(type, tracer, getConfig) {\n    if (!type ||\n        typeof type.getFields !== 'function' ||\n        type[symbols_1.OTEL_PATCHED_SYMBOL]) {\n        return;\n    }\n    const fields = type.getFields();\n    type[symbols_1.OTEL_PATCHED_SYMBOL] = true;\n    Object.keys(fields).forEach(key => {\n        const field = fields[key];\n        if (!field) {\n            return;\n        }\n        if (field.resolve) {\n            field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n        }\n        if (field.type) {\n            let unwrappedType = field.type;\n            while (unwrappedType.ofType) {\n                unwrappedType = unwrappedType.ofType;\n            }\n            wrapFields(unwrappedType, tracer, getConfig);\n        }\n    });\n}\nexports.wrapFields = wrapFields;\nconst handleResolveSpanError = (resolveSpan, err, shouldEndSpan) => {\n    if (!shouldEndSpan) {\n        return;\n    }\n    resolveSpan.recordException(err);\n    resolveSpan.setStatus({\n        code: api.SpanStatusCode.ERROR,\n        message: err.message,\n    });\n    resolveSpan.end();\n};\nconst handleResolveSpanSuccess = (resolveSpan, shouldEndSpan) => {\n    if (!shouldEndSpan) {\n        return;\n    }\n    resolveSpan.end();\n};\nfunction wrapFieldResolver(tracer, getConfig, fieldResolver, isDefaultResolver = false) {\n    if (wrappedFieldResolver[symbols_1.OTEL_PATCHED_SYMBOL] ||\n        typeof fieldResolver !== 'function') {\n        return fieldResolver;\n    }\n    function wrappedFieldResolver(source, args, contextValue, info) {\n        if (!fieldResolver) {\n            return undefined;\n        }\n        const config = getConfig();\n        // follows what graphql is doing to decide if this is a trivial resolver\n        // for which we don't need to create a resolve span\n        if (config.ignoreTrivialResolveSpans &&\n            isDefaultResolver &&\n            (isObjectLike(source) || typeof source === 'function')) {\n            const property = source[info.fieldName];\n            // a function execution is not trivial and should be recorder.\n            // property which is not a function is just a value and we don't want a \"resolve\" span for it\n            if (typeof property !== 'function') {\n                return fieldResolver.call(this, source, args, contextValue, info);\n            }\n        }\n        if (!contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL]) {\n            return fieldResolver.call(this, source, args, contextValue, info);\n        }\n        const path = pathToArray(config.mergeItems, info && info.path);\n        const depth = path.filter((item) => typeof item === 'string').length;\n        let field;\n        let shouldEndSpan = false;\n        if (config.depth >= 0 && config.depth < depth) {\n            field = getParentField(contextValue, path);\n        }\n        else {\n            const newField = createFieldIfNotExists(tracer, getConfig, contextValue, info, path);\n            field = newField.field;\n            shouldEndSpan = newField.spanAdded;\n        }\n        return api.context.with(api.trace.setSpan(api.context.active(), field.span), () => {\n            try {\n                const res = fieldResolver.call(this, source, args, contextValue, info);\n                if ((0, exports.isPromise)(res)) {\n                    return res.then((r) => {\n                        handleResolveSpanSuccess(field.span, shouldEndSpan);\n                        return r;\n                    }, (err) => {\n                        handleResolveSpanError(field.span, err, shouldEndSpan);\n                        throw err;\n                    });\n                }\n                else {\n                    handleResolveSpanSuccess(field.span, shouldEndSpan);\n                    return res;\n                }\n            }\n            catch (err) {\n                handleResolveSpanError(field.span, err, shouldEndSpan);\n                throw err;\n            }\n        });\n    }\n    wrappedFieldResolver[symbols_1.OTEL_PATCHED_SYMBOL] = true;\n    return wrappedFieldResolver;\n}\nexports.wrapFieldResolver = wrapFieldResolver;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.52.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-graphql';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUI7QUFDOUM7QUFDQSx1QkFBdUI7QUFDdkIsb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tZ3JhcGhxbEAwLjUyLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbC9idWlsZC9zcmMvdmVyc2lvbi5qcz83NmMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNTIuMCc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js ***!
  \****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"14.2.3\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GraphQLInstrumentation = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst enum_1 = __webpack_require__(/*! ./enum */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js\");\nconst symbols_1 = __webpack_require__(/*! ./symbols */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\");\nconst internal_types_1 = __webpack_require__(/*! ./internal-types */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js\");\nconst DEFAULT_CONFIG = {\n    mergeItems: false,\n    depth: -1,\n    allowValues: false,\n    ignoreResolveSpans: false,\n};\nconst supportedVersions = ['>=14.0.0 <17'];\nclass GraphQLInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n    }\n    setConfig(config = {}) {\n        super.setConfig({ ...DEFAULT_CONFIG, ...config });\n    }\n    init() {\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition('graphql', supportedVersions);\n        module.files.push(this._addPatchingExecute());\n        module.files.push(this._addPatchingParser());\n        module.files.push(this._addPatchingValidate());\n        return module;\n    }\n    _addPatchingExecute() {\n        return new instrumentation_1.InstrumentationNodeModuleFile('graphql/execution/execute.js', supportedVersions, \n        // cannot make it work with appropriate type as execute function has 2\n        //types and/cannot import function but only types\n        (moduleExports) => {\n            if ((0, instrumentation_1.isWrapped)(moduleExports.execute)) {\n                this._unwrap(moduleExports, 'execute');\n            }\n            this._wrap(moduleExports, 'execute', this._patchExecute(moduleExports.defaultFieldResolver));\n            return moduleExports;\n        }, moduleExports => {\n            if (moduleExports) {\n                this._unwrap(moduleExports, 'execute');\n            }\n        });\n    }\n    _addPatchingParser() {\n        return new instrumentation_1.InstrumentationNodeModuleFile('graphql/language/parser.js', supportedVersions, (moduleExports) => {\n            if ((0, instrumentation_1.isWrapped)(moduleExports.parse)) {\n                this._unwrap(moduleExports, 'parse');\n            }\n            this._wrap(moduleExports, 'parse', this._patchParse());\n            return moduleExports;\n        }, (moduleExports) => {\n            if (moduleExports) {\n                this._unwrap(moduleExports, 'parse');\n            }\n        });\n    }\n    _addPatchingValidate() {\n        return new instrumentation_1.InstrumentationNodeModuleFile('graphql/validation/validate.js', supportedVersions, moduleExports => {\n            if ((0, instrumentation_1.isWrapped)(moduleExports.validate)) {\n                this._unwrap(moduleExports, 'validate');\n            }\n            this._wrap(moduleExports, 'validate', this._patchValidate());\n            return moduleExports;\n        }, moduleExports => {\n            if (moduleExports) {\n                this._unwrap(moduleExports, 'validate');\n            }\n        });\n    }\n    _patchExecute(defaultFieldResolved) {\n        const instrumentation = this;\n        return function execute(original) {\n            return function patchExecute() {\n                let processedArgs;\n                // case when apollo server is used for example\n                if (arguments.length >= 2) {\n                    const args = arguments;\n                    processedArgs = instrumentation._wrapExecuteArgs(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], defaultFieldResolved);\n                }\n                else {\n                    const args = arguments[0];\n                    processedArgs = instrumentation._wrapExecuteArgs(args.schema, args.document, args.rootValue, args.contextValue, args.variableValues, args.operationName, args.fieldResolver, args.typeResolver, defaultFieldResolved);\n                }\n                const operation = (0, utils_1.getOperation)(processedArgs.document, processedArgs.operationName);\n                const span = instrumentation._createExecuteSpan(operation, processedArgs);\n                processedArgs.contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL] = {\n                    source: processedArgs.document\n                        ? processedArgs.document ||\n                            processedArgs.document[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL]\n                        : undefined,\n                    span,\n                    fields: {},\n                };\n                return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                    return (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n                        return original.apply(this, [\n                            processedArgs,\n                        ]);\n                    }, (err, result) => {\n                        instrumentation._handleExecutionResult(span, err, result);\n                    });\n                });\n            };\n        };\n    }\n    _handleExecutionResult(span, err, result) {\n        const config = this.getConfig();\n        if (result === undefined || err) {\n            (0, utils_1.endSpan)(span, err);\n            return;\n        }\n        if ((0, utils_1.isPromise)(result)) {\n            result.then(resultData => {\n                if (typeof config.responseHook !== 'function') {\n                    (0, utils_1.endSpan)(span);\n                    return;\n                }\n                this._executeResponseHook(span, resultData);\n            }, error => {\n                (0, utils_1.endSpan)(span, error);\n            });\n        }\n        else {\n            if (typeof config.responseHook !== 'function') {\n                (0, utils_1.endSpan)(span);\n                return;\n            }\n            this._executeResponseHook(span, result);\n        }\n    }\n    _executeResponseHook(span, result) {\n        const { responseHook } = this.getConfig();\n        if (!responseHook) {\n            return;\n        }\n        (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n            responseHook(span, result);\n        }, err => {\n            if (err) {\n                this._diag.error('Error running response hook', err);\n            }\n            (0, utils_1.endSpan)(span, undefined);\n        }, true);\n    }\n    _patchParse() {\n        const instrumentation = this;\n        return function parse(original) {\n            return function patchParse(source, options) {\n                return instrumentation._parse(this, original, source, options);\n            };\n        };\n    }\n    _patchValidate() {\n        const instrumentation = this;\n        return function validate(original) {\n            return function patchValidate(schema, documentAST, rules, options, typeInfo) {\n                return instrumentation._validate(this, original, schema, documentAST, rules, typeInfo, options);\n            };\n        };\n    }\n    _parse(obj, original, source, options) {\n        const config = this.getConfig();\n        const span = this.tracer.startSpan(enum_1.SpanNames.PARSE);\n        return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n            return (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n                return original.call(obj, source, options);\n            }, (err, result) => {\n                if (result) {\n                    const operation = (0, utils_1.getOperation)(result);\n                    if (!operation) {\n                        span.updateName(enum_1.SpanNames.SCHEMA_PARSE);\n                    }\n                    else if (result.loc) {\n                        (0, utils_1.addSpanSource)(span, result.loc, config.allowValues);\n                    }\n                }\n                (0, utils_1.endSpan)(span, err);\n            });\n        });\n    }\n    _validate(obj, original, schema, documentAST, rules, typeInfo, options) {\n        const span = this.tracer.startSpan(enum_1.SpanNames.VALIDATE, {});\n        return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n            return (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n                return original.call(obj, schema, documentAST, rules, options, typeInfo);\n            }, (err, errors) => {\n                if (!documentAST.loc) {\n                    span.updateName(enum_1.SpanNames.SCHEMA_VALIDATE);\n                }\n                if (errors && errors.length) {\n                    span.recordException({\n                        name: AttributeNames_1.AttributeNames.ERROR_VALIDATION_NAME,\n                        message: JSON.stringify(errors),\n                    });\n                }\n                (0, utils_1.endSpan)(span, err);\n            });\n        });\n    }\n    _createExecuteSpan(operation, processedArgs) {\n        const config = this.getConfig();\n        const span = this.tracer.startSpan(enum_1.SpanNames.EXECUTE, {});\n        if (operation) {\n            const { operation: operationType, name: nameNode } = operation;\n            span.setAttribute(AttributeNames_1.AttributeNames.OPERATION_TYPE, operationType);\n            const operationName = nameNode?.value;\n            // https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/instrumentation/graphql/\n            // > The span name MUST be of the format <graphql.operation.type> <graphql.operation.name> provided that graphql.operation.type and graphql.operation.name are available.\n            // > If graphql.operation.name is not available, the span SHOULD be named <graphql.operation.type>.\n            if (operationName) {\n                span.setAttribute(AttributeNames_1.AttributeNames.OPERATION_NAME, operationName);\n                span.updateName(`${operationType} ${operationName}`);\n            }\n            else {\n                span.updateName(operationType);\n            }\n        }\n        else {\n            let operationName = ' ';\n            if (processedArgs.operationName) {\n                operationName = ` \"${processedArgs.operationName}\" `;\n            }\n            operationName = internal_types_1.OPERATION_NOT_SUPPORTED.replace('$operationName$', operationName);\n            span.setAttribute(AttributeNames_1.AttributeNames.OPERATION_NAME, operationName);\n        }\n        if (processedArgs.document?.loc) {\n            (0, utils_1.addSpanSource)(span, processedArgs.document.loc, config.allowValues);\n        }\n        if (processedArgs.variableValues && config.allowValues) {\n            (0, utils_1.addInputVariableAttributes)(span, processedArgs.variableValues);\n        }\n        return span;\n    }\n    _wrapExecuteArgs(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver, defaultFieldResolved) {\n        if (!contextValue) {\n            contextValue = {};\n        }\n        if (contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL] ||\n            this.getConfig().ignoreResolveSpans) {\n            return {\n                schema,\n                document,\n                rootValue,\n                contextValue,\n                variableValues,\n                operationName,\n                fieldResolver,\n                typeResolver,\n            };\n        }\n        const isUsingDefaultResolver = fieldResolver == null;\n        // follows graphql implementation here:\n        // https://github.com/graphql/graphql-js/blob/0b7daed9811731362c71900e12e5ea0d1ecc7f1f/src/execution/execute.ts#L494\n        const fieldResolverForExecute = fieldResolver ?? defaultFieldResolved;\n        fieldResolver = (0, utils_1.wrapFieldResolver)(this.tracer, () => this.getConfig(), fieldResolverForExecute, isUsingDefaultResolver);\n        if (schema) {\n            (0, utils_1.wrapFields)(schema.getQueryType(), this.tracer, () => this.getConfig());\n            (0, utils_1.wrapFields)(schema.getMutationType(), this.tracer, () => this.getConfig());\n        }\n        return {\n            schema,\n            document,\n            rootValue,\n            contextValue,\n            variableValues,\n            operationName,\n            fieldResolver,\n            typeResolver,\n        };\n    }\n}\nexports.GraphQLInstrumentation = GraphQLInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-graphql@0.52.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js\n");

/***/ })

};
;