"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/index.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/index.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TediousInstrumentation = void 0;\nvar instrumentation_1 = __webpack_require__(/*! ./instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/instrumentation.js\");\nObject.defineProperty(exports, \"TediousInstrumentation\", ({ enumerable: true, get: function () { return instrumentation_1.TediousInstrumentation; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tdGVkaW91c0AwLjIzLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tdGVkaW91cy9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLHdCQUF3QixtQkFBTyxDQUFDLHdOQUFtQjtBQUNuRCwwREFBeUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDckoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi10ZWRpb3VzQDAuMjMuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi10ZWRpb3VzL2J1aWxkL3NyYy9pbmRleC5qcz9mOTAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGVkaW91c0luc3RydW1lbnRhdGlvbiA9IHZvaWQgMDtcbnZhciBpbnN0cnVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRlZGlvdXNJbnN0cnVtZW50YXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluc3RydW1lbnRhdGlvbl8xLlRlZGlvdXNJbnN0cnVtZW50YXRpb247IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/utils.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/utils.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.once = exports.getSpanName = void 0;\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns Operation executed on Tedious Connection. Does not map to SQL statement in any way.\n */\nfunction getSpanName(operation, db, sql, bulkLoadTable) {\n    if (operation === 'execBulkLoad' && bulkLoadTable && db) {\n        return `${operation} ${bulkLoadTable} ${db}`;\n    }\n    if (operation === 'callProcedure') {\n        // `sql` refers to procedure name with `callProcedure`\n        if (db) {\n            return `${operation} ${sql} ${db}`;\n        }\n        return `${operation} ${sql}`;\n    }\n    // do not use `sql` in general case because of high-cardinality\n    if (db) {\n        return `${operation} ${db}`;\n    }\n    return `${operation}`;\n}\nexports.getSpanName = getSpanName;\nconst once = (fn) => {\n    let called = false;\n    return (...args) => {\n        if (called)\n            return;\n        called = true;\n        return fn(...args);\n    };\n};\nexports.once = once;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tdGVkaW91c0AwLjIzLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tdGVkaW91cy9idWlsZC9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWSxHQUFHLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFdBQVcsRUFBRSxlQUFlLEVBQUUsR0FBRztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixXQUFXLEVBQUUsS0FBSyxFQUFFLEdBQUc7QUFDN0M7QUFDQSxrQkFBa0IsV0FBVyxFQUFFLElBQUk7QUFDbkM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFdBQVcsRUFBRSxHQUFHO0FBQ2xDO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLXRlZGlvdXNAMC4yMy4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXRlZGlvdXMvYnVpbGQvc3JjL3V0aWxzLmpzPzY5MDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vbmNlID0gZXhwb3J0cy5nZXRTcGFuTmFtZSA9IHZvaWQgMDtcbi8qKlxuICogVGhlIHNwYW4gbmFtZSBTSE9VTEQgYmUgc2V0IHRvIGEgbG93IGNhcmRpbmFsaXR5IHZhbHVlXG4gKiByZXByZXNlbnRpbmcgdGhlIHN0YXRlbWVudCBleGVjdXRlZCBvbiB0aGUgZGF0YWJhc2UuXG4gKlxuICogQHJldHVybnMgT3BlcmF0aW9uIGV4ZWN1dGVkIG9uIFRlZGlvdXMgQ29ubmVjdGlvbi4gRG9lcyBub3QgbWFwIHRvIFNRTCBzdGF0ZW1lbnQgaW4gYW55IHdheS5cbiAqL1xuZnVuY3Rpb24gZ2V0U3Bhbk5hbWUob3BlcmF0aW9uLCBkYiwgc3FsLCBidWxrTG9hZFRhYmxlKSB7XG4gICAgaWYgKG9wZXJhdGlvbiA9PT0gJ2V4ZWNCdWxrTG9hZCcgJiYgYnVsa0xvYWRUYWJsZSAmJiBkYikge1xuICAgICAgICByZXR1cm4gYCR7b3BlcmF0aW9ufSAke2J1bGtMb2FkVGFibGV9ICR7ZGJ9YDtcbiAgICB9XG4gICAgaWYgKG9wZXJhdGlvbiA9PT0gJ2NhbGxQcm9jZWR1cmUnKSB7XG4gICAgICAgIC8vIGBzcWxgIHJlZmVycyB0byBwcm9jZWR1cmUgbmFtZSB3aXRoIGBjYWxsUHJvY2VkdXJlYFxuICAgICAgICBpZiAoZGIpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtvcGVyYXRpb259ICR7c3FsfSAke2RifWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGAke29wZXJhdGlvbn0gJHtzcWx9YDtcbiAgICB9XG4gICAgLy8gZG8gbm90IHVzZSBgc3FsYCBpbiBnZW5lcmFsIGNhc2UgYmVjYXVzZSBvZiBoaWdoLWNhcmRpbmFsaXR5XG4gICAgaWYgKGRiKSB7XG4gICAgICAgIHJldHVybiBgJHtvcGVyYXRpb259ICR7ZGJ9YDtcbiAgICB9XG4gICAgcmV0dXJuIGAke29wZXJhdGlvbn1gO1xufVxuZXhwb3J0cy5nZXRTcGFuTmFtZSA9IGdldFNwYW5OYW1lO1xuY29uc3Qgb25jZSA9IChmbikgPT4ge1xuICAgIGxldCBjYWxsZWQgPSBmYWxzZTtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgaWYgKGNhbGxlZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIGZuKC4uLmFyZ3MpO1xuICAgIH07XG59O1xuZXhwb3J0cy5vbmNlID0gb25jZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/version.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/version.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.23.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-tedious';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tdGVkaW91c0AwLjIzLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tdGVkaW91cy9idWlsZC9zcmMvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUI7QUFDOUM7QUFDQSx1QkFBdUI7QUFDdkIsb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tdGVkaW91c0AwLjIzLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tdGVkaW91cy9idWlsZC9zcmMvdmVyc2lvbi5qcz9iMGE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuMjMuMCc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tdGVkaW91cyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/version.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/instrumentation.js":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/instrumentation.js ***!
  \****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"14.2.3\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TediousInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/utils.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/version.js\");\nconst CURRENT_DATABASE = Symbol('opentelemetry.instrumentation-tedious.current-database');\nconst PATCHED_METHODS = [\n    'callProcedure',\n    'execSql',\n    'execSqlBatch',\n    'execBulkLoad',\n    'prepare',\n    'execute',\n];\nfunction setDatabase(databaseName) {\n    Object.defineProperty(this, CURRENT_DATABASE, {\n        value: databaseName,\n        writable: true,\n    });\n}\nclass TediousInstrumentation extends instrumentation_1.InstrumentationBase {\n    static COMPONENT = 'tedious';\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition(TediousInstrumentation.COMPONENT, ['>=1.11.0 <20'], (moduleExports) => {\n                const ConnectionPrototype = moduleExports.Connection.prototype;\n                for (const method of PATCHED_METHODS) {\n                    if ((0, instrumentation_1.isWrapped)(ConnectionPrototype[method])) {\n                        this._unwrap(ConnectionPrototype, method);\n                    }\n                    this._wrap(ConnectionPrototype, method, this._patchQuery(method));\n                }\n                if ((0, instrumentation_1.isWrapped)(ConnectionPrototype.connect)) {\n                    this._unwrap(ConnectionPrototype, 'connect');\n                }\n                this._wrap(ConnectionPrototype, 'connect', this._patchConnect);\n                return moduleExports;\n            }, (moduleExports) => {\n                if (moduleExports === undefined)\n                    return;\n                const ConnectionPrototype = moduleExports.Connection.prototype;\n                for (const method of PATCHED_METHODS) {\n                    this._unwrap(ConnectionPrototype, method);\n                }\n                this._unwrap(ConnectionPrototype, 'connect');\n            }),\n        ];\n    }\n    _patchConnect(original) {\n        return function patchedConnect() {\n            setDatabase.call(this, this.config?.options?.database);\n            // remove the listener first in case it's already added\n            this.removeListener('databaseChange', setDatabase);\n            this.on('databaseChange', setDatabase);\n            this.once('end', () => {\n                this.removeListener('databaseChange', setDatabase);\n            });\n            return original.apply(this, arguments);\n        };\n    }\n    _patchQuery(operation) {\n        return (originalMethod) => {\n            const thisPlugin = this;\n            function patchedMethod(request) {\n                if (!(request instanceof events_1.EventEmitter)) {\n                    thisPlugin._diag.warn(`Unexpected invocation of patched ${operation} method. Span not recorded`);\n                    return originalMethod.apply(this, arguments);\n                }\n                let procCount = 0;\n                let statementCount = 0;\n                const incrementStatementCount = () => statementCount++;\n                const incrementProcCount = () => procCount++;\n                const databaseName = this[CURRENT_DATABASE];\n                const sql = (request => {\n                    // Required for <11.0.9\n                    if (request.sqlTextOrProcedure === 'sp_prepare' &&\n                        request.parametersByName?.stmt?.value) {\n                        return request.parametersByName.stmt.value;\n                    }\n                    return request.sqlTextOrProcedure;\n                })(request);\n                const span = thisPlugin.tracer.startSpan((0, utils_1.getSpanName)(operation, databaseName, sql, request.table), {\n                    kind: api.SpanKind.CLIENT,\n                    attributes: {\n                        [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: semantic_conventions_1.DBSYSTEMVALUES_MSSQL,\n                        [semantic_conventions_1.SEMATTRS_DB_NAME]: databaseName,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: this.config?.options?.port,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: this.config?.server,\n                        // >=4 uses `authentication` object, older versions just userName and password pair\n                        [semantic_conventions_1.SEMATTRS_DB_USER]: this.config?.userName ??\n                            this.config?.authentication?.options?.userName,\n                        [semantic_conventions_1.SEMATTRS_DB_STATEMENT]: sql,\n                        [semantic_conventions_1.SEMATTRS_DB_SQL_TABLE]: request.table,\n                    },\n                });\n                const endSpan = (0, utils_1.once)((err) => {\n                    request.removeListener('done', incrementStatementCount);\n                    request.removeListener('doneInProc', incrementStatementCount);\n                    request.removeListener('doneProc', incrementProcCount);\n                    request.removeListener('error', endSpan);\n                    this.removeListener('end', endSpan);\n                    span.setAttribute('tedious.procedure_count', procCount);\n                    span.setAttribute('tedious.statement_count', statementCount);\n                    if (err) {\n                        span.setStatus({\n                            code: api.SpanStatusCode.ERROR,\n                            message: err.message,\n                        });\n                    }\n                    span.end();\n                });\n                request.on('done', incrementStatementCount);\n                request.on('doneInProc', incrementStatementCount);\n                request.on('doneProc', incrementProcCount);\n                request.once('error', endSpan);\n                this.on('end', endSpan);\n                if (typeof request.callback === 'function') {\n                    thisPlugin._wrap(request, 'callback', thisPlugin._patchCallbackQuery(endSpan));\n                }\n                else {\n                    thisPlugin._diag.error('Expected request.callback to be a function');\n                }\n                return api.context.with(api.trace.setSpan(api.context.active(), span), originalMethod, this, ...arguments);\n            }\n            Object.defineProperty(patchedMethod, 'length', {\n                value: originalMethod.length,\n                writable: false,\n            });\n            return patchedMethod;\n        };\n    }\n    _patchCallbackQuery(endSpan) {\n        return (originalCallback) => {\n            return function (err, rowCount, rows) {\n                endSpan(err);\n                return originalCallback.apply(this, arguments);\n            };\n        };\n    }\n}\nexports.TediousInstrumentation = TediousInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-tedious@0.23.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-tedious/build/src/instrumentation.js\n");

/***/ })

};
;