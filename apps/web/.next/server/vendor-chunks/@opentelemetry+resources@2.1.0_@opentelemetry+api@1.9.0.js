"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js":
/*!********************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultResource: () => (/* binding */ defaultResource),\n/* harmony export */   emptyResource: () => (/* binding */ emptyResource),\n/* harmony export */   resourceFromAttributes: () => (/* binding */ resourceFromAttributes),\n/* harmony export */   resourceFromDetectedResource: () => (/* binding */ resourceFromDetectedResource)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @opentelemetry/core */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/platform/node/sdk-info.js\");\n/* harmony import */ var _opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./platform */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nclass ResourceImpl {\n    _rawAttributes;\n    _asyncAttributesPending = false;\n    _schemaUrl;\n    _memoizedAttributes;\n    static FromAttributeList(attributes, options) {\n        const res = new ResourceImpl({}, options);\n        res._rawAttributes = guardedRawAttributes(attributes);\n        res._asyncAttributesPending =\n            attributes.filter(([_, val]) => (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(val)).length > 0;\n        return res;\n    }\n    constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    resource, options) {\n        const attributes = resource.attributes ?? {};\n        this._rawAttributes = Object.entries(attributes).map(([k, v]) => {\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v)) {\n                // side-effect\n                this._asyncAttributesPending = true;\n            }\n            return [k, v];\n        });\n        this._rawAttributes = guardedRawAttributes(this._rawAttributes);\n        this._schemaUrl = validateSchemaUrl(options?.schemaUrl);\n    }\n    get asyncAttributesPending() {\n        return this._asyncAttributesPending;\n    }\n    async waitForAsyncAttributes() {\n        if (!this.asyncAttributesPending) {\n            return;\n        }\n        for (let i = 0; i < this._rawAttributes.length; i++) {\n            const [k, v] = this._rawAttributes[i];\n            this._rawAttributes[i] = [k, (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v) ? await v : v];\n        }\n        this._asyncAttributesPending = false;\n    }\n    get attributes() {\n        if (this.asyncAttributesPending) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.error('Accessing resource attributes before async attributes settled');\n        }\n        if (this._memoizedAttributes) {\n            return this._memoizedAttributes;\n        }\n        const attrs = {};\n        for (const [k, v] of this._rawAttributes) {\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v)) {\n                _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`Unsettled resource attribute ${k} skipped`);\n                continue;\n            }\n            if (v != null) {\n                attrs[k] ??= v;\n            }\n        }\n        // only memoize output if all attributes are settled\n        if (!this._asyncAttributesPending) {\n            this._memoizedAttributes = attrs;\n        }\n        return attrs;\n    }\n    getRawAttributes() {\n        return this._rawAttributes;\n    }\n    get schemaUrl() {\n        return this._schemaUrl;\n    }\n    merge(resource) {\n        if (resource == null)\n            return this;\n        // Order is important\n        // Spec states incoming attributes override existing attributes\n        const mergedSchemaUrl = mergeSchemaUrl(this, resource);\n        const mergedOptions = mergedSchemaUrl\n            ? { schemaUrl: mergedSchemaUrl }\n            : undefined;\n        return ResourceImpl.FromAttributeList([...resource.getRawAttributes(), ...this.getRawAttributes()], mergedOptions);\n    }\n}\nfunction resourceFromAttributes(attributes, options) {\n    return ResourceImpl.FromAttributeList(Object.entries(attributes), options);\n}\nfunction resourceFromDetectedResource(detectedResource, options) {\n    return new ResourceImpl(detectedResource, options);\n}\nfunction emptyResource() {\n    return resourceFromAttributes({});\n}\nfunction defaultResource() {\n    return resourceFromAttributes({\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_SERVICE_NAME]: (0,_platform__WEBPACK_IMPORTED_MODULE_3__.defaultServiceName)(),\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_LANGUAGE]: _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_INFO[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_LANGUAGE],\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_NAME]: _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_INFO[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_NAME],\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_VERSION]: _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_INFO[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_VERSION],\n    });\n}\nfunction guardedRawAttributes(attributes) {\n    return attributes.map(([k, v]) => {\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v)) {\n            return [\n                k,\n                v.catch(err => {\n                    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug('promise rejection for resource attribute: %s - %s', k, err);\n                    return undefined;\n                }),\n            ];\n        }\n        return [k, v];\n    });\n}\nfunction validateSchemaUrl(schemaUrl) {\n    if (typeof schemaUrl === 'string' || schemaUrl === undefined) {\n        return schemaUrl;\n    }\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.warn('Schema URL must be string or undefined, got %s. Schema URL will be ignored.', schemaUrl);\n    return undefined;\n}\nfunction mergeSchemaUrl(old, updating) {\n    const oldSchemaUrl = old?.schemaUrl;\n    const updatingSchemaUrl = updating?.schemaUrl;\n    const isOldEmpty = oldSchemaUrl === undefined || oldSchemaUrl === '';\n    const isUpdatingEmpty = updatingSchemaUrl === undefined || updatingSchemaUrl === '';\n    if (isOldEmpty) {\n        return updatingSchemaUrl;\n    }\n    if (isUpdatingEmpty) {\n        return oldSchemaUrl;\n    }\n    if (oldSchemaUrl === updatingSchemaUrl) {\n        return oldSchemaUrl;\n    }\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.warn('Schema URL merge conflict: old resource has \"%s\", updating resource has \"%s\". Resulting resource will have undefined Schema URL.', oldSchemaUrl, updatingSchemaUrl);\n    return undefined;\n}\n//# sourceMappingURL=ResourceImpl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL1Jlc291cmNlSW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEM7QUFDSztBQUM0RztBQUMzRztBQUNSO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0EsNENBQTRDLHFEQUFhO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0NBQWdDO0FBQ3hEO0FBQ0EseUNBQXlDLHFEQUFhO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9EQUFJO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBYTtBQUM3QixnQkFBZ0Isb0RBQUksdUNBQXVDLEdBQUc7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQLG9DQUFvQztBQUNwQztBQUNPO0FBQ1A7QUFDQSxTQUFTLGtGQUFpQixHQUFHLDZEQUFrQjtBQUMvQyxTQUFTLDRGQUEyQixHQUFHLHlEQUFRLENBQUMsNEZBQTJCO0FBQzNFLFNBQVMsd0ZBQXVCLEdBQUcseURBQVEsQ0FBQyx3RkFBdUI7QUFDbkUsU0FBUywyRkFBMEIsR0FBRyx5REFBUSxDQUFDLDJGQUEwQjtBQUN6RSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxREFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0RBQUk7QUFDeEI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG9EQUFJO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG9EQUFJO0FBQ1I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL1Jlc291cmNlSW1wbC5qcz9kNGUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBkaWFnIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpJztcbmltcG9ydCB7IFNES19JTkZPIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvY29yZSc7XG5pbXBvcnQgeyBBVFRSX1NFUlZJQ0VfTkFNRSwgQVRUUl9URUxFTUVUUllfU0RLX0xBTkdVQUdFLCBBVFRSX1RFTEVNRVRSWV9TREtfTkFNRSwgQVRUUl9URUxFTUVUUllfU0RLX1ZFUlNJT04sIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMnO1xuaW1wb3J0IHsgZGVmYXVsdFNlcnZpY2VOYW1lIH0gZnJvbSAnLi9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBpc1Byb21pc2VMaWtlIH0gZnJvbSAnLi91dGlscyc7XG5jbGFzcyBSZXNvdXJjZUltcGwge1xuICAgIF9yYXdBdHRyaWJ1dGVzO1xuICAgIF9hc3luY0F0dHJpYnV0ZXNQZW5kaW5nID0gZmFsc2U7XG4gICAgX3NjaGVtYVVybDtcbiAgICBfbWVtb2l6ZWRBdHRyaWJ1dGVzO1xuICAgIHN0YXRpYyBGcm9tQXR0cmlidXRlTGlzdChhdHRyaWJ1dGVzLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IG5ldyBSZXNvdXJjZUltcGwoe30sIG9wdGlvbnMpO1xuICAgICAgICByZXMuX3Jhd0F0dHJpYnV0ZXMgPSBndWFyZGVkUmF3QXR0cmlidXRlcyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgcmVzLl9hc3luY0F0dHJpYnV0ZXNQZW5kaW5nID1cbiAgICAgICAgICAgIGF0dHJpYnV0ZXMuZmlsdGVyKChbXywgdmFsXSkgPT4gaXNQcm9taXNlTGlrZSh2YWwpKS5sZW5ndGggPiAwO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKipcbiAgICAgKiBBIGRpY3Rpb25hcnkgb2YgYXR0cmlidXRlcyB3aXRoIHN0cmluZyBrZXlzIGFuZCB2YWx1ZXMgdGhhdCBwcm92aWRlXG4gICAgICogaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVudGl0eSBhcyBudW1iZXJzLCBzdHJpbmdzIG9yIGJvb2xlYW5zXG4gICAgICogVE9ETzogQ29uc2lkZXIgdG8gYWRkIGNoZWNrL3ZhbGlkYXRpb24gb24gYXR0cmlidXRlcy5cbiAgICAgKi9cbiAgICByZXNvdXJjZSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBhdHRyaWJ1dGVzID0gcmVzb3VyY2UuYXR0cmlidXRlcyA/PyB7fTtcbiAgICAgICAgdGhpcy5fcmF3QXR0cmlidXRlcyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMpLm1hcCgoW2ssIHZdKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNQcm9taXNlTGlrZSh2KSkge1xuICAgICAgICAgICAgICAgIC8vIHNpZGUtZWZmZWN0XG4gICAgICAgICAgICAgICAgdGhpcy5fYXN5bmNBdHRyaWJ1dGVzUGVuZGluZyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gW2ssIHZdO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fcmF3QXR0cmlidXRlcyA9IGd1YXJkZWRSYXdBdHRyaWJ1dGVzKHRoaXMuX3Jhd0F0dHJpYnV0ZXMpO1xuICAgICAgICB0aGlzLl9zY2hlbWFVcmwgPSB2YWxpZGF0ZVNjaGVtYVVybChvcHRpb25zPy5zY2hlbWFVcmwpO1xuICAgIH1cbiAgICBnZXQgYXN5bmNBdHRyaWJ1dGVzUGVuZGluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FzeW5jQXR0cmlidXRlc1BlbmRpbmc7XG4gICAgfVxuICAgIGFzeW5jIHdhaXRGb3JBc3luY0F0dHJpYnV0ZXMoKSB7XG4gICAgICAgIGlmICghdGhpcy5hc3luY0F0dHJpYnV0ZXNQZW5kaW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9yYXdBdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBbaywgdl0gPSB0aGlzLl9yYXdBdHRyaWJ1dGVzW2ldO1xuICAgICAgICAgICAgdGhpcy5fcmF3QXR0cmlidXRlc1tpXSA9IFtrLCBpc1Byb21pc2VMaWtlKHYpID8gYXdhaXQgdiA6IHZdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2FzeW5jQXR0cmlidXRlc1BlbmRpbmcgPSBmYWxzZTtcbiAgICB9XG4gICAgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgICAgIGlmICh0aGlzLmFzeW5jQXR0cmlidXRlc1BlbmRpbmcpIHtcbiAgICAgICAgICAgIGRpYWcuZXJyb3IoJ0FjY2Vzc2luZyByZXNvdXJjZSBhdHRyaWJ1dGVzIGJlZm9yZSBhc3luYyBhdHRyaWJ1dGVzIHNldHRsZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fbWVtb2l6ZWRBdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbWVtb2l6ZWRBdHRyaWJ1dGVzO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGF0dHJzID0ge307XG4gICAgICAgIGZvciAoY29uc3QgW2ssIHZdIG9mIHRoaXMuX3Jhd0F0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGlmIChpc1Byb21pc2VMaWtlKHYpKSB7XG4gICAgICAgICAgICAgICAgZGlhZy5kZWJ1ZyhgVW5zZXR0bGVkIHJlc291cmNlIGF0dHJpYnV0ZSAke2t9IHNraXBwZWRgKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBhdHRyc1trXSA/Pz0gdjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBvbmx5IG1lbW9pemUgb3V0cHV0IGlmIGFsbCBhdHRyaWJ1dGVzIGFyZSBzZXR0bGVkXG4gICAgICAgIGlmICghdGhpcy5fYXN5bmNBdHRyaWJ1dGVzUGVuZGluZykge1xuICAgICAgICAgICAgdGhpcy5fbWVtb2l6ZWRBdHRyaWJ1dGVzID0gYXR0cnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGF0dHJzO1xuICAgIH1cbiAgICBnZXRSYXdBdHRyaWJ1dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmF3QXR0cmlidXRlcztcbiAgICB9XG4gICAgZ2V0IHNjaGVtYVVybCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NjaGVtYVVybDtcbiAgICB9XG4gICAgbWVyZ2UocmVzb3VyY2UpIHtcbiAgICAgICAgaWYgKHJlc291cmNlID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgLy8gT3JkZXIgaXMgaW1wb3J0YW50XG4gICAgICAgIC8vIFNwZWMgc3RhdGVzIGluY29taW5nIGF0dHJpYnV0ZXMgb3ZlcnJpZGUgZXhpc3RpbmcgYXR0cmlidXRlc1xuICAgICAgICBjb25zdCBtZXJnZWRTY2hlbWFVcmwgPSBtZXJnZVNjaGVtYVVybCh0aGlzLCByZXNvdXJjZSk7XG4gICAgICAgIGNvbnN0IG1lcmdlZE9wdGlvbnMgPSBtZXJnZWRTY2hlbWFVcmxcbiAgICAgICAgICAgID8geyBzY2hlbWFVcmw6IG1lcmdlZFNjaGVtYVVybCB9XG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIFJlc291cmNlSW1wbC5Gcm9tQXR0cmlidXRlTGlzdChbLi4ucmVzb3VyY2UuZ2V0UmF3QXR0cmlidXRlcygpLCAuLi50aGlzLmdldFJhd0F0dHJpYnV0ZXMoKV0sIG1lcmdlZE9wdGlvbnMpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvdXJjZUZyb21BdHRyaWJ1dGVzKGF0dHJpYnV0ZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gUmVzb3VyY2VJbXBsLkZyb21BdHRyaWJ1dGVMaXN0KE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMpLCBvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvdXJjZUZyb21EZXRlY3RlZFJlc291cmNlKGRldGVjdGVkUmVzb3VyY2UsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFJlc291cmNlSW1wbChkZXRlY3RlZFJlc291cmNlLCBvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbXB0eVJlc291cmNlKCkge1xuICAgIHJldHVybiByZXNvdXJjZUZyb21BdHRyaWJ1dGVzKHt9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0UmVzb3VyY2UoKSB7XG4gICAgcmV0dXJuIHJlc291cmNlRnJvbUF0dHJpYnV0ZXMoe1xuICAgICAgICBbQVRUUl9TRVJWSUNFX05BTUVdOiBkZWZhdWx0U2VydmljZU5hbWUoKSxcbiAgICAgICAgW0FUVFJfVEVMRU1FVFJZX1NES19MQU5HVUFHRV06IFNES19JTkZPW0FUVFJfVEVMRU1FVFJZX1NES19MQU5HVUFHRV0sXG4gICAgICAgIFtBVFRSX1RFTEVNRVRSWV9TREtfTkFNRV06IFNES19JTkZPW0FUVFJfVEVMRU1FVFJZX1NES19OQU1FXSxcbiAgICAgICAgW0FUVFJfVEVMRU1FVFJZX1NES19WRVJTSU9OXTogU0RLX0lORk9bQVRUUl9URUxFTUVUUllfU0RLX1ZFUlNJT05dLFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ3VhcmRlZFJhd0F0dHJpYnV0ZXMoYXR0cmlidXRlcykge1xuICAgIHJldHVybiBhdHRyaWJ1dGVzLm1hcCgoW2ssIHZdKSA9PiB7XG4gICAgICAgIGlmIChpc1Byb21pc2VMaWtlKHYpKSB7XG4gICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgIGssXG4gICAgICAgICAgICAgICAgdi5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICBkaWFnLmRlYnVnKCdwcm9taXNlIHJlamVjdGlvbiBmb3IgcmVzb3VyY2UgYXR0cmlidXRlOiAlcyAtICVzJywgaywgZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtrLCB2XTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlU2NoZW1hVXJsKHNjaGVtYVVybCkge1xuICAgIGlmICh0eXBlb2Ygc2NoZW1hVXJsID09PSAnc3RyaW5nJyB8fCBzY2hlbWFVcmwgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hVXJsO1xuICAgIH1cbiAgICBkaWFnLndhcm4oJ1NjaGVtYSBVUkwgbXVzdCBiZSBzdHJpbmcgb3IgdW5kZWZpbmVkLCBnb3QgJXMuIFNjaGVtYSBVUkwgd2lsbCBiZSBpZ25vcmVkLicsIHNjaGVtYVVybCk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIG1lcmdlU2NoZW1hVXJsKG9sZCwgdXBkYXRpbmcpIHtcbiAgICBjb25zdCBvbGRTY2hlbWFVcmwgPSBvbGQ/LnNjaGVtYVVybDtcbiAgICBjb25zdCB1cGRhdGluZ1NjaGVtYVVybCA9IHVwZGF0aW5nPy5zY2hlbWFVcmw7XG4gICAgY29uc3QgaXNPbGRFbXB0eSA9IG9sZFNjaGVtYVVybCA9PT0gdW5kZWZpbmVkIHx8IG9sZFNjaGVtYVVybCA9PT0gJyc7XG4gICAgY29uc3QgaXNVcGRhdGluZ0VtcHR5ID0gdXBkYXRpbmdTY2hlbWFVcmwgPT09IHVuZGVmaW5lZCB8fCB1cGRhdGluZ1NjaGVtYVVybCA9PT0gJyc7XG4gICAgaWYgKGlzT2xkRW1wdHkpIHtcbiAgICAgICAgcmV0dXJuIHVwZGF0aW5nU2NoZW1hVXJsO1xuICAgIH1cbiAgICBpZiAoaXNVcGRhdGluZ0VtcHR5KSB7XG4gICAgICAgIHJldHVybiBvbGRTY2hlbWFVcmw7XG4gICAgfVxuICAgIGlmIChvbGRTY2hlbWFVcmwgPT09IHVwZGF0aW5nU2NoZW1hVXJsKSB7XG4gICAgICAgIHJldHVybiBvbGRTY2hlbWFVcmw7XG4gICAgfVxuICAgIGRpYWcud2FybignU2NoZW1hIFVSTCBtZXJnZSBjb25mbGljdDogb2xkIHJlc291cmNlIGhhcyBcIiVzXCIsIHVwZGF0aW5nIHJlc291cmNlIGhhcyBcIiVzXCIuIFJlc3VsdGluZyByZXNvdXJjZSB3aWxsIGhhdmUgdW5kZWZpbmVkIFNjaGVtYSBVUkwuJywgb2xkU2NoZW1hVXJsLCB1cGRhdGluZ1NjaGVtYVVybCk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlc291cmNlSW1wbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js":
/*!************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js ***!
  \************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectResources: () => (/* binding */ detectResources)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _ResourceImpl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResourceImpl */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Runs all resource detectors and returns the results merged into a single Resource.\n *\n * @param config Configuration for resource detection\n */\nconst detectResources = (config = {}) => {\n    const resources = (config.detectors || []).map(d => {\n        try {\n            const resource = (0,_ResourceImpl__WEBPACK_IMPORTED_MODULE_0__.resourceFromDetectedResource)(d.detect(config));\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`${d.constructor.name} found resource.`, resource);\n            return resource;\n        }\n        catch (e) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`${d.constructor.name} failed: ${e.message}`);\n            return (0,_ResourceImpl__WEBPACK_IMPORTED_MODULE_0__.emptyResource)();\n        }\n    });\n    return resources.reduce((acc, resource) => acc.merge(resource), (0,_ResourceImpl__WEBPACK_IMPORTED_MODULE_0__.emptyResource)());\n};\n//# sourceMappingURL=detect-resources.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdC1yZXNvdXJjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBDO0FBQ21DO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxvQ0FBb0M7QUFDM0M7QUFDQTtBQUNBLDZCQUE2QiwyRUFBNEI7QUFDekQsWUFBWSxvREFBSSxVQUFVLG9CQUFvQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxZQUFZLG9EQUFJLFVBQVUsb0JBQW9CLFVBQVUsVUFBVTtBQUNsRSxtQkFBbUIsNERBQWE7QUFDaEM7QUFDQSxLQUFLO0FBQ0wsb0VBQW9FLDREQUFhO0FBQ2pGO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9lc20vZGV0ZWN0LXJlc291cmNlcy5qcz9mNmUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBkaWFnIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpJztcbmltcG9ydCB7IGVtcHR5UmVzb3VyY2UsIHJlc291cmNlRnJvbURldGVjdGVkUmVzb3VyY2UgfSBmcm9tICcuL1Jlc291cmNlSW1wbCc7XG4vKipcbiAqIFJ1bnMgYWxsIHJlc291cmNlIGRldGVjdG9ycyBhbmQgcmV0dXJucyB0aGUgcmVzdWx0cyBtZXJnZWQgaW50byBhIHNpbmdsZSBSZXNvdXJjZS5cbiAqXG4gKiBAcGFyYW0gY29uZmlnIENvbmZpZ3VyYXRpb24gZm9yIHJlc291cmNlIGRldGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgZGV0ZWN0UmVzb3VyY2VzID0gKGNvbmZpZyA9IHt9KSA9PiB7XG4gICAgY29uc3QgcmVzb3VyY2VzID0gKGNvbmZpZy5kZXRlY3RvcnMgfHwgW10pLm1hcChkID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc291cmNlID0gcmVzb3VyY2VGcm9tRGV0ZWN0ZWRSZXNvdXJjZShkLmRldGVjdChjb25maWcpKTtcbiAgICAgICAgICAgIGRpYWcuZGVidWcoYCR7ZC5jb25zdHJ1Y3Rvci5uYW1lfSBmb3VuZCByZXNvdXJjZS5gLCByZXNvdXJjZSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzb3VyY2U7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGRpYWcuZGVidWcoYCR7ZC5jb25zdHJ1Y3Rvci5uYW1lfSBmYWlsZWQ6ICR7ZS5tZXNzYWdlfWApO1xuICAgICAgICAgICAgcmV0dXJuIGVtcHR5UmVzb3VyY2UoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXNvdXJjZXMucmVkdWNlKChhY2MsIHJlc291cmNlKSA9PiBhY2MubWVyZ2UocmVzb3VyY2UpLCBlbXB0eVJlc291cmNlKCkpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdC1yZXNvdXJjZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js ***!
  \*****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   envDetector: () => (/* binding */ envDetector)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js\");\n/* harmony import */ var _opentelemetry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/core */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/platform/node/environment.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * EnvDetector can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nclass EnvDetector {\n    // Type, attribute keys, and attribute values should not exceed 256 characters.\n    _MAX_LENGTH = 255;\n    // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n    _COMMA_SEPARATOR = ',';\n    // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n    _LABEL_KEY_VALUE_SPLITTER = '=';\n    _ERROR_MESSAGE_INVALID_CHARS = 'should be a ASCII string with a length greater than 0 and not exceed ' +\n        this._MAX_LENGTH +\n        ' characters.';\n    _ERROR_MESSAGE_INVALID_VALUE = 'should be a ASCII string with a length not exceed ' +\n        this._MAX_LENGTH +\n        ' characters.';\n    /**\n     * Returns a {@link Resource} populated with attributes from the\n     * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n     * function to conform to the Detector interface.\n     *\n     * @param config The resource detection config\n     */\n    detect(_config) {\n        const attributes = {};\n        const rawAttributes = (0,_opentelemetry_core__WEBPACK_IMPORTED_MODULE_0__.getStringFromEnv)('OTEL_RESOURCE_ATTRIBUTES');\n        const serviceName = (0,_opentelemetry_core__WEBPACK_IMPORTED_MODULE_0__.getStringFromEnv)('OTEL_SERVICE_NAME');\n        if (rawAttributes) {\n            try {\n                const parsedAttributes = this._parseResourceAttributes(rawAttributes);\n                Object.assign(attributes, parsedAttributes);\n            }\n            catch (e) {\n                _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`EnvDetector failed: ${e.message}`);\n            }\n        }\n        if (serviceName) {\n            attributes[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_SERVICE_NAME] = serviceName;\n        }\n        return { attributes };\n    }\n    /**\n     * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n     * variable.\n     *\n     * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n     * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n     * paths are accepted as attribute keys. Values may be quoted or unquoted in\n     * general. If a value contains whitespace, =, or \" characters, it must\n     * always be quoted.\n     *\n     * @param rawEnvAttributes The resource attributes as a comma-separated list\n     * of key/value pairs.\n     * @returns The sanitized resource attributes.\n     */\n    _parseResourceAttributes(rawEnvAttributes) {\n        if (!rawEnvAttributes)\n            return {};\n        const attributes = {};\n        const rawAttributes = rawEnvAttributes.split(this._COMMA_SEPARATOR, -1);\n        for (const rawAttribute of rawAttributes) {\n            const keyValuePair = rawAttribute.split(this._LABEL_KEY_VALUE_SPLITTER, -1);\n            if (keyValuePair.length !== 2) {\n                continue;\n            }\n            let [key, value] = keyValuePair;\n            // Leading and trailing whitespaces are trimmed.\n            key = key.trim();\n            value = value.trim().split(/^\"|\"$/).join('');\n            if (!this._isValidAndNotEmpty(key)) {\n                throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);\n            }\n            if (!this._isValid(value)) {\n                throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);\n            }\n            attributes[key] = decodeURIComponent(value);\n        }\n        return attributes;\n    }\n    /**\n     * Determines whether the given String is a valid printable ASCII string with\n     * a length not exceed _MAX_LENGTH characters.\n     *\n     * @param str The String to be validated.\n     * @returns Whether the String is valid.\n     */\n    _isValid(name) {\n        return name.length <= this._MAX_LENGTH && this._isBaggageOctetString(name);\n    }\n    // https://www.w3.org/TR/baggage/#definition\n    _isBaggageOctetString(str) {\n        for (let i = 0; i < str.length; i++) {\n            const ch = str.charCodeAt(i);\n            if (ch < 0x21 || ch === 0x2c || ch === 0x3b || ch === 0x5c || ch > 0x7e) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines whether the given String is a valid printable ASCII string with\n     * a length greater than 0 and not exceed _MAX_LENGTH characters.\n     *\n     * @param str The String to be validated.\n     * @returns Whether the String is valid and not empty.\n     */\n    _isValidAndNotEmpty(str) {\n        return str.length > 0 && this._isValid(str);\n    }\n}\nconst envDetector = new EnvDetector();\n//# sourceMappingURL=EnvDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hostDetector: () => (/* binding */ hostDetector)\n/* harmony export */ });\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _machine_id_getMachineId__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./machine-id/getMachineId */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * HostDetector detects the resources related to the host current process is\n * running on. Currently only non-cloud-based attributes are included.\n */\nclass HostDetector {\n    detect(_config) {\n        const attributes = {\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_HOST_NAME]: (0,os__WEBPACK_IMPORTED_MODULE_0__.hostname)(),\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_HOST_ARCH]: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeArch)((0,os__WEBPACK_IMPORTED_MODULE_0__.arch)()),\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_HOST_ID]: (0,_machine_id_getMachineId__WEBPACK_IMPORTED_MODULE_3__.getMachineId)(),\n        };\n        return { attributes };\n    }\n}\nconst hostDetector = new HostDetector();\n//# sourceMappingURL=HostDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL0hvc3REZXRlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Y7QUFDNUM7QUFDcUI7QUFDakI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG9EQUFjLEdBQUcsNENBQVE7QUFDdEMsYUFBYSxvREFBYyxHQUFHLHFEQUFhLENBQUMsd0NBQUk7QUFDaEQsYUFBYSxrREFBWSxHQUFHLHNFQUFZO0FBQ3hDO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL0hvc3REZXRlY3Rvci5qcz9kOGU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBBVFRSX0hPU1RfQVJDSCwgQVRUUl9IT1NUX0lELCBBVFRSX0hPU1RfTkFNRSB9IGZyb20gJy4uLy4uLy4uL3NlbWNvbnYnO1xuaW1wb3J0IHsgYXJjaCwgaG9zdG5hbWUgfSBmcm9tICdvcyc7XG5pbXBvcnQgeyBnZXRNYWNoaW5lSWQgfSBmcm9tICcuL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkJztcbmltcG9ydCB7IG5vcm1hbGl6ZUFyY2ggfSBmcm9tICcuL3V0aWxzJztcbi8qKlxuICogSG9zdERldGVjdG9yIGRldGVjdHMgdGhlIHJlc291cmNlcyByZWxhdGVkIHRvIHRoZSBob3N0IGN1cnJlbnQgcHJvY2VzcyBpc1xuICogcnVubmluZyBvbi4gQ3VycmVudGx5IG9ubHkgbm9uLWNsb3VkLWJhc2VkIGF0dHJpYnV0ZXMgYXJlIGluY2x1ZGVkLlxuICovXG5jbGFzcyBIb3N0RGV0ZWN0b3Ige1xuICAgIGRldGVjdChfY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgICAgICBbQVRUUl9IT1NUX05BTUVdOiBob3N0bmFtZSgpLFxuICAgICAgICAgICAgW0FUVFJfSE9TVF9BUkNIXTogbm9ybWFsaXplQXJjaChhcmNoKCkpLFxuICAgICAgICAgICAgW0FUVFJfSE9TVF9JRF06IGdldE1hY2hpbmVJZCgpLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4geyBhdHRyaWJ1dGVzIH07XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IGhvc3REZXRlY3RvciA9IG5ldyBIb3N0RGV0ZWN0b3IoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhvc3REZXRlY3Rvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   osDetector: () => (/* binding */ osDetector)\n/* harmony export */ });\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * OSDetector detects the resources related to the operating system (OS) on\n * which the process represented by this resource is running.\n */\nclass OSDetector {\n    detect(_config) {\n        const attributes = {\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_OS_TYPE]: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeType)((0,os__WEBPACK_IMPORTED_MODULE_0__.platform)()),\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_OS_VERSION]: (0,os__WEBPACK_IMPORTED_MODULE_0__.release)(),\n        };\n        return { attributes };\n    }\n}\nconst osDetector = new OSDetector();\n//# sourceMappingURL=OSDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL09TRGV0ZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUU7QUFDMUI7QUFDQztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0RBQVksR0FBRyxxREFBYSxDQUFDLDRDQUFRO0FBQ2xELGFBQWEscURBQWUsR0FBRywyQ0FBTztBQUN0QztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9PU0RldGVjdG9yLmpzPzUwYjAiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IEFUVFJfT1NfVFlQRSwgQVRUUl9PU19WRVJTSU9OIH0gZnJvbSAnLi4vLi4vLi4vc2VtY29udic7XG5pbXBvcnQgeyBwbGF0Zm9ybSwgcmVsZWFzZSB9IGZyb20gJ29zJztcbmltcG9ydCB7IG5vcm1hbGl6ZVR5cGUgfSBmcm9tICcuL3V0aWxzJztcbi8qKlxuICogT1NEZXRlY3RvciBkZXRlY3RzIHRoZSByZXNvdXJjZXMgcmVsYXRlZCB0byB0aGUgb3BlcmF0aW5nIHN5c3RlbSAoT1MpIG9uXG4gKiB3aGljaCB0aGUgcHJvY2VzcyByZXByZXNlbnRlZCBieSB0aGlzIHJlc291cmNlIGlzIHJ1bm5pbmcuXG4gKi9cbmNsYXNzIE9TRGV0ZWN0b3Ige1xuICAgIGRldGVjdChfY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgICAgICBbQVRUUl9PU19UWVBFXTogbm9ybWFsaXplVHlwZShwbGF0Zm9ybSgpKSxcbiAgICAgICAgICAgIFtBVFRSX09TX1ZFUlNJT05dOiByZWxlYXNlKCksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7IGF0dHJpYnV0ZXMgfTtcbiAgICB9XG59XG5leHBvcnQgY29uc3Qgb3NEZXRlY3RvciA9IG5ldyBPU0RldGVjdG9yKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PU0RldGVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processDetector: () => (/* binding */ processDetector)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * ProcessDetector will be used to detect the resources related current process running\n * and being instrumented from the NodeJS Process module.\n */\nclass ProcessDetector {\n    detect(_config) {\n        const attributes = {\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_PID]: process.pid,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_EXECUTABLE_NAME]: process.title,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_EXECUTABLE_PATH]: process.execPath,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_COMMAND_ARGS]: [\n                process.argv[0],\n                ...process.execArgv,\n                ...process.argv.slice(1),\n            ],\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_RUNTIME_VERSION]: process.versions.node,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_RUNTIME_NAME]: 'nodejs',\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_RUNTIME_DESCRIPTION]: 'Node.js',\n        };\n        if (process.argv.length > 1) {\n            attributes[_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_COMMAND] = process.argv[1];\n        }\n        try {\n            const userInfo = os__WEBPACK_IMPORTED_MODULE_0__.userInfo();\n            attributes[_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_OWNER] = userInfo.username;\n        }\n        catch (e) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__.diag.debug(`error obtaining process owner: ${e}`);\n        }\n        return { attributes };\n    }\n}\nconst processDetector = new ProcessDetector();\n//# sourceMappingURL=ProcessDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL1Byb2Nlc3NEZXRlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQztBQUN1TztBQUN4UDtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0RBQWdCO0FBQzdCLGFBQWEsa0VBQTRCO0FBQ3pDLGFBQWEsa0VBQTRCO0FBQ3pDLGFBQWEsK0RBQXlCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrRUFBNEI7QUFDekMsYUFBYSwrREFBeUI7QUFDdEMsYUFBYSxzRUFBZ0M7QUFDN0M7QUFDQTtBQUNBLHVCQUF1QiwwREFBb0I7QUFDM0M7QUFDQTtBQUNBLDZCQUE2Qix3Q0FBVztBQUN4Qyx1QkFBdUIsd0RBQWtCO0FBQ3pDO0FBQ0E7QUFDQSxZQUFZLG9EQUFJLHlDQUF5QyxFQUFFO0FBQzNEO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL1Byb2Nlc3NEZXRlY3Rvci5qcz9iYzBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBkaWFnIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpJztcbmltcG9ydCB7IEFUVFJfUFJPQ0VTU19DT01NQU5ELCBBVFRSX1BST0NFU1NfQ09NTUFORF9BUkdTLCBBVFRSX1BST0NFU1NfRVhFQ1VUQUJMRV9OQU1FLCBBVFRSX1BST0NFU1NfRVhFQ1VUQUJMRV9QQVRILCBBVFRSX1BST0NFU1NfT1dORVIsIEFUVFJfUFJPQ0VTU19QSUQsIEFUVFJfUFJPQ0VTU19SVU5USU1FX0RFU0NSSVBUSU9OLCBBVFRSX1BST0NFU1NfUlVOVElNRV9OQU1FLCBBVFRSX1BST0NFU1NfUlVOVElNRV9WRVJTSU9OLCB9IGZyb20gJy4uLy4uLy4uL3NlbWNvbnYnO1xuaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnO1xuLyoqXG4gKiBQcm9jZXNzRGV0ZWN0b3Igd2lsbCBiZSB1c2VkIHRvIGRldGVjdCB0aGUgcmVzb3VyY2VzIHJlbGF0ZWQgY3VycmVudCBwcm9jZXNzIHJ1bm5pbmdcbiAqIGFuZCBiZWluZyBpbnN0cnVtZW50ZWQgZnJvbSB0aGUgTm9kZUpTIFByb2Nlc3MgbW9kdWxlLlxuICovXG5jbGFzcyBQcm9jZXNzRGV0ZWN0b3Ige1xuICAgIGRldGVjdChfY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgICAgICBbQVRUUl9QUk9DRVNTX1BJRF06IHByb2Nlc3MucGlkLFxuICAgICAgICAgICAgW0FUVFJfUFJPQ0VTU19FWEVDVVRBQkxFX05BTUVdOiBwcm9jZXNzLnRpdGxlLFxuICAgICAgICAgICAgW0FUVFJfUFJPQ0VTU19FWEVDVVRBQkxFX1BBVEhdOiBwcm9jZXNzLmV4ZWNQYXRoLFxuICAgICAgICAgICAgW0FUVFJfUFJPQ0VTU19DT01NQU5EX0FSR1NdOiBbXG4gICAgICAgICAgICAgICAgcHJvY2Vzcy5hcmd2WzBdLFxuICAgICAgICAgICAgICAgIC4uLnByb2Nlc3MuZXhlY0FyZ3YsXG4gICAgICAgICAgICAgICAgLi4ucHJvY2Vzcy5hcmd2LnNsaWNlKDEpLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtBVFRSX1BST0NFU1NfUlVOVElNRV9WRVJTSU9OXTogcHJvY2Vzcy52ZXJzaW9ucy5ub2RlLFxuICAgICAgICAgICAgW0FUVFJfUFJPQ0VTU19SVU5USU1FX05BTUVdOiAnbm9kZWpzJyxcbiAgICAgICAgICAgIFtBVFRSX1BST0NFU1NfUlVOVElNRV9ERVNDUklQVElPTl06ICdOb2RlLmpzJyxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHByb2Nlc3MuYXJndi5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzW0FUVFJfUFJPQ0VTU19DT01NQU5EXSA9IHByb2Nlc3MuYXJndlsxXTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlckluZm8gPSBvcy51c2VySW5mbygpO1xuICAgICAgICAgICAgYXR0cmlidXRlc1tBVFRSX1BST0NFU1NfT1dORVJdID0gdXNlckluZm8udXNlcm5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGRpYWcuZGVidWcoYGVycm9yIG9idGFpbmluZyBwcm9jZXNzIG93bmVyOiAke2V9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgYXR0cmlidXRlcyB9O1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBwcm9jZXNzRGV0ZWN0b3IgPSBuZXcgUHJvY2Vzc0RldGVjdG9yKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm9jZXNzRGV0ZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serviceInstanceIdDetector: () => (/* binding */ serviceInstanceIdDetector)\n/* harmony export */ });\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * ServiceInstanceIdDetector detects the resources related to the service instance ID.\n */\nclass ServiceInstanceIdDetector {\n    detect(_config) {\n        return {\n            attributes: {\n                [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_SERVICE_INSTANCE_ID]: (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomUUID)(),\n            },\n        };\n    }\n}\n/**\n * @experimental\n */\nconst serviceInstanceIdDetector = new ServiceInstanceIdDetector();\n//# sourceMappingURL=ServiceInstanceIdDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL1NlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0RDtBQUN4QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw4REFBd0IsR0FBRyxrREFBVTtBQUN0RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9TZXJ2aWNlSW5zdGFuY2VJZERldGVjdG9yLmpzPzg1YjkiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IEFUVFJfU0VSVklDRV9JTlNUQU5DRV9JRCB9IGZyb20gJy4uLy4uLy4uL3NlbWNvbnYnO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gJ2NyeXB0byc7XG4vKipcbiAqIFNlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3IgZGV0ZWN0cyB0aGUgcmVzb3VyY2VzIHJlbGF0ZWQgdG8gdGhlIHNlcnZpY2UgaW5zdGFuY2UgSUQuXG4gKi9cbmNsYXNzIFNlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3Ige1xuICAgIGRldGVjdChfY29uZmlnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgW0FUVFJfU0VSVklDRV9JTlNUQU5DRV9JRF06IHJhbmRvbVVVSUQoKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKi9cbmV4cG9ydCBjb25zdCBzZXJ2aWNlSW5zdGFuY2VJZERldGVjdG9yID0gbmV3IFNlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3IoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js ***!
  \****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   execAsync: () => (/* binding */ execAsync)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst execAsync = util__WEBPACK_IMPORTED_MODULE_1__.promisify(child_process__WEBPACK_IMPORTED_MODULE_0__.exec);\n//# sourceMappingURL=execAsync.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZXhlY0FzeW5jLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQytDO0FBQ2xCO0FBQ3RCLGtCQUFrQiwyQ0FBYyxDQUFDLCtDQUFrQjtBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2V4ZWNBc3luYy5qcz9jNDgwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgKiBhcyBjaGlsZF9wcm9jZXNzIGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICd1dGlsJztcbmV4cG9ydCBjb25zdCBleGVjQXN5bmMgPSB1dGlsLnByb21pc2lmeShjaGlsZF9wcm9jZXNzLmV4ZWMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhlY0FzeW5jLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _execAsync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./execAsync */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nasync function getMachineId() {\n    try {\n        const result = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile('/etc/hostid', { encoding: 'utf8' });\n        return result.trim();\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n    }\n    try {\n        const result = await (0,_execAsync__WEBPACK_IMPORTED_MODULE_2__.execAsync)('kenv -q smbios.system.uuid');\n        return result.stdout.trim();\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-bsd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLWJzZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNvQztBQUNJO0FBQ0U7QUFDbkM7QUFDUDtBQUNBLDZCQUE2Qix3Q0FBRSwyQkFBMkIsa0JBQWtCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0RBQUksb0NBQW9DLEVBQUU7QUFDbEQ7QUFDQTtBQUNBLDZCQUE2QixxREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQSxRQUFRLG9EQUFJLG9DQUFvQyxFQUFFO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLWJzZC5qcz8zM2MwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBwcm9taXNlcyBhcyBmcyB9IGZyb20gJ2ZzJztcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gJy4vZXhlY0FzeW5jJztcbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmcy5yZWFkRmlsZSgnL2V0Yy9ob3N0aWQnLCB7IGVuY29kaW5nOiAndXRmOCcgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQudHJpbSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnLmRlYnVnKGBlcnJvciByZWFkaW5nIG1hY2hpbmUgaWQ6ICR7ZX1gKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY0FzeW5jKCdrZW52IC1xIHNtYmlvcy5zeXN0ZW0udXVpZCcpO1xuICAgICAgICByZXR1cm4gcmVzdWx0LnN0ZG91dC50cmltKCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGRpYWcuZGVidWcoYGVycm9yIHJlYWRpbmcgbWFjaGluZSBpZDogJHtlfWApO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWFjaGluZUlkLWJzZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var _execAsync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./execAsync */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nasync function getMachineId() {\n    try {\n        const result = await (0,_execAsync__WEBPACK_IMPORTED_MODULE_0__.execAsync)('ioreg -rd1 -c \"IOPlatformExpertDevice\"');\n        const idLine = result.stdout\n            .split('\\n')\n            .find(line => line.includes('IOPlatformUUID'));\n        if (!idLine) {\n            return undefined;\n        }\n        const parts = idLine.split('\" = \"');\n        if (parts.length === 2) {\n            return parts[1].slice(0, -1);\n        }\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-darwin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLWRhcndpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDRTtBQUNuQztBQUNQO0FBQ0EsNkJBQTZCLHFEQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0RBQUksb0NBQW9DLEVBQUU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9lc20vZGV0ZWN0b3JzL3BsYXRmb3JtL25vZGUvbWFjaGluZS1pZC9nZXRNYWNoaW5lSWQtZGFyd2luLmpzP2EwMTYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gJy4vZXhlY0FzeW5jJztcbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBleGVjQXN5bmMoJ2lvcmVnIC1yZDEgLWMgXCJJT1BsYXRmb3JtRXhwZXJ0RGV2aWNlXCInKTtcbiAgICAgICAgY29uc3QgaWRMaW5lID0gcmVzdWx0LnN0ZG91dFxuICAgICAgICAgICAgLnNwbGl0KCdcXG4nKVxuICAgICAgICAgICAgLmZpbmQobGluZSA9PiBsaW5lLmluY2x1ZGVzKCdJT1BsYXRmb3JtVVVJRCcpKTtcbiAgICAgICAgaWYgKCFpZExpbmUpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFydHMgPSBpZExpbmUuc3BsaXQoJ1wiID0gXCInKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnRzWzFdLnNsaWNlKDAsIC0xKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnLmRlYnVnKGBlcnJvciByZWFkaW5nIG1hY2hpbmUgaWQ6ICR7ZX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE1hY2hpbmVJZC1kYXJ3aW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nasync function getMachineId() {\n    const paths = ['/etc/machine-id', '/var/lib/dbus/machine-id'];\n    for (const path of paths) {\n        try {\n            const result = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(path, { encoding: 'utf8' });\n            return result.trim();\n        }\n        catch (e) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-linux.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLWxpbnV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb0M7QUFDTTtBQUNuQztBQUNQO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx3Q0FBRSxrQkFBa0Isa0JBQWtCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQUksb0NBQW9DLEVBQUU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC1saW51eC5qcz8wMmUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBwcm9taXNlcyBhcyBmcyB9IGZyb20gJ2ZzJztcbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICBjb25zdCBwYXRocyA9IFsnL2V0Yy9tYWNoaW5lLWlkJywgJy92YXIvbGliL2RidXMvbWFjaGluZS1pZCddO1xuICAgIGZvciAoY29uc3QgcGF0aCBvZiBwYXRocykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZnMucmVhZEZpbGUocGF0aCwgeyBlbmNvZGluZzogJ3V0ZjgnIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50cmltKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGRpYWcuZGVidWcoYGVycm9yIHJlYWRpbmcgbWFjaGluZSBpZDogJHtlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRNYWNoaW5lSWQtbGludXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nasync function getMachineId() {\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.debug('could not read machine-id: unsupported platform');\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-unsupported.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLXVuc3VwcG9ydGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBDO0FBQ25DO0FBQ1AsSUFBSSxvREFBSTtBQUNSO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC11bnN1cHBvcnRlZC5qcz9hMzk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBkaWFnIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNYWNoaW5lSWQoKSB7XG4gICAgZGlhZy5kZWJ1ZygnY291bGQgbm90IHJlYWQgbWFjaGluZS1pZDogdW5zdXBwb3J0ZWQgcGxhdGZvcm0nKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWFjaGluZUlkLXVuc3VwcG9ydGVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _execAsync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./execAsync */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nasync function getMachineId() {\n    const args = 'QUERY HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography /v MachineGuid';\n    let command = '%windir%\\\\System32\\\\REG.exe';\n    if (process__WEBPACK_IMPORTED_MODULE_0__.arch === 'ia32' && \"PROCESSOR_ARCHITEW6432\" in process__WEBPACK_IMPORTED_MODULE_0__.env) {\n        command = '%windir%\\\\sysnative\\\\cmd.exe /c ' + command;\n    }\n    try {\n        const result = await (0,_execAsync__WEBPACK_IMPORTED_MODULE_1__.execAsync)(`${command} ${args}`);\n        const parts = result.stdout.split('REG_SZ');\n        if (parts.length === 2) {\n            return parts[1].trim();\n        }\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__.diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-win.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLXdpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNtQztBQUNLO0FBQ0U7QUFDbkM7QUFDUDtBQUNBO0FBQ0EsUUFBUSx5Q0FBWSxlQUFlLG9FQUF1QztBQUMxRTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIscURBQVMsSUFBSSxTQUFTLEVBQUUsS0FBSztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9EQUFJLG9DQUFvQyxFQUFFO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLXdpbi5qcz85ZDA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgKiBhcyBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSAnLi9leGVjQXN5bmMnO1xuaW1wb3J0IHsgZGlhZyB9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2FwaSc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TWFjaGluZUlkKCkge1xuICAgIGNvbnN0IGFyZ3MgPSAnUVVFUlkgSEtFWV9MT0NBTF9NQUNISU5FXFxcXFNPRlRXQVJFXFxcXE1pY3Jvc29mdFxcXFxDcnlwdG9ncmFwaHkgL3YgTWFjaGluZUd1aWQnO1xuICAgIGxldCBjb21tYW5kID0gJyV3aW5kaXIlXFxcXFN5c3RlbTMyXFxcXFJFRy5leGUnO1xuICAgIGlmIChwcm9jZXNzLmFyY2ggPT09ICdpYTMyJyAmJiAnUFJPQ0VTU09SX0FSQ0hJVEVXNjQzMicgaW4gcHJvY2Vzcy5lbnYpIHtcbiAgICAgICAgY29tbWFuZCA9ICcld2luZGlyJVxcXFxzeXNuYXRpdmVcXFxcY21kLmV4ZSAvYyAnICsgY29tbWFuZDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY0FzeW5jKGAke2NvbW1hbmR9ICR7YXJnc31gKTtcbiAgICAgICAgY29uc3QgcGFydHMgPSByZXN1bHQuc3Rkb3V0LnNwbGl0KCdSRUdfU1onKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnRzWzFdLnRyaW0oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnLmRlYnVnKGBlcnJvciByZWFkaW5nIG1hY2hpbmUgaWQ6ICR7ZX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE1hY2hpbmVJZC13aW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js ***!
  \*******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet getMachineIdImpl;\nasync function getMachineId() {\n    if (!getMachineIdImpl) {\n        switch (process__WEBPACK_IMPORTED_MODULE_0__.platform) {\n            case 'darwin':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-darwin.js */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js\")))\n                    .getMachineId;\n                break;\n            case 'linux':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-linux.js */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js\")))\n                    .getMachineId;\n                break;\n            case 'freebsd':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-bsd.js */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js\"))).getMachineId;\n                break;\n            case 'win32':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-win.js */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js\"))).getMachineId;\n                break;\n            default:\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-unsupported.js */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js\")))\n                    .getMachineId;\n                break;\n        }\n    }\n    return getMachineIdImpl();\n}\n//# sourceMappingURL=getMachineId.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL21hY2hpbmUtaWQvZ2V0TWFjaGluZUlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNtQztBQUNuQztBQUNPO0FBQ1A7QUFDQSxnQkFBZ0IsNkNBQWdCO0FBQ2hDO0FBQ0EsMENBQTBDLDZZQUFrQztBQUM1RTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsMllBQWlDO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx1WUFBK0I7QUFDekU7QUFDQTtBQUNBLDBDQUEwQyx1WUFBK0I7QUFDekU7QUFDQTtBQUNBLDBDQUEwQyx1WkFBdUM7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9lc20vZGV0ZWN0b3JzL3BsYXRmb3JtL25vZGUvbWFjaGluZS1pZC9nZXRNYWNoaW5lSWQuanM/NGVjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0ICogYXMgcHJvY2VzcyBmcm9tICdwcm9jZXNzJztcbmxldCBnZXRNYWNoaW5lSWRJbXBsO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICBpZiAoIWdldE1hY2hpbmVJZEltcGwpIHtcbiAgICAgICAgc3dpdGNoIChwcm9jZXNzLnBsYXRmb3JtKSB7XG4gICAgICAgICAgICBjYXNlICdkYXJ3aW4nOlxuICAgICAgICAgICAgICAgIGdldE1hY2hpbmVJZEltcGwgPSAoYXdhaXQgaW1wb3J0KCcuL2dldE1hY2hpbmVJZC1kYXJ3aW4uanMnKSlcbiAgICAgICAgICAgICAgICAgICAgLmdldE1hY2hpbmVJZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2xpbnV4JzpcbiAgICAgICAgICAgICAgICBnZXRNYWNoaW5lSWRJbXBsID0gKGF3YWl0IGltcG9ydCgnLi9nZXRNYWNoaW5lSWQtbGludXguanMnKSlcbiAgICAgICAgICAgICAgICAgICAgLmdldE1hY2hpbmVJZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2ZyZWVic2QnOlxuICAgICAgICAgICAgICAgIGdldE1hY2hpbmVJZEltcGwgPSAoYXdhaXQgaW1wb3J0KCcuL2dldE1hY2hpbmVJZC1ic2QuanMnKSkuZ2V0TWFjaGluZUlkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnd2luMzInOlxuICAgICAgICAgICAgICAgIGdldE1hY2hpbmVJZEltcGwgPSAoYXdhaXQgaW1wb3J0KCcuL2dldE1hY2hpbmVJZC13aW4uanMnKSkuZ2V0TWFjaGluZUlkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBnZXRNYWNoaW5lSWRJbXBsID0gKGF3YWl0IGltcG9ydCgnLi9nZXRNYWNoaW5lSWQtdW5zdXBwb3J0ZWQuanMnKSlcbiAgICAgICAgICAgICAgICAgICAgLmdldE1hY2hpbmVJZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZ2V0TWFjaGluZUlkSW1wbCgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWFjaGluZUlkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js ***!
  \*************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeArch: () => (/* binding */ normalizeArch),\n/* harmony export */   normalizeType: () => (/* binding */ normalizeType)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst normalizeArch = (nodeArchString) => {\n    // Maps from https://nodejs.org/api/os.html#osarch to arch values in spec:\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/host.md\n    switch (nodeArchString) {\n        case 'arm':\n            return 'arm32';\n        case 'ppc':\n            return 'ppc32';\n        case 'x64':\n            return 'amd64';\n        default:\n            return nodeArchString;\n    }\n};\nconst normalizeType = (nodePlatform) => {\n    // Maps from https://nodejs.org/api/os.html#osplatform to arch values in spec:\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/os.md\n    switch (nodePlatform) {\n        case 'sunos':\n            return 'solaris';\n        case 'win32':\n            return 'windows';\n        default:\n            return nodePlatform;\n    }\n};\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2RldGVjdG9ycy9wbGF0Zm9ybS9ub2RlL3V0aWxzLmpzP2RkZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCBjb25zdCBub3JtYWxpemVBcmNoID0gKG5vZGVBcmNoU3RyaW5nKSA9PiB7XG4gICAgLy8gTWFwcyBmcm9tIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvb3MuaHRtbCNvc2FyY2ggdG8gYXJjaCB2YWx1ZXMgaW4gc3BlYzpcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vb3Blbi10ZWxlbWV0cnkvb3BlbnRlbGVtZXRyeS1zcGVjaWZpY2F0aW9uL2Jsb2IvbWFpbi9zcGVjaWZpY2F0aW9uL3Jlc291cmNlL3NlbWFudGljX2NvbnZlbnRpb25zL2hvc3QubWRcbiAgICBzd2l0Y2ggKG5vZGVBcmNoU3RyaW5nKSB7XG4gICAgICAgIGNhc2UgJ2FybSc6XG4gICAgICAgICAgICByZXR1cm4gJ2FybTMyJztcbiAgICAgICAgY2FzZSAncHBjJzpcbiAgICAgICAgICAgIHJldHVybiAncHBjMzInO1xuICAgICAgICBjYXNlICd4NjQnOlxuICAgICAgICAgICAgcmV0dXJuICdhbWQ2NCc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbm9kZUFyY2hTdHJpbmc7XG4gICAgfVxufTtcbmV4cG9ydCBjb25zdCBub3JtYWxpemVUeXBlID0gKG5vZGVQbGF0Zm9ybSkgPT4ge1xuICAgIC8vIE1hcHMgZnJvbSBodHRwczovL25vZGVqcy5vcmcvYXBpL29zLmh0bWwjb3NwbGF0Zm9ybSB0byBhcmNoIHZhbHVlcyBpbiBzcGVjOlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LXNwZWNpZmljYXRpb24vYmxvYi9tYWluL3NwZWNpZmljYXRpb24vcmVzb3VyY2Uvc2VtYW50aWNfY29udmVudGlvbnMvb3MubWRcbiAgICBzd2l0Y2ggKG5vZGVQbGF0Zm9ybSkge1xuICAgICAgICBjYXNlICdzdW5vcyc6XG4gICAgICAgICAgICByZXR1cm4gJ3NvbGFyaXMnO1xuICAgICAgICBjYXNlICd3aW4zMic6XG4gICAgICAgICAgICByZXR1cm4gJ3dpbmRvd3MnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIG5vZGVQbGF0Zm9ybTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js":
/*!*************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultResource: () => (/* reexport safe */ _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__.defaultResource),\n/* harmony export */   defaultServiceName: () => (/* reexport safe */ _platform__WEBPACK_IMPORTED_MODULE_7__.defaultServiceName),\n/* harmony export */   detectResources: () => (/* reexport safe */ _detect_resources__WEBPACK_IMPORTED_MODULE_0__.detectResources),\n/* harmony export */   emptyResource: () => (/* reexport safe */ _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__.emptyResource),\n/* harmony export */   envDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_1__.envDetector),\n/* harmony export */   hostDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_2__.hostDetector),\n/* harmony export */   osDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_3__.osDetector),\n/* harmony export */   processDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_4__.processDetector),\n/* harmony export */   resourceFromAttributes: () => (/* reexport safe */ _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__.resourceFromAttributes),\n/* harmony export */   serviceInstanceIdDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_5__.serviceInstanceIdDetector)\n/* harmony export */ });\n/* harmony import */ var _detect_resources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./detect-resources */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./detectors */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectors */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./detectors */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./detectors */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./detectors */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js\");\n/* harmony import */ var _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ResourceImpl */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./platform */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNxRDtBQUM0RDtBQUN4QjtBQUN6QztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9pbmRleC5qcz85MjNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgeyBkZXRlY3RSZXNvdXJjZXMgfSBmcm9tICcuL2RldGVjdC1yZXNvdXJjZXMnO1xuZXhwb3J0IHsgZW52RGV0ZWN0b3IsIGhvc3REZXRlY3Rvciwgb3NEZXRlY3RvciwgcHJvY2Vzc0RldGVjdG9yLCBzZXJ2aWNlSW5zdGFuY2VJZERldGVjdG9yLCB9IGZyb20gJy4vZGV0ZWN0b3JzJztcbmV4cG9ydCB7IHJlc291cmNlRnJvbUF0dHJpYnV0ZXMsIGRlZmF1bHRSZXNvdXJjZSwgZW1wdHlSZXNvdXJjZSwgfSBmcm9tICcuL1Jlc291cmNlSW1wbCc7XG5leHBvcnQgeyBkZWZhdWx0U2VydmljZU5hbWUgfSBmcm9tICcuL3BsYXRmb3JtJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultServiceName: () => (/* binding */ defaultServiceName)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction defaultServiceName() {\n    return `unknown_service:${process.argv0}`;\n}\n//# sourceMappingURL=default-service-name.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL3BsYXRmb3JtL25vZGUvZGVmYXVsdC1zZXJ2aWNlLW5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsOEJBQThCLGNBQWM7QUFDNUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9wbGF0Zm9ybS9ub2RlL2RlZmF1bHQtc2VydmljZS1uYW1lLmpzP2U0MTAiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0U2VydmljZU5hbWUoKSB7XG4gICAgcmV0dXJuIGB1bmtub3duX3NlcnZpY2U6JHtwcm9jZXNzLmFyZ3YwfWA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0LXNlcnZpY2UtbmFtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js":
/*!***************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ATTR_CLOUD_ACCOUNT_ID: () => (/* binding */ ATTR_CLOUD_ACCOUNT_ID),\n/* harmony export */   ATTR_CLOUD_AVAILABILITY_ZONE: () => (/* binding */ ATTR_CLOUD_AVAILABILITY_ZONE),\n/* harmony export */   ATTR_CLOUD_PROVIDER: () => (/* binding */ ATTR_CLOUD_PROVIDER),\n/* harmony export */   ATTR_CLOUD_REGION: () => (/* binding */ ATTR_CLOUD_REGION),\n/* harmony export */   ATTR_CONTAINER_ID: () => (/* binding */ ATTR_CONTAINER_ID),\n/* harmony export */   ATTR_CONTAINER_IMAGE_NAME: () => (/* binding */ ATTR_CONTAINER_IMAGE_NAME),\n/* harmony export */   ATTR_CONTAINER_IMAGE_TAGS: () => (/* binding */ ATTR_CONTAINER_IMAGE_TAGS),\n/* harmony export */   ATTR_CONTAINER_NAME: () => (/* binding */ ATTR_CONTAINER_NAME),\n/* harmony export */   ATTR_HOST_ARCH: () => (/* binding */ ATTR_HOST_ARCH),\n/* harmony export */   ATTR_HOST_ID: () => (/* binding */ ATTR_HOST_ID),\n/* harmony export */   ATTR_HOST_IMAGE_ID: () => (/* binding */ ATTR_HOST_IMAGE_ID),\n/* harmony export */   ATTR_HOST_IMAGE_NAME: () => (/* binding */ ATTR_HOST_IMAGE_NAME),\n/* harmony export */   ATTR_HOST_IMAGE_VERSION: () => (/* binding */ ATTR_HOST_IMAGE_VERSION),\n/* harmony export */   ATTR_HOST_NAME: () => (/* binding */ ATTR_HOST_NAME),\n/* harmony export */   ATTR_HOST_TYPE: () => (/* binding */ ATTR_HOST_TYPE),\n/* harmony export */   ATTR_K8S_CLUSTER_NAME: () => (/* binding */ ATTR_K8S_CLUSTER_NAME),\n/* harmony export */   ATTR_K8S_DEPLOYMENT_NAME: () => (/* binding */ ATTR_K8S_DEPLOYMENT_NAME),\n/* harmony export */   ATTR_K8S_NAMESPACE_NAME: () => (/* binding */ ATTR_K8S_NAMESPACE_NAME),\n/* harmony export */   ATTR_K8S_POD_NAME: () => (/* binding */ ATTR_K8S_POD_NAME),\n/* harmony export */   ATTR_OS_TYPE: () => (/* binding */ ATTR_OS_TYPE),\n/* harmony export */   ATTR_OS_VERSION: () => (/* binding */ ATTR_OS_VERSION),\n/* harmony export */   ATTR_PROCESS_COMMAND: () => (/* binding */ ATTR_PROCESS_COMMAND),\n/* harmony export */   ATTR_PROCESS_COMMAND_ARGS: () => (/* binding */ ATTR_PROCESS_COMMAND_ARGS),\n/* harmony export */   ATTR_PROCESS_EXECUTABLE_NAME: () => (/* binding */ ATTR_PROCESS_EXECUTABLE_NAME),\n/* harmony export */   ATTR_PROCESS_EXECUTABLE_PATH: () => (/* binding */ ATTR_PROCESS_EXECUTABLE_PATH),\n/* harmony export */   ATTR_PROCESS_OWNER: () => (/* binding */ ATTR_PROCESS_OWNER),\n/* harmony export */   ATTR_PROCESS_PID: () => (/* binding */ ATTR_PROCESS_PID),\n/* harmony export */   ATTR_PROCESS_RUNTIME_DESCRIPTION: () => (/* binding */ ATTR_PROCESS_RUNTIME_DESCRIPTION),\n/* harmony export */   ATTR_PROCESS_RUNTIME_NAME: () => (/* binding */ ATTR_PROCESS_RUNTIME_NAME),\n/* harmony export */   ATTR_PROCESS_RUNTIME_VERSION: () => (/* binding */ ATTR_PROCESS_RUNTIME_VERSION),\n/* harmony export */   ATTR_SERVICE_INSTANCE_ID: () => (/* binding */ ATTR_SERVICE_INSTANCE_ID),\n/* harmony export */   ATTR_SERVICE_NAMESPACE: () => (/* binding */ ATTR_SERVICE_NAMESPACE),\n/* harmony export */   ATTR_WEBENGINE_DESCRIPTION: () => (/* binding */ ATTR_WEBENGINE_DESCRIPTION),\n/* harmony export */   ATTR_WEBENGINE_NAME: () => (/* binding */ ATTR_WEBENGINE_NAME),\n/* harmony export */   ATTR_WEBENGINE_VERSION: () => (/* binding */ ATTR_WEBENGINE_VERSION)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * This file contains a copy of unstable semantic convention definitions\n * used by this package.\n * @see https://github.com/open-telemetry/opentelemetry-js/tree/main/semantic-conventions#unstable-semconv\n */\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @example 111111111111\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_ACCOUNT_ID = 'cloud.account.id';\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * @example us-east-1c\n *\n * @note Availability zones are called \"zones\" on Alibaba Cloud and Google Cloud.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\n/**\n * Name of the cloud provider.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_PROVIDER = 'cloud.provider';\n/**\n * The geographical region the resource is running.\n *\n * @example us-central1\n * @example us-east-1\n *\n * @note Refer to your provider's docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/global-infrastructure/geographies/), [Google Cloud regions](https://cloud.google.com/about/locations), or [Tencent Cloud regions](https://www.tencentcloud.com/document/product/213/6091).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_REGION = 'cloud.region';\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/containers/run/#container-identification). The UUID might be abbreviated.\n *\n * @example a3bf90e006b2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_ID = 'container.id';\n/**\n * Name of the image the container was built on.\n *\n * @example gcr.io/opentelemetry/operator\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_IMAGE_NAME = 'container.image.name';\n/**\n * Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.\n *\n * @example [\"v1.27.1\", \"3.5.7-0\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_IMAGE_TAGS = 'container.image.tags';\n/**\n * Container name used by container runtime.\n *\n * @example opentelemetry-autoconf\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_NAME = 'container.name';\n/**\n * The CPU architecture the host system is running on.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_ARCH = 'host.arch';\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider. For non-containerized systems, this should be the `machine-id`. See the table below for the sources to use to determine the `machine-id` based on operating system.\n *\n * @example fdbf79e8af94cb7f9e8df36789187052\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_ID = 'host.id';\n/**\n * VM image ID or host OS image ID. For Cloud, this value is from the provider.\n *\n * @example ami-07b06b442921831e5\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_IMAGE_ID = 'host.image.id';\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @example infra-ami-eks-worker-node-7d4ec78312\n * @example CentOS-8-x86_64-1905\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_IMAGE_NAME = 'host.image.name';\n/**\n * The version string of the VM image or host OS as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n *\n * @example 0.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_IMAGE_VERSION = 'host.image.version';\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @example opentelemetry-test\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_NAME = 'host.name';\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @example n1-standard-1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_TYPE = 'host.type';\n/**\n * The name of the cluster.\n *\n * @example opentelemetry-cluster\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_CLUSTER_NAME = 'k8s.cluster.name';\n/**\n * The name of the Deployment.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\n/**\n * The name of the namespace that the pod is running in.\n *\n * @example default\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\n/**\n * The name of the Pod.\n *\n * @example opentelemetry-pod-autoconf\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_POD_NAME = 'k8s.pod.name';\n/**\n * The operating system type.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_OS_TYPE = 'os.type';\n/**\n * The version string of the operating system as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n *\n * @example 14.2.1\n * @example 18.04.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_OS_VERSION = 'os.version';\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @example cmd/otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_COMMAND = 'process.command';\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @example [\"cmd/otecol\", \"--config=config.yaml\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_COMMAND_ARGS = 'process.command_args';\n/**\n * The name of the process executable. On Linux based systems, this **SHOULD** be set to the base name of the target of `/proc/[pid]/exe`. On Windows, this **SHOULD** be set to the base name of `GetProcessImageFileNameW`.\n *\n * @example otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @example /usr/bin/cmd/otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\n/**\n * The username of the user that owns the process.\n *\n * @example root\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_OWNER = 'process.owner';\n/**\n * Process identifier (PID).\n *\n * @example 1234\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_PID = 'process.pid';\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @example \"Eclipse OpenJ9 Eclipse OpenJ9 VM openj9-0.21.0\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\n/**\n * The name of the runtime of this process.\n *\n * @example OpenJDK Runtime Environment\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_RUNTIME_NAME = 'process.runtime.name';\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @example \"14.0.2\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\n/**\n * The string ID of the service instance.\n *\n * @example 627cc493-f310-47de-96bd-71410b7dec09\n *\n * @note **MUST** be unique for each instance of the same `service.namespace,service.name` pair (in other words\n * `service.namespace,service.name,service.instance.id` triplet **MUST** be globally unique). The ID helps to\n * distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled\n * service).\n *\n * Implementations, such as SDKs, are recommended to generate a random Version 1 or Version 4 [RFC\n * 4122](https://www.ietf.org/rfc/rfc4122.txt) UUID, but are free to use an inherent unique ID as the source of\n * this value if stability is desirable. In that case, the ID **SHOULD** be used as source of a UUID Version 5 and\n * **SHOULD** use the following UUID as the namespace: `4d63009a-8d0f-11ee-aad7-4c796ed8e320`.\n *\n * UUIDs are typically recommended, as only an opaque value for the purposes of identifying a service instance is\n * needed. Similar to what can be seen in the man page for the\n * [`/etc/machine-id`](https://www.freedesktop.org/software/systemd/man/latest/machine-id.html) file, the underlying\n * data, such as pod name and namespace should be treated as confidential, being the user's choice to expose it\n * or not via another resource attribute.\n *\n * For applications running behind an application server (like unicorn), we do not recommend using one identifier\n * for all processes participating in the application. Instead, it's recommended each division (e.g. a worker\n * thread in unicorn) to have its own instance.id.\n *\n * It's not recommended for a Collector to set `service.instance.id` if it can't unambiguously determine the\n * service instance that is generating that telemetry. For instance, creating an UUID based on `pod.name` will\n * likely be wrong, as the Collector might not know from which container within that pod the telemetry originated.\n * However, Collectors can set the `service.instance.id` if they can unambiguously determine the service instance\n * for that telemetry. This is typically the case for scraping receivers, as they know the target address and\n * port.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_SERVICE_INSTANCE_ID = 'service.instance.id';\n/**\n * A namespace for `service.name`.\n *\n * @example Shop\n *\n * @note A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_SERVICE_NAMESPACE = 'service.namespace';\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @example WildFly Full 21.0.0.Final (WildFly Core 13.0.1.Final) - 2.2.2.Final\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * The name of the web engine.\n *\n * @example WildFly\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_WEBENGINE_NAME = 'webengine.name';\n/**\n * The version of the web engine.\n *\n * @example 21.0.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_WEBENGINE_VERSION = 'webengine.version';\n//# sourceMappingURL=semconv.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js":
/*!*************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   isPromiseLike: () => (/* binding */ isPromiseLike)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst isPromiseLike = (val) => {\n    return (val !== null &&\n        typeof val === 'object' &&\n        typeof val.then === 'function');\n};\nfunction identity(_) {\n    return _;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvZXNtL3V0aWxzLmpzPzk4OGUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCBjb25zdCBpc1Byb21pc2VMaWtlID0gKHZhbCkgPT4ge1xuICAgIHJldHVybiAodmFsICE9PSBudWxsICYmXG4gICAgICAgIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmXG4gICAgICAgIHR5cGVvZiB2YWwudGhlbiA9PT0gJ2Z1bmN0aW9uJyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGlkZW50aXR5KF8pIHtcbiAgICByZXR1cm4gXztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js\n");

/***/ })

};
;