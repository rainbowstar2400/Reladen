"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js ***!
  \********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerInstrumentations: () => (/* binding */ registerInstrumentations)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/trace-api.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/metrics-api.js\");\n/* harmony import */ var _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api-logs */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api-logs@0.204.0/node_modules/@opentelemetry/api-logs/build/esm/index.js\");\n/* harmony import */ var _autoLoaderUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autoLoaderUtils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nfunction registerInstrumentations(options) {\n    const tracerProvider = options.tracerProvider || _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.getTracerProvider();\n    const meterProvider = options.meterProvider || _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.metrics.getMeterProvider();\n    const loggerProvider = options.loggerProvider || _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_2__.logs.getLoggerProvider();\n    const instrumentations = options.instrumentations?.flat() ?? [];\n    (0,_autoLoaderUtils__WEBPACK_IMPORTED_MODULE_3__.enableInstrumentations)(instrumentations, tracerProvider, meterProvider, loggerProvider);\n    return () => {\n        (0,_autoLoaderUtils__WEBPACK_IMPORTED_MODULE_3__.disableInstrumentations)(instrumentations);\n    };\n}\n//# sourceMappingURL=autoLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vYXV0b0xvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNvRDtBQUNMO0FBQ3NDO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AscURBQXFELHFEQUFLO0FBQzFELG1EQUFtRCx1REFBTztBQUMxRCxxREFBcUQseURBQUk7QUFDekQ7QUFDQSxJQUFJLHdFQUFzQjtBQUMxQjtBQUNBLFFBQVEseUVBQXVCO0FBQy9CO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uQDAuMjA0LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2F1dG9Mb2FkZXIuanM/YjZkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgdHJhY2UsIG1ldHJpY3MgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuaW1wb3J0IHsgbG9ncyB9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2FwaS1sb2dzJztcbmltcG9ydCB7IGRpc2FibGVJbnN0cnVtZW50YXRpb25zLCBlbmFibGVJbnN0cnVtZW50YXRpb25zLCB9IGZyb20gJy4vYXV0b0xvYWRlclV0aWxzJztcbi8qKlxuICogSXQgd2lsbCByZWdpc3RlciBpbnN0cnVtZW50YXRpb25zIGFuZCBwbHVnaW5zXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHJldHVybiByZXR1cm5zIGZ1bmN0aW9uIHRvIHVubG9hZCBpbnN0cnVtZW50YXRpb24gYW5kIHBsdWdpbnMgdGhhdCB3ZXJlXG4gKiAgIHJlZ2lzdGVyZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9ucyhvcHRpb25zKSB7XG4gICAgY29uc3QgdHJhY2VyUHJvdmlkZXIgPSBvcHRpb25zLnRyYWNlclByb3ZpZGVyIHx8IHRyYWNlLmdldFRyYWNlclByb3ZpZGVyKCk7XG4gICAgY29uc3QgbWV0ZXJQcm92aWRlciA9IG9wdGlvbnMubWV0ZXJQcm92aWRlciB8fCBtZXRyaWNzLmdldE1ldGVyUHJvdmlkZXIoKTtcbiAgICBjb25zdCBsb2dnZXJQcm92aWRlciA9IG9wdGlvbnMubG9nZ2VyUHJvdmlkZXIgfHwgbG9ncy5nZXRMb2dnZXJQcm92aWRlcigpO1xuICAgIGNvbnN0IGluc3RydW1lbnRhdGlvbnMgPSBvcHRpb25zLmluc3RydW1lbnRhdGlvbnM/LmZsYXQoKSA/PyBbXTtcbiAgICBlbmFibGVJbnN0cnVtZW50YXRpb25zKGluc3RydW1lbnRhdGlvbnMsIHRyYWNlclByb3ZpZGVyLCBtZXRlclByb3ZpZGVyLCBsb2dnZXJQcm92aWRlcik7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgZGlzYWJsZUluc3RydW1lbnRhdGlvbnMoaW5zdHJ1bWVudGF0aW9ucyk7XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dG9Mb2FkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js ***!
  \*************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disableInstrumentations: () => (/* binding */ disableInstrumentations),\n/* harmony export */   enableInstrumentations: () => (/* binding */ enableInstrumentations)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nfunction enableInstrumentations(instrumentations, tracerProvider, meterProvider, loggerProvider) {\n    for (let i = 0, j = instrumentations.length; i < j; i++) {\n        const instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        if (loggerProvider && instrumentation.setLoggerProvider) {\n            instrumentation.setLoggerProvider(loggerProvider);\n        }\n        // instrumentations have been already enabled during creation\n        // so enable only if user prevented that by setting enabled to false\n        // this is to prevent double enabling but when calling register all\n        // instrumentations should be now enabled\n        if (!instrumentation.getConfig().enabled) {\n            instrumentation.enable();\n        }\n    }\n}\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nfunction disableInstrumentations(instrumentations) {\n    instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n//# sourceMappingURL=autoLoaderUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vYXV0b0xvYWRlclV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbkAwLjIwNC4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL2VzbS9hdXRvTG9hZGVyVXRpbHMuanM/OGFiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBFbmFibGUgaW5zdHJ1bWVudGF0aW9uc1xuICogQHBhcmFtIGluc3RydW1lbnRhdGlvbnNcbiAqIEBwYXJhbSB0cmFjZXJQcm92aWRlclxuICogQHBhcmFtIG1ldGVyUHJvdmlkZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZUluc3RydW1lbnRhdGlvbnMoaW5zdHJ1bWVudGF0aW9ucywgdHJhY2VyUHJvdmlkZXIsIG1ldGVyUHJvdmlkZXIsIGxvZ2dlclByb3ZpZGVyKSB7XG4gICAgZm9yIChsZXQgaSA9IDAsIGogPSBpbnN0cnVtZW50YXRpb25zLmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgICBjb25zdCBpbnN0cnVtZW50YXRpb24gPSBpbnN0cnVtZW50YXRpb25zW2ldO1xuICAgICAgICBpZiAodHJhY2VyUHJvdmlkZXIpIHtcbiAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbi5zZXRUcmFjZXJQcm92aWRlcih0cmFjZXJQcm92aWRlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1ldGVyUHJvdmlkZXIpIHtcbiAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbi5zZXRNZXRlclByb3ZpZGVyKG1ldGVyUHJvdmlkZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsb2dnZXJQcm92aWRlciAmJiBpbnN0cnVtZW50YXRpb24uc2V0TG9nZ2VyUHJvdmlkZXIpIHtcbiAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbi5zZXRMb2dnZXJQcm92aWRlcihsb2dnZXJQcm92aWRlcik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaW5zdHJ1bWVudGF0aW9ucyBoYXZlIGJlZW4gYWxyZWFkeSBlbmFibGVkIGR1cmluZyBjcmVhdGlvblxuICAgICAgICAvLyBzbyBlbmFibGUgb25seSBpZiB1c2VyIHByZXZlbnRlZCB0aGF0IGJ5IHNldHRpbmcgZW5hYmxlZCB0byBmYWxzZVxuICAgICAgICAvLyB0aGlzIGlzIHRvIHByZXZlbnQgZG91YmxlIGVuYWJsaW5nIGJ1dCB3aGVuIGNhbGxpbmcgcmVnaXN0ZXIgYWxsXG4gICAgICAgIC8vIGluc3RydW1lbnRhdGlvbnMgc2hvdWxkIGJlIG5vdyBlbmFibGVkXG4gICAgICAgIGlmICghaW5zdHJ1bWVudGF0aW9uLmdldENvbmZpZygpLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbi5lbmFibGUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogRGlzYWJsZSBpbnN0cnVtZW50YXRpb25zXG4gKiBAcGFyYW0gaW5zdHJ1bWVudGF0aW9uc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGlzYWJsZUluc3RydW1lbnRhdGlvbnMoaW5zdHJ1bWVudGF0aW9ucykge1xuICAgIGluc3RydW1lbnRhdGlvbnMuZm9yRWFjaChpbnN0cnVtZW50YXRpb24gPT4gaW5zdHJ1bWVudGF0aW9uLmRpc2FibGUoKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRvTG9hZGVyVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js ***!
  \***************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationBase: () => (/* reexport safe */ _platform_index__WEBPACK_IMPORTED_MODULE_1__.InstrumentationBase),\n/* harmony export */   InstrumentationNodeModuleDefinition: () => (/* reexport safe */ _instrumentationNodeModuleDefinition__WEBPACK_IMPORTED_MODULE_2__.InstrumentationNodeModuleDefinition),\n/* harmony export */   InstrumentationNodeModuleFile: () => (/* reexport safe */ _instrumentationNodeModuleFile__WEBPACK_IMPORTED_MODULE_3__.InstrumentationNodeModuleFile),\n/* harmony export */   SemconvStability: () => (/* reexport safe */ _semconvStability__WEBPACK_IMPORTED_MODULE_5__.SemconvStability),\n/* harmony export */   isWrapped: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.isWrapped),\n/* harmony export */   registerInstrumentations: () => (/* reexport safe */ _autoLoader__WEBPACK_IMPORTED_MODULE_0__.registerInstrumentations),\n/* harmony export */   safeExecuteInTheMiddle: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.safeExecuteInTheMiddle),\n/* harmony export */   safeExecuteInTheMiddleAsync: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.safeExecuteInTheMiddleAsync),\n/* harmony export */   semconvStabilityFromStr: () => (/* reexport safe */ _semconvStability__WEBPACK_IMPORTED_MODULE_5__.semconvStabilityFromStr)\n/* harmony export */ });\n/* harmony import */ var _autoLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autoLoader */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js\");\n/* harmony import */ var _platform_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform/index */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js\");\n/* harmony import */ var _instrumentationNodeModuleDefinition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instrumentationNodeModuleDefinition */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js\");\n/* harmony import */ var _instrumentationNodeModuleFile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrumentationNodeModuleFile */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/utils.js\");\n/* harmony import */ var _semconvStability__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./semconvStability */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3dEO0FBQ0Q7QUFDcUM7QUFDWjtBQUNVO0FBQ1g7QUFDL0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbkAwLjIwNC4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL2VzbS9pbmRleC5qcz9lZDI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgeyByZWdpc3Rlckluc3RydW1lbnRhdGlvbnMgfSBmcm9tICcuL2F1dG9Mb2FkZXInO1xuZXhwb3J0IHsgSW5zdHJ1bWVudGF0aW9uQmFzZSB9IGZyb20gJy4vcGxhdGZvcm0vaW5kZXgnO1xuZXhwb3J0IHsgSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24gfSBmcm9tICcuL2luc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uJztcbmV4cG9ydCB7IEluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlIH0gZnJvbSAnLi9pbnN0cnVtZW50YXRpb25Ob2RlTW9kdWxlRmlsZSc7XG5leHBvcnQgeyBpc1dyYXBwZWQsIHNhZmVFeGVjdXRlSW5UaGVNaWRkbGUsIHNhZmVFeGVjdXRlSW5UaGVNaWRkbGVBc3luYywgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCB7IFNlbWNvbnZTdGFiaWxpdHksIHNlbWNvbnZTdGFiaWxpdHlGcm9tU3RyIH0gZnJvbSAnLi9zZW1jb252U3RhYmlsaXR5Jztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationNodeModuleDefinition: () => (/* binding */ InstrumentationNodeModuleDefinition)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass InstrumentationNodeModuleDefinition {\n    name;\n    supportedVersions;\n    patch;\n    unpatch;\n    files;\n    constructor(name, supportedVersions, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    patch, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    unpatch, files) {\n        this.name = name;\n        this.supportedVersions = supportedVersions;\n        this.patch = patch;\n        this.unpatch = unpatch;\n        this.files = files || [];\n    }\n}\n//# sourceMappingURL=instrumentationNodeModuleDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vaW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vaW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24uanM/Y2Q2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uIHtcbiAgICBuYW1lO1xuICAgIHN1cHBvcnRlZFZlcnNpb25zO1xuICAgIHBhdGNoO1xuICAgIHVucGF0Y2g7XG4gICAgZmlsZXM7XG4gICAgY29uc3RydWN0b3IobmFtZSwgc3VwcG9ydGVkVmVyc2lvbnMsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgcGF0Y2gsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgdW5wYXRjaCwgZmlsZXMpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5zdXBwb3J0ZWRWZXJzaW9ucyA9IHN1cHBvcnRlZFZlcnNpb25zO1xuICAgICAgICB0aGlzLnBhdGNoID0gcGF0Y2g7XG4gICAgICAgIHRoaXMudW5wYXRjaCA9IHVucGF0Y2g7XG4gICAgICAgIHRoaXMuZmlsZXMgPSBmaWxlcyB8fCBbXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0cnVtZW50YXRpb25Ob2RlTW9kdWxlRGVmaW5pdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationNodeModuleFile: () => (/* binding */ InstrumentationNodeModuleFile)\n/* harmony export */ });\n/* harmony import */ var _platform_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform/index */ \"path\");\n/* harmony import */ var _platform_index__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_platform_index__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass InstrumentationNodeModuleFile {\n    supportedVersions;\n    patch;\n    unpatch;\n    name;\n    constructor(name, supportedVersions, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    patch, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    unpatch) {\n        this.supportedVersions = supportedVersions;\n        this.patch = patch;\n        this.unpatch = unpatch;\n        this.name = (0,_platform_index__WEBPACK_IMPORTED_MODULE_0__.normalize)(name);\n    }\n}\n//# sourceMappingURL=instrumentationNodeModuleFile.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vaW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZUZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzZDO0FBQ3RDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBEQUFTO0FBQzdCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uQDAuMjA0LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2luc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlLmpzPzQwNDkiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IG5vcm1hbGl6ZSB9IGZyb20gJy4vcGxhdGZvcm0vaW5kZXgnO1xuZXhwb3J0IGNsYXNzIEluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlIHtcbiAgICBzdXBwb3J0ZWRWZXJzaW9ucztcbiAgICBwYXRjaDtcbiAgICB1bnBhdGNoO1xuICAgIG5hbWU7XG4gICAgY29uc3RydWN0b3IobmFtZSwgc3VwcG9ydGVkVmVyc2lvbnMsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgcGF0Y2gsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgdW5wYXRjaCkge1xuICAgICAgICB0aGlzLnN1cHBvcnRlZFZlcnNpb25zID0gc3VwcG9ydGVkVmVyc2lvbnM7XG4gICAgICAgIHRoaXMucGF0Y2ggPSBwYXRjaDtcbiAgICAgICAgdGhpcy51bnBhdGNoID0gdW5wYXRjaDtcbiAgICAgICAgdGhpcy5uYW1lID0gbm9ybWFsaXplKG5hbWUpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js ***!
  \**************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModuleNameSeparator: () => (/* binding */ ModuleNameSeparator),\n/* harmony export */   ModuleNameTrie: () => (/* binding */ ModuleNameTrie)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ModuleNameSeparator = '/';\n/**\n * Node in a `ModuleNameTrie`\n */\nclass ModuleNameTrieNode {\n    hooks = [];\n    children = new Map();\n}\n/**\n * Trie containing nodes that represent a part of a module name (i.e. the parts separated by forward slash)\n */\nclass ModuleNameTrie {\n    _trie = new ModuleNameTrieNode();\n    _counter = 0;\n    /**\n     * Insert a module hook into the trie\n     *\n     * @param {Hooked} hook Hook\n     */\n    insert(hook) {\n        let trieNode = this._trie;\n        for (const moduleNamePart of hook.moduleName.split(ModuleNameSeparator)) {\n            let nextNode = trieNode.children.get(moduleNamePart);\n            if (!nextNode) {\n                nextNode = new ModuleNameTrieNode();\n                trieNode.children.set(moduleNamePart, nextNode);\n            }\n            trieNode = nextNode;\n        }\n        trieNode.hooks.push({ hook, insertedId: this._counter++ });\n    }\n    /**\n     * Search for matching hooks in the trie\n     *\n     * @param {string} moduleName Module name\n     * @param {boolean} maintainInsertionOrder Whether to return the results in insertion order\n     * @param {boolean} fullOnly Whether to return only full matches\n     * @returns {Hooked[]} Matching hooks\n     */\n    search(moduleName, { maintainInsertionOrder, fullOnly } = {}) {\n        let trieNode = this._trie;\n        const results = [];\n        let foundFull = true;\n        for (const moduleNamePart of moduleName.split(ModuleNameSeparator)) {\n            const nextNode = trieNode.children.get(moduleNamePart);\n            if (!nextNode) {\n                foundFull = false;\n                break;\n            }\n            if (!fullOnly) {\n                results.push(...nextNode.hooks);\n            }\n            trieNode = nextNode;\n        }\n        if (fullOnly && foundFull) {\n            results.push(...trieNode.hooks);\n        }\n        if (results.length === 0) {\n            return [];\n        }\n        if (results.length === 1) {\n            return [results[0].hook];\n        }\n        if (maintainInsertionOrder) {\n            results.sort((a, b) => a.insertedId - b.insertedId);\n        }\n        return results.map(({ hook }) => hook);\n    }\n}\n//# sourceMappingURL=ModuleNameTrie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vcGxhdGZvcm0vbm9kZS9Nb2R1bGVOYW1lVHJpZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtQ0FBbUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxTQUFTO0FBQ3hCLGVBQWUsU0FBUztBQUN4QixpQkFBaUIsVUFBVTtBQUMzQjtBQUNBLHlCQUF5QixtQ0FBbUMsSUFBSTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE1BQU07QUFDcEM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vcGxhdGZvcm0vbm9kZS9Nb2R1bGVOYW1lVHJpZS5qcz8zNmNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgY29uc3QgTW9kdWxlTmFtZVNlcGFyYXRvciA9ICcvJztcbi8qKlxuICogTm9kZSBpbiBhIGBNb2R1bGVOYW1lVHJpZWBcbiAqL1xuY2xhc3MgTW9kdWxlTmFtZVRyaWVOb2RlIHtcbiAgICBob29rcyA9IFtdO1xuICAgIGNoaWxkcmVuID0gbmV3IE1hcCgpO1xufVxuLyoqXG4gKiBUcmllIGNvbnRhaW5pbmcgbm9kZXMgdGhhdCByZXByZXNlbnQgYSBwYXJ0IG9mIGEgbW9kdWxlIG5hbWUgKGkuZS4gdGhlIHBhcnRzIHNlcGFyYXRlZCBieSBmb3J3YXJkIHNsYXNoKVxuICovXG5leHBvcnQgY2xhc3MgTW9kdWxlTmFtZVRyaWUge1xuICAgIF90cmllID0gbmV3IE1vZHVsZU5hbWVUcmllTm9kZSgpO1xuICAgIF9jb3VudGVyID0gMDtcbiAgICAvKipcbiAgICAgKiBJbnNlcnQgYSBtb2R1bGUgaG9vayBpbnRvIHRoZSB0cmllXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0hvb2tlZH0gaG9vayBIb29rXG4gICAgICovXG4gICAgaW5zZXJ0KGhvb2spIHtcbiAgICAgICAgbGV0IHRyaWVOb2RlID0gdGhpcy5fdHJpZTtcbiAgICAgICAgZm9yIChjb25zdCBtb2R1bGVOYW1lUGFydCBvZiBob29rLm1vZHVsZU5hbWUuc3BsaXQoTW9kdWxlTmFtZVNlcGFyYXRvcikpIHtcbiAgICAgICAgICAgIGxldCBuZXh0Tm9kZSA9IHRyaWVOb2RlLmNoaWxkcmVuLmdldChtb2R1bGVOYW1lUGFydCk7XG4gICAgICAgICAgICBpZiAoIW5leHROb2RlKSB7XG4gICAgICAgICAgICAgICAgbmV4dE5vZGUgPSBuZXcgTW9kdWxlTmFtZVRyaWVOb2RlKCk7XG4gICAgICAgICAgICAgICAgdHJpZU5vZGUuY2hpbGRyZW4uc2V0KG1vZHVsZU5hbWVQYXJ0LCBuZXh0Tm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmllTm9kZSA9IG5leHROb2RlO1xuICAgICAgICB9XG4gICAgICAgIHRyaWVOb2RlLmhvb2tzLnB1c2goeyBob29rLCBpbnNlcnRlZElkOiB0aGlzLl9jb3VudGVyKysgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlYXJjaCBmb3IgbWF0Y2hpbmcgaG9va3MgaW4gdGhlIHRyaWVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2R1bGVOYW1lIE1vZHVsZSBuYW1lXG4gICAgICogQHBhcmFtIHtib29sZWFufSBtYWludGFpbkluc2VydGlvbk9yZGVyIFdoZXRoZXIgdG8gcmV0dXJuIHRoZSByZXN1bHRzIGluIGluc2VydGlvbiBvcmRlclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZnVsbE9ubHkgV2hldGhlciB0byByZXR1cm4gb25seSBmdWxsIG1hdGNoZXNcbiAgICAgKiBAcmV0dXJucyB7SG9va2VkW119IE1hdGNoaW5nIGhvb2tzXG4gICAgICovXG4gICAgc2VhcmNoKG1vZHVsZU5hbWUsIHsgbWFpbnRhaW5JbnNlcnRpb25PcmRlciwgZnVsbE9ubHkgfSA9IHt9KSB7XG4gICAgICAgIGxldCB0cmllTm9kZSA9IHRoaXMuX3RyaWU7XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICAgICAgbGV0IGZvdW5kRnVsbCA9IHRydWU7XG4gICAgICAgIGZvciAoY29uc3QgbW9kdWxlTmFtZVBhcnQgb2YgbW9kdWxlTmFtZS5zcGxpdChNb2R1bGVOYW1lU2VwYXJhdG9yKSkge1xuICAgICAgICAgICAgY29uc3QgbmV4dE5vZGUgPSB0cmllTm9kZS5jaGlsZHJlbi5nZXQobW9kdWxlTmFtZVBhcnQpO1xuICAgICAgICAgICAgaWYgKCFuZXh0Tm9kZSkge1xuICAgICAgICAgICAgICAgIGZvdW5kRnVsbCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFmdWxsT25seSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCguLi5uZXh0Tm9kZS5ob29rcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmllTm9kZSA9IG5leHROb2RlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmdWxsT25seSAmJiBmb3VuZEZ1bGwpIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCguLi50cmllTm9kZS5ob29rcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gW3Jlc3VsdHNbMF0uaG9va107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1haW50YWluSW5zZXJ0aW9uT3JkZXIpIHtcbiAgICAgICAgICAgIHJlc3VsdHMuc29ydCgoYSwgYikgPT4gYS5pbnNlcnRlZElkIC0gYi5pbnNlcnRlZElkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0cy5tYXAoKHsgaG9vayB9KSA9PiBob29rKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Nb2R1bGVOYW1lVHJpZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequireInTheMiddleSingleton: () => (/* binding */ RequireInTheMiddleSingleton)\n/* harmony export */ });\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! require-in-the-middle */ \"(instrument)/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/index.js\");\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(require_in_the_middle__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModuleNameTrie */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Whether Mocha is running in this process\n * Inspired by https://github.com/AndreasPizsa/detect-mocha\n *\n * @type {boolean}\n */\nconst isMocha = [\n    'afterEach',\n    'after',\n    'beforeEach',\n    'before',\n    'describe',\n    'it',\n].every(fn => {\n    // @ts-expect-error TS7053: Element implicitly has an 'any' type\n    return typeof global[fn] === 'function';\n});\n/**\n * Singleton class for `require-in-the-middle`\n * Allows instrumentation plugins to patch modules with only a single `require` patch\n * WARNING: Because this class will create its own `require-in-the-middle` (RITM) instance,\n * we should minimize the number of new instances of this class.\n * Multiple instances of `@opentelemetry/instrumentation` (e.g. multiple versions) in a single process\n * will result in multiple instances of RITM, which will have an impact\n * on the performance of instrumentation hooks being applied.\n */\nclass RequireInTheMiddleSingleton {\n    _moduleNameTrie = new _ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__.ModuleNameTrie();\n    static _instance;\n    constructor() {\n        this._initialize();\n    }\n    _initialize() {\n        new require_in_the_middle__WEBPACK_IMPORTED_MODULE_0__.Hook(\n        // Intercept all `require` calls; we will filter the matching ones below\n        null, { internals: true }, (exports, name, basedir) => {\n            // For internal files on Windows, `name` will use backslash as the path separator\n            const normalizedModuleName = normalizePathSeparators(name);\n            const matches = this._moduleNameTrie.search(normalizedModuleName, {\n                maintainInsertionOrder: true,\n                // For core modules (e.g. `fs`), do not match on sub-paths (e.g. `fs/promises').\n                // This matches the behavior of `require-in-the-middle`.\n                // `basedir` is always `undefined` for core modules.\n                fullOnly: basedir === undefined,\n            });\n            for (const { onRequire } of matches) {\n                exports = onRequire(exports, name, basedir);\n            }\n            return exports;\n        });\n    }\n    /**\n     * Register a hook with `require-in-the-middle`\n     *\n     * @param {string} moduleName Module name\n     * @param {OnRequireFn} onRequire Hook function\n     * @returns {Hooked} Registered hook\n     */\n    register(moduleName, onRequire) {\n        const hooked = { moduleName, onRequire };\n        this._moduleNameTrie.insert(hooked);\n        return hooked;\n    }\n    /**\n     * Get the `RequireInTheMiddleSingleton` singleton\n     *\n     * @returns {RequireInTheMiddleSingleton} Singleton of `RequireInTheMiddleSingleton`\n     */\n    static getInstance() {\n        // Mocha runs all test suites in the same process\n        // This prevents test suites from sharing a singleton\n        if (isMocha)\n            return new RequireInTheMiddleSingleton();\n        return (this._instance =\n            this._instance ?? new RequireInTheMiddleSingleton());\n    }\n}\n/**\n * Normalize the path separators to forward slash in a module name or path\n *\n * @param {string} moduleNameOrPath Module name or path\n * @returns {string} Normalized module name or path\n */\nfunction normalizePathSeparators(moduleNameOrPath) {\n    return path__WEBPACK_IMPORTED_MODULE_1__.sep !== _ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__.ModuleNameSeparator\n        ? moduleNameOrPath.split(path__WEBPACK_IMPORTED_MODULE_1__.sep).join(_ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__.ModuleNameSeparator)\n        : moduleNameOrPath;\n}\n//# sourceMappingURL=RequireInTheMiddleSingleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vcGxhdGZvcm0vbm9kZS9SZXF1aXJlSW5UaGVNaWRkbGVTaW5nbGV0b24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzZDO0FBQ2hCO0FBQzBDO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCwwQkFBMEIsMkRBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksdURBQUk7QUFDaEIsMENBQTBDO0FBQzFDLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix5QkFBeUIsWUFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxhQUFhO0FBQzVCLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDZCQUE2QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBLFdBQVcscUNBQVEsS0FBSyxnRUFBbUI7QUFDM0MsaUNBQWlDLHFDQUFRLE9BQU8sZ0VBQW1CO0FBQ25FO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uQDAuMjA0LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3BsYXRmb3JtL25vZGUvUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uLmpzP2RhZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IEhvb2sgfSBmcm9tICdyZXF1aXJlLWluLXRoZS1taWRkbGUnO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IE1vZHVsZU5hbWVUcmllLCBNb2R1bGVOYW1lU2VwYXJhdG9yIH0gZnJvbSAnLi9Nb2R1bGVOYW1lVHJpZSc7XG4vKipcbiAqIFdoZXRoZXIgTW9jaGEgaXMgcnVubmluZyBpbiB0aGlzIHByb2Nlc3NcbiAqIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9BbmRyZWFzUGl6c2EvZGV0ZWN0LW1vY2hhXG4gKlxuICogQHR5cGUge2Jvb2xlYW59XG4gKi9cbmNvbnN0IGlzTW9jaGEgPSBbXG4gICAgJ2FmdGVyRWFjaCcsXG4gICAgJ2FmdGVyJyxcbiAgICAnYmVmb3JlRWFjaCcsXG4gICAgJ2JlZm9yZScsXG4gICAgJ2Rlc2NyaWJlJyxcbiAgICAnaXQnLFxuXS5ldmVyeShmbiA9PiB7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBUUzcwNTM6IEVsZW1lbnQgaW1wbGljaXRseSBoYXMgYW4gJ2FueScgdHlwZVxuICAgIHJldHVybiB0eXBlb2YgZ2xvYmFsW2ZuXSA9PT0gJ2Z1bmN0aW9uJztcbn0pO1xuLyoqXG4gKiBTaW5nbGV0b24gY2xhc3MgZm9yIGByZXF1aXJlLWluLXRoZS1taWRkbGVgXG4gKiBBbGxvd3MgaW5zdHJ1bWVudGF0aW9uIHBsdWdpbnMgdG8gcGF0Y2ggbW9kdWxlcyB3aXRoIG9ubHkgYSBzaW5nbGUgYHJlcXVpcmVgIHBhdGNoXG4gKiBXQVJOSU5HOiBCZWNhdXNlIHRoaXMgY2xhc3Mgd2lsbCBjcmVhdGUgaXRzIG93biBgcmVxdWlyZS1pbi10aGUtbWlkZGxlYCAoUklUTSkgaW5zdGFuY2UsXG4gKiB3ZSBzaG91bGQgbWluaW1pemUgdGhlIG51bWJlciBvZiBuZXcgaW5zdGFuY2VzIG9mIHRoaXMgY2xhc3MuXG4gKiBNdWx0aXBsZSBpbnN0YW5jZXMgb2YgYEBvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbmAgKGUuZy4gbXVsdGlwbGUgdmVyc2lvbnMpIGluIGEgc2luZ2xlIHByb2Nlc3NcbiAqIHdpbGwgcmVzdWx0IGluIG11bHRpcGxlIGluc3RhbmNlcyBvZiBSSVRNLCB3aGljaCB3aWxsIGhhdmUgYW4gaW1wYWN0XG4gKiBvbiB0aGUgcGVyZm9ybWFuY2Ugb2YgaW5zdHJ1bWVudGF0aW9uIGhvb2tzIGJlaW5nIGFwcGxpZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBSZXF1aXJlSW5UaGVNaWRkbGVTaW5nbGV0b24ge1xuICAgIF9tb2R1bGVOYW1lVHJpZSA9IG5ldyBNb2R1bGVOYW1lVHJpZSgpO1xuICAgIHN0YXRpYyBfaW5zdGFuY2U7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemUoKTtcbiAgICB9XG4gICAgX2luaXRpYWxpemUoKSB7XG4gICAgICAgIG5ldyBIb29rKFxuICAgICAgICAvLyBJbnRlcmNlcHQgYWxsIGByZXF1aXJlYCBjYWxsczsgd2Ugd2lsbCBmaWx0ZXIgdGhlIG1hdGNoaW5nIG9uZXMgYmVsb3dcbiAgICAgICAgbnVsbCwgeyBpbnRlcm5hbHM6IHRydWUgfSwgKGV4cG9ydHMsIG5hbWUsIGJhc2VkaXIpID0+IHtcbiAgICAgICAgICAgIC8vIEZvciBpbnRlcm5hbCBmaWxlcyBvbiBXaW5kb3dzLCBgbmFtZWAgd2lsbCB1c2UgYmFja3NsYXNoIGFzIHRoZSBwYXRoIHNlcGFyYXRvclxuICAgICAgICAgICAgY29uc3Qgbm9ybWFsaXplZE1vZHVsZU5hbWUgPSBub3JtYWxpemVQYXRoU2VwYXJhdG9ycyhuYW1lKTtcbiAgICAgICAgICAgIGNvbnN0IG1hdGNoZXMgPSB0aGlzLl9tb2R1bGVOYW1lVHJpZS5zZWFyY2gobm9ybWFsaXplZE1vZHVsZU5hbWUsIHtcbiAgICAgICAgICAgICAgICBtYWludGFpbkluc2VydGlvbk9yZGVyOiB0cnVlLFxuICAgICAgICAgICAgICAgIC8vIEZvciBjb3JlIG1vZHVsZXMgKGUuZy4gYGZzYCksIGRvIG5vdCBtYXRjaCBvbiBzdWItcGF0aHMgKGUuZy4gYGZzL3Byb21pc2VzJykuXG4gICAgICAgICAgICAgICAgLy8gVGhpcyBtYXRjaGVzIHRoZSBiZWhhdmlvciBvZiBgcmVxdWlyZS1pbi10aGUtbWlkZGxlYC5cbiAgICAgICAgICAgICAgICAvLyBgYmFzZWRpcmAgaXMgYWx3YXlzIGB1bmRlZmluZWRgIGZvciBjb3JlIG1vZHVsZXMuXG4gICAgICAgICAgICAgICAgZnVsbE9ubHk6IGJhc2VkaXIgPT09IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZm9yIChjb25zdCB7IG9uUmVxdWlyZSB9IG9mIG1hdGNoZXMpIHtcbiAgICAgICAgICAgICAgICBleHBvcnRzID0gb25SZXF1aXJlKGV4cG9ydHMsIG5hbWUsIGJhc2VkaXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGV4cG9ydHM7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWdpc3RlciBhIGhvb2sgd2l0aCBgcmVxdWlyZS1pbi10aGUtbWlkZGxlYFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZU5hbWUgTW9kdWxlIG5hbWVcbiAgICAgKiBAcGFyYW0ge09uUmVxdWlyZUZufSBvblJlcXVpcmUgSG9vayBmdW5jdGlvblxuICAgICAqIEByZXR1cm5zIHtIb29rZWR9IFJlZ2lzdGVyZWQgaG9va1xuICAgICAqL1xuICAgIHJlZ2lzdGVyKG1vZHVsZU5hbWUsIG9uUmVxdWlyZSkge1xuICAgICAgICBjb25zdCBob29rZWQgPSB7IG1vZHVsZU5hbWUsIG9uUmVxdWlyZSB9O1xuICAgICAgICB0aGlzLl9tb2R1bGVOYW1lVHJpZS5pbnNlcnQoaG9va2VkKTtcbiAgICAgICAgcmV0dXJuIGhvb2tlZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBgUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uYCBzaW5nbGV0b25cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtSZXF1aXJlSW5UaGVNaWRkbGVTaW5nbGV0b259IFNpbmdsZXRvbiBvZiBgUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uYFxuICAgICAqL1xuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcbiAgICAgICAgLy8gTW9jaGEgcnVucyBhbGwgdGVzdCBzdWl0ZXMgaW4gdGhlIHNhbWUgcHJvY2Vzc1xuICAgICAgICAvLyBUaGlzIHByZXZlbnRzIHRlc3Qgc3VpdGVzIGZyb20gc2hhcmluZyBhIHNpbmdsZXRvblxuICAgICAgICBpZiAoaXNNb2NoYSlcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uKCk7XG4gICAgICAgIHJldHVybiAodGhpcy5faW5zdGFuY2UgPVxuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2UgPz8gbmV3IFJlcXVpcmVJblRoZU1pZGRsZVNpbmdsZXRvbigpKTtcbiAgICB9XG59XG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgcGF0aCBzZXBhcmF0b3JzIHRvIGZvcndhcmQgc2xhc2ggaW4gYSBtb2R1bGUgbmFtZSBvciBwYXRoXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZU5hbWVPclBhdGggTW9kdWxlIG5hbWUgb3IgcGF0aFxuICogQHJldHVybnMge3N0cmluZ30gTm9ybWFsaXplZCBtb2R1bGUgbmFtZSBvciBwYXRoXG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZVBhdGhTZXBhcmF0b3JzKG1vZHVsZU5hbWVPclBhdGgpIHtcbiAgICByZXR1cm4gcGF0aC5zZXAgIT09IE1vZHVsZU5hbWVTZXBhcmF0b3JcbiAgICAgICAgPyBtb2R1bGVOYW1lT3JQYXRoLnNwbGl0KHBhdGguc2VwKS5qb2luKE1vZHVsZU5hbWVTZXBhcmF0b3IpXG4gICAgICAgIDogbW9kdWxlTmFtZU9yUGF0aDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlcXVpcmVJblRoZU1pZGRsZVNpbmdsZXRvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SemconvStability: () => (/* binding */ SemconvStability),\n/* harmony export */   semconvStabilityFromStr: () => (/* binding */ semconvStabilityFromStr)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SemconvStability;\n(function (SemconvStability) {\n    /** Emit only stable semantic conventions. */\n    SemconvStability[SemconvStability[\"STABLE\"] = 1] = \"STABLE\";\n    /** Emit only old semantic conventions. */\n    SemconvStability[SemconvStability[\"OLD\"] = 2] = \"OLD\";\n    /** Emit both stable and old semantic conventions. */\n    SemconvStability[SemconvStability[\"DUPLICATE\"] = 3] = \"DUPLICATE\";\n})(SemconvStability || (SemconvStability = {}));\n/**\n * Determine the appropriate semconv stability for the given namespace.\n *\n * This will parse the given string of comma-separated values (often\n * `process.env.OTEL_SEMCONV_STABILITY_OPT_IN`) looking for the `${namespace}`\n * or `${namespace}/dup` tokens. This is a pattern defined by a number of\n * non-normative semconv documents.\n *\n * For example:\n * - namespace 'http': https://opentelemetry.io/docs/specs/semconv/non-normative/http-migration/\n * - namespace 'database': https://opentelemetry.io/docs/specs/semconv/non-normative/database-migration/\n * - namespace 'k8s': https://opentelemetry.io/docs/specs/semconv/non-normative/k8s-migration/\n *\n * Usage:\n *\n *  import {SemconvStability, semconvStabilityFromStr} from '@opentelemetry/instrumentation';\n *\n *  export class FooInstrumentation extends InstrumentationBase<FooInstrumentationConfig> {\n *    private _semconvStability: SemconvStability;\n *    constructor(config: FooInstrumentationConfig = {}) {\n *      super('@opentelemetry/instrumentation-foo', VERSION, config);\n *\n *      // When supporting the OTEL_SEMCONV_STABILITY_OPT_IN envvar\n *      this._semconvStability = semconvStabilityFromStr(\n *        'http',\n *        process.env.OTEL_SEMCONV_STABILITY_OPT_IN\n *      );\n *\n *      // or when supporting a `semconvStabilityOptIn` config option (e.g. for\n *      // the web where there are no envvars).\n *      this._semconvStability = semconvStabilityFromStr(\n *        'http',\n *        config?.semconvStabilityOptIn\n *      );\n *    }\n *  }\n *\n *  // Then, to apply semconv, use the following or similar:\n *  if (this._semconvStability & SemconvStability.OLD) {\n *    // ...\n *  }\n *  if (this._semconvStability & SemconvStability.STABLE) {\n *    // ...\n *  }\n *\n */\nfunction semconvStabilityFromStr(namespace, str) {\n    let semconvStability = SemconvStability.OLD;\n    // The same parsing of `str` as `getStringListFromEnv` from the core pkg.\n    const entries = str\n        ?.split(',')\n        .map(v => v.trim())\n        .filter(s => s !== '');\n    for (const entry of entries ?? []) {\n        if (entry.toLowerCase() === namespace + '/dup') {\n            // DUPLICATE takes highest precedence.\n            semconvStability = SemconvStability.DUPLICATE;\n            break;\n        }\n        else if (entry.toLowerCase() === namespace) {\n            semconvStability = SemconvStability.STABLE;\n        }\n    }\n    return semconvStability;\n}\n//# sourceMappingURL=semconvStability.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vc2VtY29udlN0YWJpbGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxVQUFVO0FBQzdFLFNBQVMsVUFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJDQUEyQztBQUN2RDtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbkAwLjIwNC4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL2VzbS9zZW1jb252U3RhYmlsaXR5LmpzPzg1OGQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCB2YXIgU2VtY29udlN0YWJpbGl0eTtcbihmdW5jdGlvbiAoU2VtY29udlN0YWJpbGl0eSkge1xuICAgIC8qKiBFbWl0IG9ubHkgc3RhYmxlIHNlbWFudGljIGNvbnZlbnRpb25zLiAqL1xuICAgIFNlbWNvbnZTdGFiaWxpdHlbU2VtY29udlN0YWJpbGl0eVtcIlNUQUJMRVwiXSA9IDFdID0gXCJTVEFCTEVcIjtcbiAgICAvKiogRW1pdCBvbmx5IG9sZCBzZW1hbnRpYyBjb252ZW50aW9ucy4gKi9cbiAgICBTZW1jb252U3RhYmlsaXR5W1NlbWNvbnZTdGFiaWxpdHlbXCJPTERcIl0gPSAyXSA9IFwiT0xEXCI7XG4gICAgLyoqIEVtaXQgYm90aCBzdGFibGUgYW5kIG9sZCBzZW1hbnRpYyBjb252ZW50aW9ucy4gKi9cbiAgICBTZW1jb252U3RhYmlsaXR5W1NlbWNvbnZTdGFiaWxpdHlbXCJEVVBMSUNBVEVcIl0gPSAzXSA9IFwiRFVQTElDQVRFXCI7XG59KShTZW1jb252U3RhYmlsaXR5IHx8IChTZW1jb252U3RhYmlsaXR5ID0ge30pKTtcbi8qKlxuICogRGV0ZXJtaW5lIHRoZSBhcHByb3ByaWF0ZSBzZW1jb252IHN0YWJpbGl0eSBmb3IgdGhlIGdpdmVuIG5hbWVzcGFjZS5cbiAqXG4gKiBUaGlzIHdpbGwgcGFyc2UgdGhlIGdpdmVuIHN0cmluZyBvZiBjb21tYS1zZXBhcmF0ZWQgdmFsdWVzIChvZnRlblxuICogYHByb2Nlc3MuZW52Lk9URUxfU0VNQ09OVl9TVEFCSUxJVFlfT1BUX0lOYCkgbG9va2luZyBmb3IgdGhlIGAke25hbWVzcGFjZX1gXG4gKiBvciBgJHtuYW1lc3BhY2V9L2R1cGAgdG9rZW5zLiBUaGlzIGlzIGEgcGF0dGVybiBkZWZpbmVkIGJ5IGEgbnVtYmVyIG9mXG4gKiBub24tbm9ybWF0aXZlIHNlbWNvbnYgZG9jdW1lbnRzLlxuICpcbiAqIEZvciBleGFtcGxlOlxuICogLSBuYW1lc3BhY2UgJ2h0dHAnOiBodHRwczovL29wZW50ZWxlbWV0cnkuaW8vZG9jcy9zcGVjcy9zZW1jb252L25vbi1ub3JtYXRpdmUvaHR0cC1taWdyYXRpb24vXG4gKiAtIG5hbWVzcGFjZSAnZGF0YWJhc2UnOiBodHRwczovL29wZW50ZWxlbWV0cnkuaW8vZG9jcy9zcGVjcy9zZW1jb252L25vbi1ub3JtYXRpdmUvZGF0YWJhc2UtbWlncmF0aW9uL1xuICogLSBuYW1lc3BhY2UgJ2s4cyc6IGh0dHBzOi8vb3BlbnRlbGVtZXRyeS5pby9kb2NzL3NwZWNzL3NlbWNvbnYvbm9uLW5vcm1hdGl2ZS9rOHMtbWlncmF0aW9uL1xuICpcbiAqIFVzYWdlOlxuICpcbiAqICBpbXBvcnQge1NlbWNvbnZTdGFiaWxpdHksIHNlbWNvbnZTdGFiaWxpdHlGcm9tU3RyfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24nO1xuICpcbiAqICBleHBvcnQgY2xhc3MgRm9vSW5zdHJ1bWVudGF0aW9uIGV4dGVuZHMgSW5zdHJ1bWVudGF0aW9uQmFzZTxGb29JbnN0cnVtZW50YXRpb25Db25maWc+IHtcbiAqICAgIHByaXZhdGUgX3NlbWNvbnZTdGFiaWxpdHk6IFNlbWNvbnZTdGFiaWxpdHk7XG4gKiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IEZvb0luc3RydW1lbnRhdGlvbkNvbmZpZyA9IHt9KSB7XG4gKiAgICAgIHN1cGVyKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZm9vJywgVkVSU0lPTiwgY29uZmlnKTtcbiAqXG4gKiAgICAgIC8vIFdoZW4gc3VwcG9ydGluZyB0aGUgT1RFTF9TRU1DT05WX1NUQUJJTElUWV9PUFRfSU4gZW52dmFyXG4gKiAgICAgIHRoaXMuX3NlbWNvbnZTdGFiaWxpdHkgPSBzZW1jb252U3RhYmlsaXR5RnJvbVN0cihcbiAqICAgICAgICAnaHR0cCcsXG4gKiAgICAgICAgcHJvY2Vzcy5lbnYuT1RFTF9TRU1DT05WX1NUQUJJTElUWV9PUFRfSU5cbiAqICAgICAgKTtcbiAqXG4gKiAgICAgIC8vIG9yIHdoZW4gc3VwcG9ydGluZyBhIGBzZW1jb252U3RhYmlsaXR5T3B0SW5gIGNvbmZpZyBvcHRpb24gKGUuZy4gZm9yXG4gKiAgICAgIC8vIHRoZSB3ZWIgd2hlcmUgdGhlcmUgYXJlIG5vIGVudnZhcnMpLlxuICogICAgICB0aGlzLl9zZW1jb252U3RhYmlsaXR5ID0gc2VtY29udlN0YWJpbGl0eUZyb21TdHIoXG4gKiAgICAgICAgJ2h0dHAnLFxuICogICAgICAgIGNvbmZpZz8uc2VtY29udlN0YWJpbGl0eU9wdEluXG4gKiAgICAgICk7XG4gKiAgICB9XG4gKiAgfVxuICpcbiAqICAvLyBUaGVuLCB0byBhcHBseSBzZW1jb252LCB1c2UgdGhlIGZvbGxvd2luZyBvciBzaW1pbGFyOlxuICogIGlmICh0aGlzLl9zZW1jb252U3RhYmlsaXR5ICYgU2VtY29udlN0YWJpbGl0eS5PTEQpIHtcbiAqICAgIC8vIC4uLlxuICogIH1cbiAqICBpZiAodGhpcy5fc2VtY29udlN0YWJpbGl0eSAmIFNlbWNvbnZTdGFiaWxpdHkuU1RBQkxFKSB7XG4gKiAgICAvLyAuLi5cbiAqICB9XG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VtY29udlN0YWJpbGl0eUZyb21TdHIobmFtZXNwYWNlLCBzdHIpIHtcbiAgICBsZXQgc2VtY29udlN0YWJpbGl0eSA9IFNlbWNvbnZTdGFiaWxpdHkuT0xEO1xuICAgIC8vIFRoZSBzYW1lIHBhcnNpbmcgb2YgYHN0cmAgYXMgYGdldFN0cmluZ0xpc3RGcm9tRW52YCBmcm9tIHRoZSBjb3JlIHBrZy5cbiAgICBjb25zdCBlbnRyaWVzID0gc3RyXG4gICAgICAgID8uc3BsaXQoJywnKVxuICAgICAgICAubWFwKHYgPT4gdi50cmltKCkpXG4gICAgICAgIC5maWx0ZXIocyA9PiBzICE9PSAnJyk7XG4gICAgZm9yIChjb25zdCBlbnRyeSBvZiBlbnRyaWVzID8/IFtdKSB7XG4gICAgICAgIGlmIChlbnRyeS50b0xvd2VyQ2FzZSgpID09PSBuYW1lc3BhY2UgKyAnL2R1cCcpIHtcbiAgICAgICAgICAgIC8vIERVUExJQ0FURSB0YWtlcyBoaWdoZXN0IHByZWNlZGVuY2UuXG4gICAgICAgICAgICBzZW1jb252U3RhYmlsaXR5ID0gU2VtY29udlN0YWJpbGl0eS5EVVBMSUNBVEU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlbnRyeS50b0xvd2VyQ2FzZSgpID09PSBuYW1lc3BhY2UpIHtcbiAgICAgICAgICAgIHNlbWNvbnZTdGFiaWxpdHkgPSBTZW1jb252U3RhYmlsaXR5LlNUQUJMRTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2VtY29udlN0YWJpbGl0eTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbWNvbnZTdGFiaWxpdHkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semver.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semver.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   satisfies: () => (/* binding */ satisfies)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This is a custom semantic versioning implementation compatible with the\n// `satisfies(version, range, options?)` function from the `semver` npm package;\n// with the exception that the `loose` option is not supported.\n//\n// The motivation for the custom semver implementation is that\n// `semver` package has some initialization delay (lots of RegExp init and compile)\n// and this leads to coldstart overhead for the OTEL Lambda Node.js layer.\n// Hence, we have implemented lightweight version of it internally with required functionalities.\n\nconst VERSION_REGEXP = /^(?:v)?(?<version>(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*))(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<build>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\nconst RANGE_REGEXP = /^(?<op><|>|=|==|<=|>=|~|\\^|~>)?\\s*(?:v)?(?<version>(?<major>x|X|\\*|0|[1-9]\\d*)(?:\\.(?<minor>x|X|\\*|0|[1-9]\\d*))?(?:\\.(?<patch>x|X|\\*|0|[1-9]\\d*))?)(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<build>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\nconst operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1],\n    '!=': [-1, 1],\n};\n/**\n * Checks given version whether it satisfies given range expression.\n * @param version the [version](https://github.com/npm/node-semver#versions) to be checked\n * @param range   the [range](https://github.com/npm/node-semver#ranges) expression for version check\n * @param options options to configure semver satisfy check\n */\nfunction satisfies(version, range, options) {\n    // Strict semver format check\n    if (!_validateVersion(version)) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.error(`Invalid version: ${version}`);\n        return false;\n    }\n    // If range is empty, satisfy check succeeds regardless what version is\n    if (!range) {\n        return true;\n    }\n    // Cleanup range\n    range = range.replace(/([<>=~^]+)\\s+/g, '$1');\n    // Parse version\n    const parsedVersion = _parseVersion(version);\n    if (!parsedVersion) {\n        return false;\n    }\n    const allParsedRanges = [];\n    // Check given version whether it satisfies given range expression\n    const checkResult = _doSatisfies(parsedVersion, range, allParsedRanges, options);\n    // If check result is OK,\n    // do another final check for pre-release, if pre-release check is included by option\n    if (checkResult && !options?.includePrerelease) {\n        return _doPreleaseCheck(parsedVersion, allParsedRanges);\n    }\n    return checkResult;\n}\nfunction _validateVersion(version) {\n    return typeof version === 'string' && VERSION_REGEXP.test(version);\n}\nfunction _doSatisfies(parsedVersion, range, allParsedRanges, options) {\n    if (range.includes('||')) {\n        // A version matches a range if and only if\n        // every comparator in at least one of the ||-separated comparator sets is satisfied by the version\n        const ranges = range.trim().split('||');\n        for (const r of ranges) {\n            if (_checkRange(parsedVersion, r, allParsedRanges, options)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else if (range.includes(' - ')) {\n        // Hyphen ranges: https://github.com/npm/node-semver#hyphen-ranges-xyz---abc\n        range = replaceHyphen(range, options);\n    }\n    else if (range.includes(' ')) {\n        // Multiple separated ranges and all needs to be satisfied for success\n        const ranges = range\n            .trim()\n            .replace(/\\s{2,}/g, ' ')\n            .split(' ');\n        for (const r of ranges) {\n            if (!_checkRange(parsedVersion, r, allParsedRanges, options)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Check given parsed version with given range\n    return _checkRange(parsedVersion, range, allParsedRanges, options);\n}\nfunction _checkRange(parsedVersion, range, allParsedRanges, options) {\n    range = _normalizeRange(range, options);\n    if (range.includes(' ')) {\n        // If there are multiple ranges separated, satisfy each of them\n        return _doSatisfies(parsedVersion, range, allParsedRanges, options);\n    }\n    else {\n        // Validate and parse range\n        const parsedRange = _parseRange(range);\n        allParsedRanges.push(parsedRange);\n        // Check parsed version by parsed range\n        return _satisfies(parsedVersion, parsedRange);\n    }\n}\nfunction _satisfies(parsedVersion, parsedRange) {\n    // If range is invalid, satisfy check fails (no error throw)\n    if (parsedRange.invalid) {\n        return false;\n    }\n    // If range is empty or wildcard, satisfy check succeeds regardless what version is\n    if (!parsedRange.version || _isWildcard(parsedRange.version)) {\n        return true;\n    }\n    // Compare version segment first\n    let comparisonResult = _compareVersionSegments(parsedVersion.versionSegments || [], parsedRange.versionSegments || []);\n    // If versions segments are equal, compare by pre-release segments\n    if (comparisonResult === 0) {\n        const versionPrereleaseSegments = parsedVersion.prereleaseSegments || [];\n        const rangePrereleaseSegments = parsedRange.prereleaseSegments || [];\n        if (!versionPrereleaseSegments.length && !rangePrereleaseSegments.length) {\n            comparisonResult = 0;\n        }\n        else if (!versionPrereleaseSegments.length &&\n            rangePrereleaseSegments.length) {\n            comparisonResult = 1;\n        }\n        else if (versionPrereleaseSegments.length &&\n            !rangePrereleaseSegments.length) {\n            comparisonResult = -1;\n        }\n        else {\n            comparisonResult = _compareVersionSegments(versionPrereleaseSegments, rangePrereleaseSegments);\n        }\n    }\n    // Resolve check result according to comparison operator\n    return operatorResMap[parsedRange.op]?.includes(comparisonResult);\n}\nfunction _doPreleaseCheck(parsedVersion, allParsedRanges) {\n    if (parsedVersion.prerelease) {\n        return allParsedRanges.some(r => r.prerelease && r.version === parsedVersion.version);\n    }\n    return true;\n}\nfunction _normalizeRange(range, options) {\n    range = range.trim();\n    range = replaceCaret(range, options);\n    range = replaceTilde(range);\n    range = replaceXRange(range, options);\n    range = range.trim();\n    return range;\n}\nfunction isX(id) {\n    return !id || id.toLowerCase() === 'x' || id === '*';\n}\nfunction _parseVersion(versionString) {\n    const match = versionString.match(VERSION_REGEXP);\n    if (!match) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.error(`Invalid version: ${versionString}`);\n        return undefined;\n    }\n    const version = match.groups.version;\n    const prerelease = match.groups.prerelease;\n    const build = match.groups.build;\n    const versionSegments = version.split('.');\n    const prereleaseSegments = prerelease?.split('.');\n    return {\n        op: undefined,\n        version,\n        versionSegments,\n        versionSegmentCount: versionSegments.length,\n        prerelease,\n        prereleaseSegments,\n        prereleaseSegmentCount: prereleaseSegments ? prereleaseSegments.length : 0,\n        build,\n    };\n}\nfunction _parseRange(rangeString) {\n    if (!rangeString) {\n        return {};\n    }\n    const match = rangeString.match(RANGE_REGEXP);\n    if (!match) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.error(`Invalid range: ${rangeString}`);\n        return {\n            invalid: true,\n        };\n    }\n    let op = match.groups.op;\n    const version = match.groups.version;\n    const prerelease = match.groups.prerelease;\n    const build = match.groups.build;\n    const versionSegments = version.split('.');\n    const prereleaseSegments = prerelease?.split('.');\n    if (op === '==') {\n        op = '=';\n    }\n    return {\n        op: op || '=',\n        version,\n        versionSegments,\n        versionSegmentCount: versionSegments.length,\n        prerelease,\n        prereleaseSegments,\n        prereleaseSegmentCount: prereleaseSegments ? prereleaseSegments.length : 0,\n        build,\n    };\n}\nfunction _isWildcard(s) {\n    return s === '*' || s === 'x' || s === 'X';\n}\nfunction _parseVersionString(v) {\n    const n = parseInt(v, 10);\n    return isNaN(n) ? v : n;\n}\nfunction _normalizeVersionType(a, b) {\n    if (typeof a === typeof b) {\n        if (typeof a === 'number') {\n            return [a, b];\n        }\n        else if (typeof a === 'string') {\n            return [a, b];\n        }\n        else {\n            throw new Error('Version segments can only be strings or numbers');\n        }\n    }\n    else {\n        return [String(a), String(b)];\n    }\n}\nfunction _compareVersionStrings(v1, v2) {\n    if (_isWildcard(v1) || _isWildcard(v2)) {\n        return 0;\n    }\n    const [parsedV1, parsedV2] = _normalizeVersionType(_parseVersionString(v1), _parseVersionString(v2));\n    if (parsedV1 > parsedV2) {\n        return 1;\n    }\n    else if (parsedV1 < parsedV2) {\n        return -1;\n    }\n    return 0;\n}\nfunction _compareVersionSegments(v1, v2) {\n    for (let i = 0; i < Math.max(v1.length, v2.length); i++) {\n        const res = _compareVersionStrings(v1[i] || '0', v2[i] || '0');\n        if (res !== 0) {\n            return res;\n        }\n    }\n    return 0;\n}\n////////////////////////////////////////////////////////////////////////////////\n// The rest of this file is adapted from portions of https://github.com/npm/node-semver/tree/868d4bb\n// License:\n/*\n * The ISC License\n *\n * Copyright (c) Isaac Z. Schlueter and Contributors\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\n * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]';\nconst NUMERICIDENTIFIER = '0|[1-9]\\\\d*';\nconst NONNUMERICIDENTIFIER = `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`;\nconst GTLT = '((?:<|>)?=?)';\nconst PRERELEASEIDENTIFIER = `(?:${NUMERICIDENTIFIER}|${NONNUMERICIDENTIFIER})`;\nconst PRERELEASE = `(?:-(${PRERELEASEIDENTIFIER}(?:\\\\.${PRERELEASEIDENTIFIER})*))`;\nconst BUILDIDENTIFIER = `${LETTERDASHNUMBER}+`;\nconst BUILD = `(?:\\\\+(${BUILDIDENTIFIER}(?:\\\\.${BUILDIDENTIFIER})*))`;\nconst XRANGEIDENTIFIER = `${NUMERICIDENTIFIER}|x|X|\\\\*`;\nconst XRANGEPLAIN = `[v=\\\\s]*(${XRANGEIDENTIFIER})` +\n    `(?:\\\\.(${XRANGEIDENTIFIER})` +\n    `(?:\\\\.(${XRANGEIDENTIFIER})` +\n    `(?:${PRERELEASE})?${BUILD}?` +\n    `)?)?`;\nconst XRANGE = `^${GTLT}\\\\s*${XRANGEPLAIN}$`;\nconst XRANGE_REGEXP = new RegExp(XRANGE);\nconst HYPHENRANGE = `^\\\\s*(${XRANGEPLAIN})` + `\\\\s+-\\\\s+` + `(${XRANGEPLAIN})` + `\\\\s*$`;\nconst HYPHENRANGE_REGEXP = new RegExp(HYPHENRANGE);\nconst LONETILDE = '(?:~>?)';\nconst TILDE = `^${LONETILDE}${XRANGEPLAIN}$`;\nconst TILDE_REGEXP = new RegExp(TILDE);\nconst LONECARET = '(?:\\\\^)';\nconst CARET = `^${LONECARET}${XRANGEPLAIN}$`;\nconst CARET_REGEXP = new RegExp(CARET);\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L285\n//\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nfunction replaceTilde(comp) {\n    const r = TILDE_REGEXP;\n    return comp.replace(r, (_, M, m, p, pr) => {\n        let ret;\n        if (isX(M)) {\n            ret = '';\n        }\n        else if (isX(m)) {\n            ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;\n        }\n        else if (isX(p)) {\n            // ~1.2 == >=1.2.0 <1.3.0-0\n            ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;\n        }\n        else if (pr) {\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n        }\n        else {\n            // ~1.2.3 == >=1.2.3 <1.3.0-0\n            ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;\n        }\n        return ret;\n    });\n}\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L329\n//\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nfunction replaceCaret(comp, options) {\n    const r = CARET_REGEXP;\n    const z = options?.includePrerelease ? '-0' : '';\n    return comp.replace(r, (_, M, m, p, pr) => {\n        let ret;\n        if (isX(M)) {\n            ret = '';\n        }\n        else if (isX(m)) {\n            ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;\n        }\n        else if (isX(p)) {\n            if (M === '0') {\n                ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;\n            }\n            else {\n                ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;\n            }\n        }\n        else if (pr) {\n            if (M === '0') {\n                if (m === '0') {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;\n                }\n                else {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n                }\n            }\n            else {\n                ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;\n            }\n        }\n        else {\n            if (M === '0') {\n                if (m === '0') {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;\n                }\n                else {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;\n                }\n            }\n            else {\n                ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;\n            }\n        }\n        return ret;\n    });\n}\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L390\nfunction replaceXRange(comp, options) {\n    const r = XRANGE_REGEXP;\n    return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n        const xM = isX(M);\n        const xm = xM || isX(m);\n        const xp = xm || isX(p);\n        const anyX = xp;\n        if (gtlt === '=' && anyX) {\n            gtlt = '';\n        }\n        // if we're including prereleases in the match, then we need\n        // to fix this to -0, the lowest possible prerelease value\n        pr = options?.includePrerelease ? '-0' : '';\n        if (xM) {\n            if (gtlt === '>' || gtlt === '<') {\n                // nothing is allowed\n                ret = '<0.0.0-0';\n            }\n            else {\n                // nothing is forbidden\n                ret = '*';\n            }\n        }\n        else if (gtlt && anyX) {\n            // we know patch is an x, because we have any x at all.\n            // replace X with 0\n            if (xm) {\n                m = 0;\n            }\n            p = 0;\n            if (gtlt === '>') {\n                // >1 => >=2.0.0\n                // >1.2 => >=1.3.0\n                gtlt = '>=';\n                if (xm) {\n                    M = +M + 1;\n                    m = 0;\n                    p = 0;\n                }\n                else {\n                    m = +m + 1;\n                    p = 0;\n                }\n            }\n            else if (gtlt === '<=') {\n                // <=0.7.x is actually <0.8.0, since any 0.7.x should\n                // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n                gtlt = '<';\n                if (xm) {\n                    M = +M + 1;\n                }\n                else {\n                    m = +m + 1;\n                }\n            }\n            if (gtlt === '<') {\n                pr = '-0';\n            }\n            ret = `${gtlt + M}.${m}.${p}${pr}`;\n        }\n        else if (xm) {\n            ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;\n        }\n        else if (xp) {\n            ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;\n        }\n        return ret;\n    });\n}\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L488\n//\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nfunction replaceHyphen(comp, options) {\n    const r = HYPHENRANGE_REGEXP;\n    return comp.replace(r, (_, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr) => {\n        if (isX(fM)) {\n            from = '';\n        }\n        else if (isX(fm)) {\n            from = `>=${fM}.0.0${options?.includePrerelease ? '-0' : ''}`;\n        }\n        else if (isX(fp)) {\n            from = `>=${fM}.${fm}.0${options?.includePrerelease ? '-0' : ''}`;\n        }\n        else if (fpr) {\n            from = `>=${from}`;\n        }\n        else {\n            from = `>=${from}${options?.includePrerelease ? '-0' : ''}`;\n        }\n        if (isX(tM)) {\n            to = '';\n        }\n        else if (isX(tm)) {\n            to = `<${+tM + 1}.0.0-0`;\n        }\n        else if (isX(tp)) {\n            to = `<${tM}.${+tm + 1}.0-0`;\n        }\n        else if (tpr) {\n            to = `<=${tM}.${tm}.${tp}-${tpr}`;\n        }\n        else if (options?.includePrerelease) {\n            to = `<${tM}.${tm}.${+tp + 1}-0`;\n        }\n        else {\n            to = `<=${to}`;\n        }\n        return `${from} ${to}`.trim();\n    });\n}\n//# sourceMappingURL=semver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semver.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js ***!
  \*****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ shimmer),\n/* harmony export */   massUnwrap: () => (/* binding */ massUnwrap),\n/* harmony export */   massWrap: () => (/* binding */ massWrap),\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default to complaining loudly when things don't go according to plan.\n// eslint-disable-next-line no-console\nlet logger = console.error.bind(console);\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty(obj, name, value) {\n    const enumerable = !!obj[name] &&\n        Object.prototype.propertyIsEnumerable.call(obj, name);\n    Object.defineProperty(obj, name, {\n        configurable: true,\n        enumerable,\n        writable: true,\n        value,\n    });\n}\nconst wrap = (nodule, name, wrapper) => {\n    if (!nodule || !nodule[name]) {\n        logger('no original function ' + String(name) + ' to wrap');\n        return;\n    }\n    if (!wrapper) {\n        logger('no wrapper function');\n        logger(new Error().stack);\n        return;\n    }\n    const original = nodule[name];\n    if (typeof original !== 'function' || typeof wrapper !== 'function') {\n        logger('original object and wrapper must be functions');\n        return;\n    }\n    const wrapped = wrapper(original, name);\n    defineProperty(wrapped, '__original', original);\n    defineProperty(wrapped, '__unwrap', () => {\n        if (nodule[name] === wrapped) {\n            defineProperty(nodule, name, original);\n        }\n    });\n    defineProperty(wrapped, '__wrapped', true);\n    defineProperty(nodule, name, wrapped);\n    return wrapped;\n};\nconst massWrap = (nodules, names, wrapper) => {\n    if (!nodules) {\n        logger('must provide one or more modules to patch');\n        logger(new Error().stack);\n        return;\n    }\n    else if (!Array.isArray(nodules)) {\n        nodules = [nodules];\n    }\n    if (!(names && Array.isArray(names))) {\n        logger('must provide one or more functions to wrap on modules');\n        return;\n    }\n    nodules.forEach(nodule => {\n        names.forEach(name => {\n            wrap(nodule, name, wrapper);\n        });\n    });\n};\nconst unwrap = (nodule, name) => {\n    if (!nodule || !nodule[name]) {\n        logger('no function to unwrap.');\n        logger(new Error().stack);\n        return;\n    }\n    const wrapped = nodule[name];\n    if (!wrapped.__unwrap) {\n        logger('no original to unwrap to -- has ' +\n            String(name) +\n            ' already been unwrapped?');\n    }\n    else {\n        wrapped.__unwrap();\n        return;\n    }\n};\nconst massUnwrap = (nodules, names) => {\n    if (!nodules) {\n        logger('must provide one or more modules to patch');\n        logger(new Error().stack);\n        return;\n    }\n    else if (!Array.isArray(nodules)) {\n        nodules = [nodules];\n    }\n    if (!(names && Array.isArray(names))) {\n        logger('must provide one or more functions to unwrap on modules');\n        return;\n    }\n    nodules.forEach(nodule => {\n        names.forEach(name => {\n            unwrap(nodule, name);\n        });\n    });\n};\nfunction shimmer(options) {\n    if (options && options.logger) {\n        if (typeof options.logger !== 'function') {\n            logger(\"new logger isn't a function, not replacing\");\n        }\n        else {\n            logger = options.logger;\n        }\n    }\n}\nshimmer.wrap = wrap;\nshimmer.massWrap = massWrap;\nshimmer.unwrap = unwrap;\nshimmer.massUnwrap = massUnwrap;\n//# sourceMappingURL=shimmer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vc2hpbW1lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uQDAuMjA0LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3NoaW1tZXIuanM/NWFhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLy8gRGVmYXVsdCB0byBjb21wbGFpbmluZyBsb3VkbHkgd2hlbiB0aGluZ3MgZG9uJ3QgZ28gYWNjb3JkaW5nIHRvIHBsYW4uXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxubGV0IGxvZ2dlciA9IGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlKTtcbi8vIFNldHMgYSBwcm9wZXJ0eSBvbiBhbiBvYmplY3QsIHByZXNlcnZpbmcgaXRzIGVudW1lcmFiaWxpdHkuXG4vLyBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgcHJvcGVydHkgaXMgYWxyZWFkeSB3cml0YWJsZS5cbmZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KG9iaiwgbmFtZSwgdmFsdWUpIHtcbiAgICBjb25zdCBlbnVtZXJhYmxlID0gISFvYmpbbmFtZV0gJiZcbiAgICAgICAgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iaiwgbmFtZSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgbmFtZSwge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGUsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZSxcbiAgICB9KTtcbn1cbmV4cG9ydCBjb25zdCB3cmFwID0gKG5vZHVsZSwgbmFtZSwgd3JhcHBlcikgPT4ge1xuICAgIGlmICghbm9kdWxlIHx8ICFub2R1bGVbbmFtZV0pIHtcbiAgICAgICAgbG9nZ2VyKCdubyBvcmlnaW5hbCBmdW5jdGlvbiAnICsgU3RyaW5nKG5hbWUpICsgJyB0byB3cmFwJyk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCF3cmFwcGVyKSB7XG4gICAgICAgIGxvZ2dlcignbm8gd3JhcHBlciBmdW5jdGlvbicpO1xuICAgICAgICBsb2dnZXIobmV3IEVycm9yKCkuc3RhY2spO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG9yaWdpbmFsID0gbm9kdWxlW25hbWVdO1xuICAgIGlmICh0eXBlb2Ygb3JpZ2luYWwgIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIHdyYXBwZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgbG9nZ2VyKCdvcmlnaW5hbCBvYmplY3QgYW5kIHdyYXBwZXIgbXVzdCBiZSBmdW5jdGlvbnMnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB3cmFwcGVkID0gd3JhcHBlcihvcmlnaW5hbCwgbmFtZSk7XG4gICAgZGVmaW5lUHJvcGVydHkod3JhcHBlZCwgJ19fb3JpZ2luYWwnLCBvcmlnaW5hbCk7XG4gICAgZGVmaW5lUHJvcGVydHkod3JhcHBlZCwgJ19fdW53cmFwJywgKCkgPT4ge1xuICAgICAgICBpZiAobm9kdWxlW25hbWVdID09PSB3cmFwcGVkKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eShub2R1bGUsIG5hbWUsIG9yaWdpbmFsKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGRlZmluZVByb3BlcnR5KHdyYXBwZWQsICdfX3dyYXBwZWQnLCB0cnVlKTtcbiAgICBkZWZpbmVQcm9wZXJ0eShub2R1bGUsIG5hbWUsIHdyYXBwZWQpO1xuICAgIHJldHVybiB3cmFwcGVkO1xufTtcbmV4cG9ydCBjb25zdCBtYXNzV3JhcCA9IChub2R1bGVzLCBuYW1lcywgd3JhcHBlcikgPT4ge1xuICAgIGlmICghbm9kdWxlcykge1xuICAgICAgICBsb2dnZXIoJ211c3QgcHJvdmlkZSBvbmUgb3IgbW9yZSBtb2R1bGVzIHRvIHBhdGNoJyk7XG4gICAgICAgIGxvZ2dlcihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkobm9kdWxlcykpIHtcbiAgICAgICAgbm9kdWxlcyA9IFtub2R1bGVzXTtcbiAgICB9XG4gICAgaWYgKCEobmFtZXMgJiYgQXJyYXkuaXNBcnJheShuYW1lcykpKSB7XG4gICAgICAgIGxvZ2dlcignbXVzdCBwcm92aWRlIG9uZSBvciBtb3JlIGZ1bmN0aW9ucyB0byB3cmFwIG9uIG1vZHVsZXMnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBub2R1bGVzLmZvckVhY2gobm9kdWxlID0+IHtcbiAgICAgICAgbmFtZXMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgICAgICAgIHdyYXAobm9kdWxlLCBuYW1lLCB3cmFwcGVyKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IHVud3JhcCA9IChub2R1bGUsIG5hbWUpID0+IHtcbiAgICBpZiAoIW5vZHVsZSB8fCAhbm9kdWxlW25hbWVdKSB7XG4gICAgICAgIGxvZ2dlcignbm8gZnVuY3Rpb24gdG8gdW53cmFwLicpO1xuICAgICAgICBsb2dnZXIobmV3IEVycm9yKCkuc3RhY2spO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHdyYXBwZWQgPSBub2R1bGVbbmFtZV07XG4gICAgaWYgKCF3cmFwcGVkLl9fdW53cmFwKSB7XG4gICAgICAgIGxvZ2dlcignbm8gb3JpZ2luYWwgdG8gdW53cmFwIHRvIC0tIGhhcyAnICtcbiAgICAgICAgICAgIFN0cmluZyhuYW1lKSArXG4gICAgICAgICAgICAnIGFscmVhZHkgYmVlbiB1bndyYXBwZWQ/Jyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB3cmFwcGVkLl9fdW53cmFwKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59O1xuZXhwb3J0IGNvbnN0IG1hc3NVbndyYXAgPSAobm9kdWxlcywgbmFtZXMpID0+IHtcbiAgICBpZiAoIW5vZHVsZXMpIHtcbiAgICAgICAgbG9nZ2VyKCdtdXN0IHByb3ZpZGUgb25lIG9yIG1vcmUgbW9kdWxlcyB0byBwYXRjaCcpO1xuICAgICAgICBsb2dnZXIobmV3IEVycm9yKCkuc3RhY2spO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KG5vZHVsZXMpKSB7XG4gICAgICAgIG5vZHVsZXMgPSBbbm9kdWxlc107XG4gICAgfVxuICAgIGlmICghKG5hbWVzICYmIEFycmF5LmlzQXJyYXkobmFtZXMpKSkge1xuICAgICAgICBsb2dnZXIoJ211c3QgcHJvdmlkZSBvbmUgb3IgbW9yZSBmdW5jdGlvbnMgdG8gdW53cmFwIG9uIG1vZHVsZXMnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBub2R1bGVzLmZvckVhY2gobm9kdWxlID0+IHtcbiAgICAgICAgbmFtZXMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgICAgICAgIHVud3JhcChub2R1bGUsIG5hbWUpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzaGltbWVyKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmxvZ2dlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9nZ2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBsb2dnZXIoXCJuZXcgbG9nZ2VyIGlzbid0IGEgZnVuY3Rpb24sIG5vdCByZXBsYWNpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsb2dnZXIgPSBvcHRpb25zLmxvZ2dlcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbnNoaW1tZXIud3JhcCA9IHdyYXA7XG5zaGltbWVyLm1hc3NXcmFwID0gbWFzc1dyYXA7XG5zaGltbWVyLnVud3JhcCA9IHVud3JhcDtcbnNoaW1tZXIubWFzc1Vud3JhcCA9IG1hc3NVbndyYXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGltbWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/utils.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/utils.js ***!
  \***************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWrapped: () => (/* binding */ isWrapped),\n/* harmony export */   safeExecuteInTheMiddle: () => (/* binding */ safeExecuteInTheMiddle),\n/* harmony export */   safeExecuteInTheMiddleAsync: () => (/* binding */ safeExecuteInTheMiddleAsync)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nfunction safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nasync function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = await execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb25AMC4yMDQuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9lc20vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uQDAuMjA0LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3V0aWxzLmpzPzc5NDQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogZnVuY3Rpb24gdG8gZXhlY3V0ZSBwYXRjaGVkIGZ1bmN0aW9uIGFuZCBiZWluZyBhYmxlIHRvIGNhdGNoIGVycm9yc1xuICogQHBhcmFtIGV4ZWN1dGUgLSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZFxuICogQHBhcmFtIG9uRmluaXNoIC0gY2FsbGJhY2sgdG8gcnVuIHdoZW4gZXhlY3V0ZSBmaW5pc2hlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gc2FmZUV4ZWN1dGVJblRoZU1pZGRsZShleGVjdXRlLCBvbkZpbmlzaCwgcHJldmVudFRocm93aW5nRXJyb3IpIHtcbiAgICBsZXQgZXJyb3I7XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cnkge1xuICAgICAgICByZXN1bHQgPSBleGVjdXRlKCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGVycm9yID0gZTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIG9uRmluaXNoKGVycm9yLCByZXN1bHQpO1xuICAgICAgICBpZiAoZXJyb3IgJiYgIXByZXZlbnRUaHJvd2luZ0Vycm9yKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbi8qKlxuICogQXN5bmMgZnVuY3Rpb24gdG8gZXhlY3V0ZSBwYXRjaGVkIGZ1bmN0aW9uIGFuZCBiZWluZyBhYmxlIHRvIGNhdGNoIGVycm9yc1xuICogQHBhcmFtIGV4ZWN1dGUgLSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZFxuICogQHBhcmFtIG9uRmluaXNoIC0gY2FsbGJhY2sgdG8gcnVuIHdoZW4gZXhlY3V0ZSBmaW5pc2hlc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2FmZUV4ZWN1dGVJblRoZU1pZGRsZUFzeW5jKGV4ZWN1dGUsIG9uRmluaXNoLCBwcmV2ZW50VGhyb3dpbmdFcnJvcikge1xuICAgIGxldCBlcnJvcjtcbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IGF3YWl0IGV4ZWN1dGUoKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgZXJyb3IgPSBlO1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgb25GaW5pc2goZXJyb3IsIHJlc3VsdCk7XG4gICAgICAgIGlmIChlcnJvciAmJiAhcHJldmVudFRocm93aW5nRXJyb3IpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuLyoqXG4gKiBDaGVja3MgaWYgY2VydGFpbiBmdW5jdGlvbiBoYXMgYmVlbiBhbHJlYWR5IHdyYXBwZWRcbiAqIEBwYXJhbSBmdW5jXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1dyYXBwZWQoZnVuYykge1xuICAgIHJldHVybiAodHlwZW9mIGZ1bmMgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgdHlwZW9mIGZ1bmMuX19vcmlnaW5hbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICB0eXBlb2YgZnVuYy5fX3Vud3JhcCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICBmdW5jLl9fd3JhcHBlZCA9PT0gdHJ1ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js ***!
  \*************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationAbstract: () => (/* binding */ InstrumentationAbstract)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/trace-api.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/metrics-api.js\");\n/* harmony import */ var _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @opentelemetry/api-logs */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api-logs@0.204.0/node_modules/@opentelemetry/api-logs/build/esm/index.js\");\n/* harmony import */ var _shimmer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shimmer */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n;globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"14.2.3\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nclass InstrumentationAbstract {\n    instrumentationName;\n    instrumentationVersion;\n    _config = {};\n    _tracer;\n    _meter;\n    _logger;\n    _diag;\n    constructor(instrumentationName, instrumentationVersion, config) {\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        this.setConfig(config);\n        this._diag = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.createComponentLogger({\n            namespace: instrumentationName,\n        });\n        this._tracer = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__.metrics.getMeter(instrumentationName, instrumentationVersion);\n        this._logger = _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_3__.logs.getLogger(instrumentationName, instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    /* Api to wrap instrumented method */\n    _wrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.wrap;\n    /* Api to unwrap instrumented methods */\n    _unwrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.unwrap;\n    /* Api to mass wrap instrumented method */\n    _massWrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.massWrap;\n    /* Api to mass unwrap instrumented methods */\n    _massUnwrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.massUnwrap;\n    /* Returns meter */\n    get meter() {\n        return this._meter;\n    }\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    setMeterProvider(meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    /* Returns logger */\n    get logger() {\n        return this._logger;\n    }\n    /**\n     * Sets LoggerProvider to this plugin\n     * @param loggerProvider\n     */\n    setLoggerProvider(loggerProvider) {\n        this._logger = loggerProvider.getLogger(this.instrumentationName, this.instrumentationVersion);\n    }\n    /**\n     * @experimental\n     *\n     * Get module definitions defined by {@link init}.\n     * This can be used for experimental compile-time instrumentation.\n     *\n     * @returns an array of {@link InstrumentationModuleDefinition}\n     */\n    getModuleDefinitions() {\n        const initResult = this.init() ?? [];\n        if (!Array.isArray(initResult)) {\n            return [initResult];\n        }\n        return initResult;\n    }\n    /**\n     * Sets the new metric instruments with the current Meter.\n     */\n    _updateMetricInstruments() {\n        return;\n    }\n    /* Returns InstrumentationConfig */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Sets InstrumentationConfig to this plugin\n     * @param config\n     */\n    setConfig(config) {\n        // copy config first level properties to ensure they are immutable.\n        // nested properties are not copied, thus are mutable from the outside.\n        this._config = {\n            enabled: true,\n            ...config,\n        };\n    }\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    setTracerProvider(tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    }\n    /* Returns tracer */\n    get tracer() {\n        return this._tracer;\n    }\n    /**\n     * Execute span customization hook, if configured, and log any errors.\n     * Any semantics of the trigger and info are defined by the specific instrumentation.\n     * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n     * @param triggerName The name of the trigger for executing the hook for logging purposes\n     * @param span The span to which the hook should be applied\n     * @param info The info object to be passed to the hook, with useful data the hook may use\n     */\n    _runSpanCustomizationHook(hookHandler, triggerName, span, info) {\n        if (!hookHandler) {\n            return;\n        }\n        try {\n            hookHandler(span, info);\n        }\n        catch (e) {\n            this._diag.error(`Error running span customization hook due to exception in handler`, { triggerName }, e);\n        }\n    }\n}\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationBase: () => (/* binding */ InstrumentationBase)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _semver__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../semver */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/semver.js\");\n/* harmony import */ var _shimmer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shimmer */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js\");\n/* harmony import */ var _instrumentation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js\");\n/* harmony import */ var _RequireInTheMiddleSingleton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RequireInTheMiddleSingleton */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js\");\n/* harmony import */ var import_in_the_middle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! import-in-the-middle */ \"(instrument)/../../node_modules/.pnpm/import-in-the-middle@1.15.0/node_modules/import-in-the-middle/index.js\");\n/* harmony import */ var import_in_the_middle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(import_in_the_middle__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! require-in-the-middle */ \"(instrument)/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/index.js\");\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(require_in_the_middle__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n;globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"14.2.3\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n\n\n\n\n\n\n\n\n\n\n/**\n * Base abstract class for instrumenting node plugins\n */\nclass InstrumentationBase extends _instrumentation__WEBPACK_IMPORTED_MODULE_5__.InstrumentationAbstract {\n    _modules;\n    _hooks = [];\n    _requireInTheMiddleSingleton = _RequireInTheMiddleSingleton__WEBPACK_IMPORTED_MODULE_6__.RequireInTheMiddleSingleton.getInstance();\n    _enabled = false;\n    constructor(instrumentationName, instrumentationVersion, config) {\n        super(instrumentationName, instrumentationVersion, config);\n        let modules = this.init();\n        if (modules && !Array.isArray(modules)) {\n            modules = [modules];\n        }\n        this._modules = modules || [];\n        if (this._config.enabled) {\n            this.enable();\n        }\n    }\n    _wrap = (moduleExports, name, wrapper) => {\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_7__.isWrapped)(moduleExports[name])) {\n            this._unwrap(moduleExports, name);\n        }\n        if (!util__WEBPACK_IMPORTED_MODULE_1__.types.isProxy(moduleExports)) {\n            return (0,_shimmer__WEBPACK_IMPORTED_MODULE_8__.wrap)(moduleExports, name, wrapper);\n        }\n        else {\n            const wrapped = (0,_shimmer__WEBPACK_IMPORTED_MODULE_8__.wrap)(Object.assign({}, moduleExports), name, wrapper);\n            Object.defineProperty(moduleExports, name, {\n                value: wrapped,\n            });\n            return wrapped;\n        }\n    };\n    _unwrap = (moduleExports, name) => {\n        if (!util__WEBPACK_IMPORTED_MODULE_1__.types.isProxy(moduleExports)) {\n            return (0,_shimmer__WEBPACK_IMPORTED_MODULE_8__.unwrap)(moduleExports, name);\n        }\n        else {\n            return Object.defineProperty(moduleExports, name, {\n                value: moduleExports[name],\n            });\n        }\n    };\n    _massWrap = (moduleExportsArray, names, wrapper) => {\n        if (!moduleExportsArray) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more modules to patch');\n            return;\n        }\n        else if (!Array.isArray(moduleExportsArray)) {\n            moduleExportsArray = [moduleExportsArray];\n        }\n        if (!(names && Array.isArray(names))) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more functions to wrap on modules');\n            return;\n        }\n        moduleExportsArray.forEach(moduleExports => {\n            names.forEach(name => {\n                this._wrap(moduleExports, name, wrapper);\n            });\n        });\n    };\n    _massUnwrap = (moduleExportsArray, names) => {\n        if (!moduleExportsArray) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more modules to patch');\n            return;\n        }\n        else if (!Array.isArray(moduleExportsArray)) {\n            moduleExportsArray = [moduleExportsArray];\n        }\n        if (!(names && Array.isArray(names))) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more functions to wrap on modules');\n            return;\n        }\n        moduleExportsArray.forEach(moduleExports => {\n            names.forEach(name => {\n                this._unwrap(moduleExports, name);\n            });\n        });\n    };\n    _warnOnPreloadedModules() {\n        this._modules.forEach((module) => {\n            const { name } = module;\n            try {\n                const resolvedModule = /*require.resolve*/(__webpack_require__(\"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive\").resolve(name));\n                if (__webpack_require__.c[resolvedModule]) {\n                    // Module is already cached, which means the instrumentation hook might not work\n                    this._diag.warn(`Module ${name} has been loaded before ${this.instrumentationName} so it might not work, please initialize it before requiring ${name}`);\n                }\n            }\n            catch {\n                // Module isn't available, we can simply skip\n            }\n        });\n    }\n    _extractPackageVersion(baseDir) {\n        try {\n            const json = (0,fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync)(path__WEBPACK_IMPORTED_MODULE_0__.join(baseDir, 'package.json'), {\n                encoding: 'utf8',\n            });\n            const version = JSON.parse(json).version;\n            return typeof version === 'string' ? version : undefined;\n        }\n        catch {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.warn('Failed extracting version', baseDir);\n        }\n        return undefined;\n    }\n    _onRequire(module, exports, name, baseDir) {\n        if (!baseDir) {\n            if (typeof module.patch === 'function') {\n                module.moduleExports = exports;\n                if (this._enabled) {\n                    this._diag.debug('Applying instrumentation patch for nodejs core module on require hook', {\n                        module: module.name,\n                    });\n                    return module.patch(exports);\n                }\n            }\n            return exports;\n        }\n        const version = this._extractPackageVersion(baseDir);\n        module.moduleVersion = version;\n        if (module.name === name) {\n            // main module\n            if (isSupported(module.supportedVersions, version, module.includePrerelease)) {\n                if (typeof module.patch === 'function') {\n                    module.moduleExports = exports;\n                    if (this._enabled) {\n                        this._diag.debug('Applying instrumentation patch for module on require hook', {\n                            module: module.name,\n                            version: module.moduleVersion,\n                            baseDir,\n                        });\n                        return module.patch(exports, module.moduleVersion);\n                    }\n                }\n            }\n            return exports;\n        }\n        // internal file\n        const files = module.files ?? [];\n        const normalizedName = path__WEBPACK_IMPORTED_MODULE_0__.normalize(name);\n        const supportedFileInstrumentations = files\n            .filter(f => f.name === normalizedName)\n            .filter(f => isSupported(f.supportedVersions, version, module.includePrerelease));\n        return supportedFileInstrumentations.reduce((patchedExports, file) => {\n            file.moduleExports = patchedExports;\n            if (this._enabled) {\n                this._diag.debug('Applying instrumentation patch for nodejs module file on require hook', {\n                    module: module.name,\n                    version: module.moduleVersion,\n                    fileName: file.name,\n                    baseDir,\n                });\n                // patch signature is not typed, so we cast it assuming it's correct\n                return file.patch(patchedExports, module.moduleVersion);\n            }\n            return patchedExports;\n        }, exports);\n    }\n    enable() {\n        if (this._enabled) {\n            return;\n        }\n        this._enabled = true;\n        // already hooked, just call patch again\n        if (this._hooks.length > 0) {\n            for (const module of this._modules) {\n                if (typeof module.patch === 'function' && module.moduleExports) {\n                    this._diag.debug('Applying instrumentation patch for nodejs module on instrumentation enabled', {\n                        module: module.name,\n                        version: module.moduleVersion,\n                    });\n                    module.patch(module.moduleExports, module.moduleVersion);\n                }\n                for (const file of module.files) {\n                    if (file.moduleExports) {\n                        this._diag.debug('Applying instrumentation patch for nodejs module file on instrumentation enabled', {\n                            module: module.name,\n                            version: module.moduleVersion,\n                            fileName: file.name,\n                        });\n                        file.patch(file.moduleExports, module.moduleVersion);\n                    }\n                }\n            }\n            return;\n        }\n        this._warnOnPreloadedModules();\n        for (const module of this._modules) {\n            const hookFn = (exports, name, baseDir) => {\n                if (!baseDir && path__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(name)) {\n                    const parsedPath = path__WEBPACK_IMPORTED_MODULE_0__.parse(name);\n                    name = parsedPath.name;\n                    baseDir = parsedPath.dir;\n                }\n                return this._onRequire(module, exports, name, baseDir);\n            };\n            const onRequire = (exports, name, baseDir) => {\n                return this._onRequire(module, exports, name, baseDir);\n            };\n            // `RequireInTheMiddleSingleton` does not support absolute paths.\n            // For an absolute paths, we must create a separate instance of the\n            // require-in-the-middle `Hook`.\n            const hook = path__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(module.name)\n                ? new require_in_the_middle__WEBPACK_IMPORTED_MODULE_3__.Hook([module.name], { internals: true }, onRequire)\n                : this._requireInTheMiddleSingleton.register(module.name, onRequire);\n            this._hooks.push(hook);\n            const esmHook = new import_in_the_middle__WEBPACK_IMPORTED_MODULE_2__.Hook([module.name], { internals: false }, hookFn);\n            this._hooks.push(esmHook);\n        }\n    }\n    disable() {\n        if (!this._enabled) {\n            return;\n        }\n        this._enabled = false;\n        for (const module of this._modules) {\n            if (typeof module.unpatch === 'function' && module.moduleExports) {\n                this._diag.debug('Removing instrumentation patch for nodejs module on instrumentation disabled', {\n                    module: module.name,\n                    version: module.moduleVersion,\n                });\n                module.unpatch(module.moduleExports, module.moduleVersion);\n            }\n            for (const file of module.files) {\n                if (file.moduleExports) {\n                    this._diag.debug('Removing instrumentation patch for nodejs module file on instrumentation disabled', {\n                        module: module.name,\n                        version: module.moduleVersion,\n                        fileName: file.name,\n                    });\n                    file.unpatch(file.moduleExports, module.moduleVersion);\n                }\n            }\n        }\n    }\n    isEnabled() {\n        return this._enabled;\n    }\n}\nfunction isSupported(supportedVersions, version, includePrerelease) {\n    if (typeof version === 'undefined') {\n        // If we don't have the version, accept the wildcard case only\n        return supportedVersions.includes('*');\n    }\n    return supportedVersions.some(supportedVersion => {\n        return (0,_semver__WEBPACK_IMPORTED_MODULE_10__.satisfies)(version, supportedVersion, { includePrerelease });\n    });\n}\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js\n");

/***/ })

};
;