"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/index.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/index.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MongooseInstrumentation = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar mongoose_1 = __webpack_require__(/*! ./mongoose */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/mongoose.js\");\nObject.defineProperty(exports, \"MongooseInstrumentation\", ({ enumerable: true, get: function () { return mongoose_1.MongooseInstrumentation; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbW9uZ29vc2VAMC41MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW1vbmdvb3NlL2J1aWxkL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsNE1BQVk7QUFDckMsMkRBQTBELEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ2hKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbW9uZ29vc2VAMC41MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW1vbmdvb3NlL2J1aWxkL3NyYy9pbmRleC5qcz8zZmRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Nb25nb29zZUluc3RydW1lbnRhdGlvbiA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgbW9uZ29vc2VfMSA9IHJlcXVpcmUoXCIuL21vbmdvb3NlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTW9uZ29vc2VJbnN0cnVtZW50YXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vbmdvb3NlXzEuTW9uZ29vc2VJbnN0cnVtZW50YXRpb247IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/mongoose.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/mongoose.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MongooseInstrumentation = exports._STORED_PARENT_SPAN = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/utils.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/version.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst contextCaptureFunctionsCommon = [\n    'deleteOne',\n    'deleteMany',\n    'find',\n    'findOne',\n    'estimatedDocumentCount',\n    'countDocuments',\n    'distinct',\n    'where',\n    '$where',\n    'findOneAndUpdate',\n    'findOneAndDelete',\n    'findOneAndReplace',\n];\nconst contextCaptureFunctions6 = [\n    'remove',\n    'count',\n    'findOneAndRemove',\n    ...contextCaptureFunctionsCommon,\n];\nconst contextCaptureFunctions7 = [\n    'count',\n    'findOneAndRemove',\n    ...contextCaptureFunctionsCommon,\n];\nconst contextCaptureFunctions8 = [...contextCaptureFunctionsCommon];\nfunction getContextCaptureFunctions(moduleVersion) {\n    /* istanbul ignore next */\n    if (!moduleVersion) {\n        return contextCaptureFunctionsCommon;\n    }\n    else if (moduleVersion.startsWith('6.') || moduleVersion.startsWith('5.')) {\n        return contextCaptureFunctions6;\n    }\n    else if (moduleVersion.startsWith('7.')) {\n        return contextCaptureFunctions7;\n    }\n    else {\n        return contextCaptureFunctions8;\n    }\n}\nfunction instrumentRemove(moduleVersion) {\n    return ((moduleVersion &&\n        (moduleVersion.startsWith('5.') || moduleVersion.startsWith('6.'))) ||\n        false);\n}\n// when mongoose functions are called, we store the original call context\n// and then set it as the parent for the spans created by Query/Aggregate exec()\n// calls. this bypass the unlinked spans issue on thenables await operations.\nexports._STORED_PARENT_SPAN = Symbol('stored-parent-span');\nclass MongooseInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n    }\n    init() {\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition('mongoose', ['>=5.9.7 <9'], this.patch.bind(this), this.unpatch.bind(this));\n        return module;\n    }\n    patch(module, moduleVersion) {\n        const moduleExports = module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        this._wrap(moduleExports.Model.prototype, 'save', this.patchOnModelMethods('save', moduleVersion));\n        // mongoose applies this code on module require:\n        // Model.prototype.$save = Model.prototype.save;\n        // which captures the save function before it is patched.\n        // so we need to apply the same logic after instrumenting the save function.\n        moduleExports.Model.prototype.$save = moduleExports.Model.prototype.save;\n        if (instrumentRemove(moduleVersion)) {\n            this._wrap(moduleExports.Model.prototype, 'remove', this.patchOnModelMethods('remove', moduleVersion));\n        }\n        this._wrap(moduleExports.Query.prototype, 'exec', this.patchQueryExec(moduleVersion));\n        this._wrap(moduleExports.Aggregate.prototype, 'exec', this.patchAggregateExec(moduleVersion));\n        const contextCaptureFunctions = getContextCaptureFunctions(moduleVersion);\n        contextCaptureFunctions.forEach((funcName) => {\n            this._wrap(moduleExports.Query.prototype, funcName, this.patchAndCaptureSpanContext(funcName));\n        });\n        this._wrap(moduleExports.Model, 'aggregate', this.patchModelAggregate());\n        this._wrap(moduleExports.Model, 'insertMany', this.patchModelStatic('insertMany', moduleVersion));\n        this._wrap(moduleExports.Model, 'bulkWrite', this.patchModelStatic('bulkWrite', moduleVersion));\n        return moduleExports;\n    }\n    unpatch(module, moduleVersion) {\n        const moduleExports = module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        const contextCaptureFunctions = getContextCaptureFunctions(moduleVersion);\n        this._unwrap(moduleExports.Model.prototype, 'save');\n        // revert the patch for $save which we applied by aliasing it to patched `save`\n        moduleExports.Model.prototype.$save = moduleExports.Model.prototype.save;\n        if (instrumentRemove(moduleVersion)) {\n            this._unwrap(moduleExports.Model.prototype, 'remove');\n        }\n        this._unwrap(moduleExports.Query.prototype, 'exec');\n        this._unwrap(moduleExports.Aggregate.prototype, 'exec');\n        contextCaptureFunctions.forEach((funcName) => {\n            this._unwrap(moduleExports.Query.prototype, funcName);\n        });\n        this._unwrap(moduleExports.Model, 'aggregate');\n        this._unwrap(moduleExports.Model, 'insertMany');\n        this._unwrap(moduleExports.Model, 'bulkWrite');\n    }\n    patchAggregateExec(moduleVersion) {\n        const self = this;\n        return (originalAggregate) => {\n            return function exec(callback) {\n                if (self.getConfig().requireParentSpan &&\n                    api_1.trace.getSpan(api_1.context.active()) === undefined) {\n                    return originalAggregate.apply(this, arguments);\n                }\n                const parentSpan = this[exports._STORED_PARENT_SPAN];\n                const attributes = {};\n                const { dbStatementSerializer } = self.getConfig();\n                if (dbStatementSerializer) {\n                    attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = dbStatementSerializer('aggregate', {\n                        options: this.options,\n                        aggregatePipeline: this._pipeline,\n                    });\n                }\n                const span = self._startSpan(this._model.collection, this._model?.modelName, 'aggregate', attributes, parentSpan);\n                return self._handleResponse(span, originalAggregate, this, arguments, callback, moduleVersion);\n            };\n        };\n    }\n    patchQueryExec(moduleVersion) {\n        const self = this;\n        return (originalExec) => {\n            return function exec(callback) {\n                if (self.getConfig().requireParentSpan &&\n                    api_1.trace.getSpan(api_1.context.active()) === undefined) {\n                    return originalExec.apply(this, arguments);\n                }\n                const parentSpan = this[exports._STORED_PARENT_SPAN];\n                const attributes = {};\n                const { dbStatementSerializer } = self.getConfig();\n                if (dbStatementSerializer) {\n                    attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = dbStatementSerializer(this.op, {\n                        condition: this._conditions,\n                        updates: this._update,\n                        options: this.options,\n                        fields: this._fields,\n                    });\n                }\n                const span = self._startSpan(this.mongooseCollection, this.model.modelName, this.op, attributes, parentSpan);\n                return self._handleResponse(span, originalExec, this, arguments, callback, moduleVersion);\n            };\n        };\n    }\n    patchOnModelMethods(op, moduleVersion) {\n        const self = this;\n        return (originalOnModelFunction) => {\n            return function method(options, callback) {\n                if (self.getConfig().requireParentSpan &&\n                    api_1.trace.getSpan(api_1.context.active()) === undefined) {\n                    return originalOnModelFunction.apply(this, arguments);\n                }\n                const serializePayload = { document: this };\n                if (options && !(options instanceof Function)) {\n                    serializePayload.options = options;\n                }\n                const attributes = {};\n                const { dbStatementSerializer } = self.getConfig();\n                if (dbStatementSerializer) {\n                    attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = dbStatementSerializer(op, serializePayload);\n                }\n                const span = self._startSpan(this.constructor.collection, this.constructor.modelName, op, attributes);\n                if (options instanceof Function) {\n                    callback = options;\n                    options = undefined;\n                }\n                return self._handleResponse(span, originalOnModelFunction, this, arguments, callback, moduleVersion);\n            };\n        };\n    }\n    patchModelStatic(op, moduleVersion) {\n        const self = this;\n        return (original) => {\n            return function patchedStatic(docsOrOps, options, callback) {\n                if (self.getConfig().requireParentSpan &&\n                    api_1.trace.getSpan(api_1.context.active()) === undefined) {\n                    return original.apply(this, arguments);\n                }\n                if (typeof options === 'function') {\n                    callback = options;\n                    options = undefined;\n                }\n                const serializePayload = {};\n                switch (op) {\n                    case 'insertMany':\n                        serializePayload.documents = docsOrOps;\n                        break;\n                    case 'bulkWrite':\n                        serializePayload.operations = docsOrOps;\n                        break;\n                    default:\n                        serializePayload.document = docsOrOps;\n                        break;\n                }\n                if (options !== undefined) {\n                    serializePayload.options = options;\n                }\n                const attributes = {};\n                const { dbStatementSerializer } = self.getConfig();\n                if (dbStatementSerializer) {\n                    attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = dbStatementSerializer(op, serializePayload);\n                }\n                const span = self._startSpan(this.collection, this.modelName, op, attributes);\n                return self._handleResponse(span, original, this, arguments, callback, moduleVersion);\n            };\n        };\n    }\n    // we want to capture the otel span on the object which is calling exec.\n    // in the special case of aggregate, we need have no function to path\n    // on the Aggregate object to capture the context on, so we patch\n    // the aggregate of Model, and set the context on the Aggregate object\n    patchModelAggregate() {\n        const self = this;\n        return (original) => {\n            return function captureSpanContext() {\n                const currentSpan = api_1.trace.getSpan(api_1.context.active());\n                const aggregate = self._callOriginalFunction(() => original.apply(this, arguments));\n                if (aggregate)\n                    aggregate[exports._STORED_PARENT_SPAN] = currentSpan;\n                return aggregate;\n            };\n        };\n    }\n    patchAndCaptureSpanContext(funcName) {\n        const self = this;\n        return (original) => {\n            return function captureSpanContext() {\n                this[exports._STORED_PARENT_SPAN] = api_1.trace.getSpan(api_1.context.active());\n                return self._callOriginalFunction(() => original.apply(this, arguments));\n            };\n        };\n    }\n    _startSpan(collection, modelName, operation, attributes, parentSpan) {\n        return this.tracer.startSpan(`mongoose.${modelName}.${operation}`, {\n            kind: api_1.SpanKind.CLIENT,\n            attributes: {\n                ...attributes,\n                ...(0, utils_1.getAttributesFromCollection)(collection),\n                [semantic_conventions_1.SEMATTRS_DB_OPERATION]: operation,\n                [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: 'mongoose',\n            },\n        }, parentSpan ? api_1.trace.setSpan(api_1.context.active(), parentSpan) : undefined);\n    }\n    _handleResponse(span, exec, originalThis, args, callback, moduleVersion = undefined) {\n        const self = this;\n        if (callback instanceof Function) {\n            return self._callOriginalFunction(() => (0, utils_1.handleCallbackResponse)(callback, exec, originalThis, span, args, self.getConfig().responseHook, moduleVersion));\n        }\n        else {\n            const response = self._callOriginalFunction(() => exec.apply(originalThis, args));\n            return (0, utils_1.handlePromiseResponse)(response, span, self.getConfig().responseHook, moduleVersion);\n        }\n    }\n    _callOriginalFunction(originalFunction) {\n        if (this.getConfig().suppressInternalInstrumentation) {\n            return api_1.context.with((0, core_1.suppressTracing)(api_1.context.active()), originalFunction);\n        }\n        else {\n            return originalFunction();\n        }\n    }\n}\nexports.MongooseInstrumentation = MongooseInstrumentation;\n//# sourceMappingURL=mongoose.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/mongoose.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/utils.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/utils.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.handleCallbackResponse = exports.handlePromiseResponse = exports.getAttributesFromCollection = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nfunction getAttributesFromCollection(collection) {\n    return {\n        [semantic_conventions_1.SEMATTRS_DB_MONGODB_COLLECTION]: collection.name,\n        [semantic_conventions_1.SEMATTRS_DB_NAME]: collection.conn.name,\n        [semantic_conventions_1.SEMATTRS_DB_USER]: collection.conn.user,\n        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: collection.conn.host,\n        [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: collection.conn.port,\n    };\n}\nexports.getAttributesFromCollection = getAttributesFromCollection;\nfunction setErrorStatus(span, error = {}) {\n    span.recordException(error);\n    span.setStatus({\n        code: api_1.SpanStatusCode.ERROR,\n        message: `${error.message} ${error.code ? `\\nMongoose Error Code: ${error.code}` : ''}`,\n    });\n}\nfunction applyResponseHook(span, response, responseHook, moduleVersion = undefined) {\n    if (!responseHook) {\n        return;\n    }\n    (0, instrumentation_1.safeExecuteInTheMiddle)(() => responseHook(span, { moduleVersion, response }), e => {\n        if (e) {\n            api_1.diag.error('mongoose instrumentation: responseHook error', e);\n        }\n    }, true);\n}\nfunction handlePromiseResponse(execResponse, span, responseHook, moduleVersion = undefined) {\n    if (!(execResponse instanceof Promise)) {\n        applyResponseHook(span, execResponse, responseHook, moduleVersion);\n        span.end();\n        return execResponse;\n    }\n    return execResponse\n        .then(response => {\n        applyResponseHook(span, response, responseHook, moduleVersion);\n        return response;\n    })\n        .catch(err => {\n        setErrorStatus(span, err);\n        throw err;\n    })\n        .finally(() => span.end());\n}\nexports.handlePromiseResponse = handlePromiseResponse;\nfunction handleCallbackResponse(callback, exec, originalThis, span, args, responseHook, moduleVersion = undefined) {\n    let callbackArgumentIndex = 0;\n    if (args.length === 2) {\n        callbackArgumentIndex = 1;\n    }\n    else if (args.length === 3) {\n        callbackArgumentIndex = 2;\n    }\n    args[callbackArgumentIndex] = (err, response) => {\n        err\n            ? setErrorStatus(span, err)\n            : applyResponseHook(span, response, responseHook, moduleVersion);\n        span.end();\n        return callback(err, response);\n    };\n    return exec.apply(originalThis, args);\n}\nexports.handleCallbackResponse = handleCallbackResponse;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbW9uZ29vc2VAMC41MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW1vbmdvb3NlL2J1aWxkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyw2QkFBNkIsR0FBRyxtQ0FBbUM7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLDZJQUFvQjtBQUMxQywwQkFBMEIsbUJBQU8sQ0FBQyw0TUFBZ0M7QUFDbEUsK0JBQStCLG1CQUFPLENBQUMsaU1BQXFDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQyx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGVBQWUsRUFBRSx1Q0FBdUMsV0FBVyxPQUFPO0FBQzlGLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLHlCQUF5QjtBQUN0RztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbW9uZ29vc2VAMC41MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW1vbmdvb3NlL2J1aWxkL3NyYy91dGlscy5qcz9lM2M4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVDYWxsYmFja1Jlc3BvbnNlID0gZXhwb3J0cy5oYW5kbGVQcm9taXNlUmVzcG9uc2UgPSBleHBvcnRzLmdldEF0dHJpYnV0ZXNGcm9tQ29sbGVjdGlvbiA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBpbnN0cnVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb25cIik7XG5jb25zdCBzZW1hbnRpY19jb252ZW50aW9uc18xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zXCIpO1xuZnVuY3Rpb24gZ2V0QXR0cmlidXRlc0Zyb21Db2xsZWN0aW9uKGNvbGxlY3Rpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9NT05HT0RCX0NPTExFQ1RJT05dOiBjb2xsZWN0aW9uLm5hbWUsXG4gICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX05BTUVdOiBjb2xsZWN0aW9uLmNvbm4ubmFtZSxcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfVVNFUl06IGNvbGxlY3Rpb24uY29ubi51c2VyLFxuICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9OQU1FXTogY29sbGVjdGlvbi5jb25uLmhvc3QsXG4gICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX05FVF9QRUVSX1BPUlRdOiBjb2xsZWN0aW9uLmNvbm4ucG9ydCxcbiAgICB9O1xufVxuZXhwb3J0cy5nZXRBdHRyaWJ1dGVzRnJvbUNvbGxlY3Rpb24gPSBnZXRBdHRyaWJ1dGVzRnJvbUNvbGxlY3Rpb247XG5mdW5jdGlvbiBzZXRFcnJvclN0YXR1cyhzcGFuLCBlcnJvciA9IHt9KSB7XG4gICAgc3Bhbi5yZWNvcmRFeGNlcHRpb24oZXJyb3IpO1xuICAgIHNwYW4uc2V0U3RhdHVzKHtcbiAgICAgICAgY29kZTogYXBpXzEuU3BhblN0YXR1c0NvZGUuRVJST1IsXG4gICAgICAgIG1lc3NhZ2U6IGAke2Vycm9yLm1lc3NhZ2V9ICR7ZXJyb3IuY29kZSA/IGBcXG5Nb25nb29zZSBFcnJvciBDb2RlOiAke2Vycm9yLmNvZGV9YCA6ICcnfWAsXG4gICAgfSk7XG59XG5mdW5jdGlvbiBhcHBseVJlc3BvbnNlSG9vayhzcGFuLCByZXNwb25zZSwgcmVzcG9uc2VIb29rLCBtb2R1bGVWZXJzaW9uID0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKCFyZXNwb25zZUhvb2spIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAoMCwgaW5zdHJ1bWVudGF0aW9uXzEuc2FmZUV4ZWN1dGVJblRoZU1pZGRsZSkoKCkgPT4gcmVzcG9uc2VIb29rKHNwYW4sIHsgbW9kdWxlVmVyc2lvbiwgcmVzcG9uc2UgfSksIGUgPT4ge1xuICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgYXBpXzEuZGlhZy5lcnJvcignbW9uZ29vc2UgaW5zdHJ1bWVudGF0aW9uOiByZXNwb25zZUhvb2sgZXJyb3InLCBlKTtcbiAgICAgICAgfVxuICAgIH0sIHRydWUpO1xufVxuZnVuY3Rpb24gaGFuZGxlUHJvbWlzZVJlc3BvbnNlKGV4ZWNSZXNwb25zZSwgc3BhbiwgcmVzcG9uc2VIb29rLCBtb2R1bGVWZXJzaW9uID0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKCEoZXhlY1Jlc3BvbnNlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHtcbiAgICAgICAgYXBwbHlSZXNwb25zZUhvb2soc3BhbiwgZXhlY1Jlc3BvbnNlLCByZXNwb25zZUhvb2ssIG1vZHVsZVZlcnNpb24pO1xuICAgICAgICBzcGFuLmVuZCgpO1xuICAgICAgICByZXR1cm4gZXhlY1Jlc3BvbnNlO1xuICAgIH1cbiAgICByZXR1cm4gZXhlY1Jlc3BvbnNlXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgYXBwbHlSZXNwb25zZUhvb2soc3BhbiwgcmVzcG9uc2UsIHJlc3BvbnNlSG9vaywgbW9kdWxlVmVyc2lvbik7XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgc2V0RXJyb3JTdGF0dXMoc3BhbiwgZXJyKTtcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH0pXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHNwYW4uZW5kKCkpO1xufVxuZXhwb3J0cy5oYW5kbGVQcm9taXNlUmVzcG9uc2UgPSBoYW5kbGVQcm9taXNlUmVzcG9uc2U7XG5mdW5jdGlvbiBoYW5kbGVDYWxsYmFja1Jlc3BvbnNlKGNhbGxiYWNrLCBleGVjLCBvcmlnaW5hbFRoaXMsIHNwYW4sIGFyZ3MsIHJlc3BvbnNlSG9vaywgbW9kdWxlVmVyc2lvbiA9IHVuZGVmaW5lZCkge1xuICAgIGxldCBjYWxsYmFja0FyZ3VtZW50SW5kZXggPSAwO1xuICAgIGlmIChhcmdzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICBjYWxsYmFja0FyZ3VtZW50SW5kZXggPSAxO1xuICAgIH1cbiAgICBlbHNlIGlmIChhcmdzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICBjYWxsYmFja0FyZ3VtZW50SW5kZXggPSAyO1xuICAgIH1cbiAgICBhcmdzW2NhbGxiYWNrQXJndW1lbnRJbmRleF0gPSAoZXJyLCByZXNwb25zZSkgPT4ge1xuICAgICAgICBlcnJcbiAgICAgICAgICAgID8gc2V0RXJyb3JTdGF0dXMoc3BhbiwgZXJyKVxuICAgICAgICAgICAgOiBhcHBseVJlc3BvbnNlSG9vayhzcGFuLCByZXNwb25zZSwgcmVzcG9uc2VIb29rLCBtb2R1bGVWZXJzaW9uKTtcbiAgICAgICAgc3Bhbi5lbmQoKTtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVyciwgcmVzcG9uc2UpO1xuICAgIH07XG4gICAgcmV0dXJuIGV4ZWMuYXBwbHkob3JpZ2luYWxUaGlzLCBhcmdzKTtcbn1cbmV4cG9ydHMuaGFuZGxlQ2FsbGJhY2tSZXNwb25zZSA9IGhhbmRsZUNhbGxiYWNrUmVzcG9uc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/version.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/version.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.51.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-mongoose';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbW9uZ29vc2VAMC41MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW1vbmdvb3NlL2J1aWxkL3NyYy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QztBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1tb25nb29zZUAwLjUxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbW9uZ29vc2UvYnVpbGQvc3JjL3ZlcnNpb24uanM/NDMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9IGV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gdm9pZCAwO1xuLy8gdGhpcyBpcyBhdXRvZ2VuZXJhdGVkIGZpbGUsIHNlZSBzY3JpcHRzL3ZlcnNpb24tdXBkYXRlLmpzXG5leHBvcnRzLlBBQ0tBR0VfVkVSU0lPTiA9ICcwLjUxLjAnO1xuZXhwb3J0cy5QQUNLQUdFX05BTUUgPSAnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW1vbmdvb3NlJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mongoose@0.51.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mongoose/build/src/version.js\n");

/***/ })

};
;